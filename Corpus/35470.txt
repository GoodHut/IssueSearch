 URL : "https://github.com/bluss/rustfaq/issues/3" TITLE : elaboration on t: 'a BODY : while the explanation of t: 'a is pretty good, i think it'd be nice to also add the following. t: 'a simply means that, if t is a type generic over lifetimes, then all those lifetimes outlive 'a . for example: foo: 'a doesn't constrain anything. bar<'x>: 'a implies 'x: 'a . baz<'x, 'y, 'z>: 'a implies 'x: 'a && 'y: 'a && 'z: 'a .