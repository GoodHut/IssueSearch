 URL : "https://github.com/JuliaLang/JuliaParser.jl/issues/77" TITLE : add custom operators BODY : hi all, i'm pretty new to julia and mostly coded in c/c++, so i would like to implement some c-ish operators like -> to dereference pointers. but since there is no -> operator, i cannot create/overload such. is there any easy way to simply define new operators, which can then be freely used? i glimpsed a bit over the code, but couldn't even find the operator handling code yet, lol. imo that would make code much cleaner to read, e.g. from unsafe_load someptr .somefield to someptr->somefield , especially when nested, like linkedlist->next->next->prev->next imagine the unsafe_load version yourself :p . but this is not the only case, i would generally love to just add all kinds of custom operators. something like juliaparse.addcustomoperator -> , maybe with settings like left/right binding powers or whatever, i never wrote a full parser for fine tuning. would be epic if somebody has an idea how to accomplish this.