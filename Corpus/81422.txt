 URL : "https://github.com/volosoft/castle-windsor-ms-adapter/issues/22" TITLE : wrong constructor called BODY : consider the following code public interface imyservice { } public class myservice : imyservice { public myservice { console.writeline default constructor called! ; } public myservice params string foo { console.writeline custom constructor called! ; } } i register it as follows: container.register component.for<imyservice> .implementedby<myservice> ; when i call container.resolve<imyservice> from a normal console application not involving castle-windsor-ms-adapter, the default constructor is called. when i call container.resolve<imyservice> from an asp. net core project using this library return windsorregistrationhelper.createserviceprovider container, services ; in startup.cs , the second constructor is called. i would have expected the default constructor always be called, as by out-of-the-box castle windsor behaviour. am i missing anything?