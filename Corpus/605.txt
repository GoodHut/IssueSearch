 URL : "https://github.com/tuhailong/leetcode/issues/1" TITLE : 1. two sum BODY : description: given an array of integers, return indices of the two numbers such that they add up to a specific target. you may assume that each input would have exactly one solution, and you may not use the same element twice. example: given nums = 2, 7, 11, 15 , target = 9, because nums 0 + nums 1 = 2 + 7 = 9, return 0, 1 . class solution { public int twosum int nums, int target { int ret = new int 2 ; hashmap<integer, integer> map = new hashmap<> ; for int i = 0; i < nums.length; i++ { if map.containskey target - nums i { ret 0 = map.get target - nums i ; ret 1 = i; } map.put nums i , i ; } return ret; } public int twosum2 int nums, int target { if nums == null || nums.length < 2 { return null; } for int i = 0; i < nums.length - 1; i++ { int fsrtnum = nums i ; int sondnum = target - fsrtnum; int idx = index nums, i, sondnum ; if idx != -1 { return new int {i, idx}; } } return null; } private int index int nums, int idx, int target { for int i = idx + 1; i < nums.length; i++ { if nums i == target { return i; } } return -1; } }