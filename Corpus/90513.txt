 URL : "https://github.com/aspnet/SignalR/issues/211" TITLE : simplified connection api BODY : the endpoint api is a model where onconnectedasync is called for each connection. the end point represents a binding to which all connections connect . in this model, storing per connection state needs to be done in connection metadata. users also need to write the receive loop manually which can be non trivial especially handling exceptions . the proposal is to offer a simplified api to solve the above problems: 1. each connectionhandler has a 1:1 mapping to the connection itself. this means you can store per connection state in fields of that object. 2. the receive loop is implemented and it handles all of the cases errors etc . here's an example of what it could look like: c public class startup { public void configureservices iservicecollection services { services.addsockets ; } public void configure iapplicationbuilder app, iloggerfactory loggerfactory { loggerfactory.addconsole loglevel.debug ; app.usefileserver ; app.usesockets routes => { routes.mapconnectionhandler<echoconnectionhandler> /echo ; } ; } } public class echoconnectionhandler : connectionhandler { public override task onmessageasync message message { return connection.transport.output.writeasync message ; } } public abstract class connectionhandler { public connection connection { get; internal set; } public virtual task onconnectedasync => task.completedtask; public virtual task ondisconnectedasync => task.completedtask; public abstract task onmessageasync message message ; }