 URL : "https://github.com/coala/coala/issues/4048" TITLE : semantics in language.py BODY : overview description i was working on this issue https://github.com/coala/coala/issues/4037 about writing a test suite for languages class of language.py file and i noticed that the __eq__ behavior is changed and calls limit_versions but this causes a problem because there are languages csharp,java etc in definitions folder that dont have the attribute versions so if you go and compare for example language 'c ' == language c this will fail because c hasnt any versions so it will raise an error. steps to reproduce from coalib.bearlib.languages.language import language, languagemeta, languages language 'c ' == language c traceback most recent call last : file <pyshell 4> , line 1, in <module> language 'c ' == language c file c:\users\gr33npearl\desktop\project-coala\coala_environment\coala\coalib\bearlib\languages\language.py , line 381, in __eq__ return limit_versions self, other, operator.eq file c:\users\gr33npearl\desktop\project-coala\coala_environment\coala\coalib\bearlib\languages\language.py , line 436, in limit_versions raise valueerror 'no versions left' valueerror: no versions left for example if you add versions = 2.7, 3.3, 3.4, 3.5, 3.6 in csharp you won't get that error. suggestions so i believe that we shouldn't overload the == operator but 1 instead we should add a new method to limit versions or 2 keep it this way but add versions to other languages or 3 change the behavior of limit_versions to work without versions as well.