 URL : "https://github.com/spechub/Hets/issues/1698" TITLE : mutex oms processing BODY : this builds on 1690: let hets1 and hets2 be different instances of hets that operate on the same database. let oms1 and oms2 be oms with oms1 importing oms2. assume hets1 processes oms1 while hets2 processes oms2. then, because of the import, oms2 would be processed twice and also there would be a second attempt to save oms2 by hets1. this should be prevented because every oms must be unique in the database. if we mutex the processing of each oms, we could load oms2 from the database instead of processing it a second time in hets1. the mutex must be active across processes, so maybe a postgres lock https://www.postgresql.org/docs/current/static/sql-lock.html might be an appropriate choice. see also http://www.practiceovertheory.com/blog/2013/07/06/distributed-locking-in-postgres