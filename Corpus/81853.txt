 URL : "https://github.com/Squirrel/Squirrel.Windows/issues/1093" TITLE : abandoned mutex redivivus BODY : several issues have mentioned similar things before: 587, 871 among them. i have inherited an inconsistently working implementation of squirrel that has a squirrel-aware bootstrapper that self-updates that is, does normal squirrel workflow . if the bootstrapper does not need to be updated, then it will check/download/apply for the main application. this means you have two instances of updatemanager being instantiated in the same process: one created--> disposed for the bootstrapper to checkforupdates , and another, subsequently, to do the squirrel stuff for the main application. however, whenever i instantiate the updatemanager, i usually 75% of the time get a abandonedmutexexception, which is thrown from the finalizer of a class used for enforcing a singleton type pattern. according to paul https://github.com/squirrel/squirrel.windows/issues/871 issuecomment-288176261 this is completely by design, but i seem unable to control anything about this. gc.collect , waiting on finalizers, sleeping threads -- i cannot get it to maintain consistently. this makes me wonder if there's something i don't understand. the code generally looks like this https://gist.github.com/the-dansan/87dc220478b93d9efa2e9797080053eb . any help would be exceptionally valuable right now.