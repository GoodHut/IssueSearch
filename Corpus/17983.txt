 URL : "https://github.com/LuaJIT/LuaJIT/issues/357" TITLE : segfault on arm64 BODY : the following code produces a segfault for me on arm64 x86_64 is fine, and i haven't tested any other architectures : lua local queue = {} -- turning off the jit here fixes the segfault --jit.off true, false function queue:new local o = {first = 0, last = -1} setmetatable o, self self.__index = self return o end function queue:enqueuefront elem self.first = self.first - 1 self self.first = elem end function queue:dequeuefront if self.first > self.last then error attempt to dequeue from an empty queue end local val = self self.first self self.first = nil self.first = self.first + 1 return val end local num_times = 10^6 function main local queue = queue:new for i = num_times, 1, -1 do queue:enqueuefront i end for i = 1, num_times do assert queue:dequeuefront == i end end main this code appears to work fine on beta2, but always segfaults for me on arm64 with beta3. i'm using the amalgamated build. i believe the bug was introduced in the original arm64 jit compiler backend commit because it still shows up when i compile from 1131fa22a23c6284ba5945bffb3dcd6deef2076e.