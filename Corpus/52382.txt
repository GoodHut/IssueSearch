 URL : "https://github.com/docker/docker/issues/32418" TITLE : clean up logattributes BODY : logattributes is a map used to store details on a log line. go // logattributes is used to hold the extra attributes available in the log message // primarily used for converting the map type to string and sorting. type logattributes map string string i'm not sure that it should be a map. it seems like it's a map because that's a convenient way to represent the data, but not because of a need for lookups by key or deduplication. creating a map per log line may be inefficient, because a map is a hash table and it will typically have empty buckets that waste memory. also, as the comment says, the main use seems to be for converting to a slice and sorting. since this is the primary use, it might make more sense to just use a slice type instead. it would avoid an extra conversion which churns more allocations and adds code complexity. finally, whether or not this is changed from a map to a slice, the sort comparator used for sorting the data from logattributes is suspiciously inefficient: go func s bykey less i, j int bool { keyi := strings.split s i , = keyj := strings.split s j , = return keyi 0 < keyj 0 } this is doing string parsing in every comparison, instead of once per key. it's probably not even necessary to do these split s - it seems like lexical sorting sort.strings should work fine. cc @dperny @cpuguy83