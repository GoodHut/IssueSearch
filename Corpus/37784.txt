 URL : "https://github.com/vmtk/conda-recipes/issues/2" TITLE : move to conda-forge? BODY : @lantiga now that we have the recipes stable and building on linux64 atleast , i'm thinking of the best way to build the packages in the long term. i've been looking into conda-forge https://conda-forge.github.io/ , and think that it may be a solution we may want to adopt in the long term. there are a number of benefits to this approach: 1. automatic compilation, building, and distribution on linux, mac, and windows systems. 2. building binaries which are compatible with other systems and with packages from the default channel vtk is a notable concern in this regard . 3. inclusion in a channel with a great deal of respect/influence in the anaconda influence and a large user-base to boot . you can read more about the benefits of conda-forge here https://www.continuum.io/blog/developer-blog/community-conda-forge . in order to make the move the process is fairly simple, the steps are outlined below: 1. fork the conda-forge/staged-recipes https://github.com/conda-forge/staged-recipes repository. 2. make a new folder in recipes for your package. look at the example recipe and our faq https://github.com/conda-forge/staged-recipes faq for help. 3. open a pull request. building of your package will be tested on windows, mac and linux. 4. when your pull request is merged a new repository, called a feedstock, will be created in the github conda-forge organization, and build/upload of your package will automatically be triggered. once complete, the package is available on conda-forge. let me know your thoughts and i'll start working on building an appropriate meta.yaml and build.sh / build.bat file for the conda-forge tool. if this is a route we want to go down it may be best to do it from day 1 so that when vmtk users start using the anaconda packaging, they have the conda-forge channel as their default and will recieve updates with no intervention in the future.