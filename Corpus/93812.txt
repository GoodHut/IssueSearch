 URL : "https://github.com/breese/trial.protocol/issues/9" TITLE : array and map construction BODY : on the feature/dynamic branch it is possible to construct a dynamic::variable by passing a variable::array_type aka std::vector<variable> . i want to change this to used named constructors instead. for example, the following code: std::vector<variable> values; variable data values ; should be changed into: std::variable<variable> values; variable data = variable::array values.begin , values.end ; the reason for this change is that the current code can lead to surprising results. while working on adding support for operator<< i encountered an infinite recursion because operator<< variable was invoked when given a std::vector<variable> . i could have solved the recursion by adding an overload for std::vector<variable> but that would preclude users from adding their own. notice that operator<< variable simply forwards to operator<< of the underlying type, so the default behaviour of operator<< std::vector<variable> should be a compiler error unless a custom overload exists. it is not used for serialization. all of the above also applies to variable::map_type . any objections?