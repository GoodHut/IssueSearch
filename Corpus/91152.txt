 URL : "https://github.com/SublimeTextIssues/Core/issues/1693" TITLE : syntax system enhancement BODY : hi one of the limitations of syntaxes in sublime is the lack of multi line support and i am aware that is by design for performance reasons, which is why i love sublime. but there might be a solution, consider how the current system works. it stores an index offset and line? for the current context and every regular expression is executed from there and after a push/set, this offset is moved considering all the characters matched by the regex even if the regex is a look ahead. yaml - match: abc push: newcontext - match: ?=abc push: newcontext i am proposing adding a peek which like match, will store its own offset and line but won't affect match's offset/line: yaml - peek: abc push: newcontext peek will not be used to apply scopes, only to look ahead and set the right context, for example: js // if i am able to look for anything => i can be sure that it will be a function. let firstvariable = arg1, arg2 => {} let secondvariable = arg1, arg2 => {} so i could write something like this: yaml main: - peek: \ set: possible-function possible-function: - peek: \ \s => set: it-was-a-function it-was-a-function: - match: ... set: ... after the first match is executed, peek's offset reset to the match's offset. this could be extremely useful for languages like c++ where it is hard to differentiate a function declaration from a variable declaration.