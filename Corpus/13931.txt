 URL : "https://github.com/curbmap/OpenLocationCode-swift/issues/1" TITLE : a few suggestions BODY : hey @eselkin, nice work on your swift implementation of open location code! as it happens, i had a similar idea around the same time. in my case i picked the existing python code to port to swift. took me a while to go through my company's open source process, but you can now check it out https://github.com/google/open-location-code-swift pod 'openlocationcodeframework' . pity about the duplicated work, when i started your port wasn't yet published, just how it goes i guess. a few suggestions for your port: 1/ i don't think it works with objective-c, as your classes don't descend from nsobject. two options to do that if you want to support objc : either modify your main classes, or provide new ones as a bridge. for my library, i did the latter, as objects that descend from nsobject can't be used in pure swift on linux – so the objective-c stuff has to be separable to maintain linux support. that approach also means you can continue to use pure swift constructs like structs in the swift api which is nice. 2/ i highly recommend implementing the core sdk tests driven by the csv data. i know they caught a few bugs in my port when i ran them! you can probably take my implementation https://github.com/google/open-location-code-swift/tree/master/tests directly, and adapt it for your api. 3/ i also included ports of the recover nearest implementation. i like the short-code feature of olc, it's useful to be able to give someone in the same city as you a shorter 6 digit code for locations within the city ☺️. some apps like google maps already highlight the short code characters to speed up communication time e.g. when you're telling someone where you are on the phone .