 URL : "https://github.com/JacquesCarette/literate-scientific-software/issues/385" TITLE : the evils of emptyn BODY : in 668bc55fd04b7e964e71cd153a6d71388a527c24, @niazim3 correctly spotted a pattern, abstracted it out, and introduced emptyn in language.drasil.chunk.reqs for it. but it, somewhat like emptys , in fact , is really bad its use, not its abstraction . when we have a field, we should fill it with something meaningful. if we consistently fill it with junk, then it means either 1. our design for that data-structure is flawed 2. our use of that concept is flawed i believe that the problem here is actually a mixture of both! reqchunk is not about requirements at all. it is used merely to record module dependencies. worse still: these dependencies are human-declared and not inferred! so there is not meaningful content to put in the namedidea of a reqchunk because it isn't a named idea . this actually points to a set of larger flaws we have, where what we declare as modules is completely independent of the modules generated. furthermore, there is another disconnect where the requirements we declare are not really linked to the modules we declare. traceability nightmare.