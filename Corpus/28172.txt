 URL : "https://github.com/datatheorem/TrustKit/issues/124" TITLE : final api for 1.5.0 BODY : on the current branch for 1.5.0 https://github.com/datatheorem/trustkit/blob/alban-review/trustkit/trustkit.h l121 , the main trustkit class has the following api: pragma mark usage in singleton mode + void initializewithconfiguration: nsdictionary<tskglobalconfigurationkey, id> trustkitconfig; + instancetype sharedinstance; pragma mark implementing pinning validation @property nonatomic, nonnull tskpinningvalidator pinningvalidator; pragma mark configuring a validation callback @property nonatomic, nullable tskpinningvalidatorcallback pinningvalidatorcallback; @property nonatomic, null_resettable dispatch_queue_t pinningvalidatorcallbackqueue; pragma mark usage in multi-instance mode - instancetype initwithconfiguration: nsdictionary<tskglobalconfigurationkey, id> trustkitconfig; pragma mark other settings + void setloggerblock: void ^ nsstring block; the way the two constructors are named and work feels a bit inconsistent and not really like what an objective-c / swift api should look like. it might be better to go back to a settable property for the configuration? especially if we decide to eventually allow changing the configuration 123 . also + setloggerblock it not great since it modifies logging for all instances not just the shared instance , but we might have to keep it for now as fixing the implementation is a larger project. overall, what would be the right api to expose here? pinging @adamkaplan @dlow-yahoo-inc .