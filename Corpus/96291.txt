 URL : "https://github.com/stfc/fparser/issues/52" TITLE : error handling in fparser2 BODY : at the moment fparser2 will parse a lot of invalid fortran. let's take the open statement as a simple example as i've just reviewed a change to it. open &^Â£ is parsed as the correctness of the type of a unit is not checked open 50, 51 is parsed as the number of unnamed arguments is not checked open file='fred', 50 is parsed as there is no check that the unnamed argument should be first in the list open 50, unit=50 is parsed as fparser2 does not know that you either have a named unit or an unnamed unit open 50, asynchronous='err' is parsed as fparser2 does not know the expected values for asynchronous. the question i would like to raise is whether we actually want/need fparser2 to raise nice errors if and when it is provided with invalid fortran. one option would be to limit the scope of fparser2 to parsing valid fortran code at least for the time being and rely on the user to check their code is valid using standard compilers beforehand. i shall not flavour the discussion with my preference ... yet. thoughts ...