 URL : "https://github.com/strongloop/loopback-next/issues/139" TITLE : states in contexts BODY : @simonho @raymond @miroslav i have a proposal for the order dependency specifically calculating time, ensuring order : @bind 'res.time' function gettime @inject 'state.accepted' accepted, @inject 'state.finished' finished { // pause execution until the context is in the accepted await accepted ; const start = hrtime ; // pause until the context is in the finished state await finished ; return hrtime - start; } / states: - accepted - the request has been parsed - finished - the response has been written / @bind 'state.finished' function finished @inject 'watch' watch { while await watch 'state.history' .contains 'finished' === false { // wait for finished state to be in the history } } // in core function writeresponse @inject 'state' state { state 'finished' ; // ... }