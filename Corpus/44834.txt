 URL : "https://github.com/hgzimmerman/HLWNPA/issues/11" TITLE : for loop optimization BODY : accessing arrays is slow partially because the evaluate function returns a clone of the desired object when getting a literal or identifier. this has kept the language design simple i haven't had to think about lifetimes yet . but when testing over arrays of 1000 elements, the problem manifests itself exponentially, where each object which is 1000 times as large as the typical object is cloned 1000 times it is accessed once for each iteration to get the owned value . i should attempt to come up with a solution that uses references so the cloning isn't necessary. if that isn't possible use rc/arc instead.