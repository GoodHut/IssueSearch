 URL : "https://github.com/noryb009/lick/issues/18" TITLE : redesign the gui BODY : after 15, there is no need for the frontend and backend to be split into two separate processes. moving them into the same process probably in separate threads, with a new backend thread created for each task would have some benefits: it would allow removing the awkward message passing over pipes, instead doing simpler communication between threads. the front end would have admin privileges, allowing issues such as 12 to be trivial, instead of needing to pass messages to the backend. there is less possibility of a one of the two processes dying while the other lives. currently, if the frontend dies, the backend might sit in the background indefinitely, while if the backend dies, the frontend may appear to be unresponsive. lickdir_t can be more complex, allowing the use of pointers, lists, etc. since almost all of the gui code would need to be refactored, it would probably be beneficial to completely rewrite it. this would include: changing the gui toolkit or language. this can either allow windows 9x support 6 , or it can be decided a windows 9x gui is not worth the effort. i'm leading towards the latter, because i have not received any feature requests for 9x support. in that case, it might be possible to use another toolkit, or even another language. a redesign of the architecture. the current architecture focuses on the backend taking simple commands. a new architecture could give the backend a scenario or list of commands, with the frontend simply providing feedback to the user. more features. 4 requires a dropdown of distros which could currently hold fatdog to activate its distro-specific code . 12 would be trivial to add. 16 would be possible with an options dialog. 11, and other tools, could be more visible.