 URL : "https://github.com/w0rp/ale/issues/591" TITLE : running alefix on save BODY : hello! i am a new user of ale, i noticed the work done on 571, and have started trying to use it. i'm running into issues when trying to run it on save which is being tackled by 570 , but figured i might as well ask in case it is due to user error. here are my configs: let g:ale_fixers = {} let g:ale_fixers.javascript = \ 'prettier', \ 'eslint', \ let g:ale_javascript_prettier_options = ' --stdin\ --parser\ flow\ --single-quote\ --trailing-comma\ all\ --no-bracket-spacing' autocmd bufwrite .js alefix i'm noticing a few things: 1. i'm trying to set up a autocommand to run alefix on save, but for some reason when i save, the file will write, the checker will run, and then the buffer will update with the changes. as a result: a. vim complains that the buffer has not yet been saved when trying to quit b. if i very quickly quit before the buffer updates with the change, the fix won't actually occur e.g, via :wq . is this due to some async feature of ale? i previously used neoformat to do something similar, for which this doesn't occur. 2. when specifying ale_fixers for javascript, if i change the order of eslint and prettier so that eslint comes before prettier, the javascript_prettier_options don't get applied. 3. if i don't specify ale_javascript_prettier_options , alefix runs into an error error detected while processing function ale fix fix 21 ..<snr>213_runfixer 6 ..ale handlers prettier fix 1 ..ale var: line 3: e716: key not present in dictionary: ale_javascript_prettier_options e116: invalid arguments for function getbufvar str2nr a:buffer , l:full_name, g: l:full_name e15: invalid expression: getbufvar str2nr a:buffer , l:full_name, g: l:full_name thank you for doing such amazing work!