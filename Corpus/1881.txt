 URL : "https://github.com/pg-strom/devel/issues/273" TITLE : jp mps活用 BODY : nvidia提供のmpsサービスを使うことで、gpuへのタスクのディスパッチを効率化できる可能性がある。 課題） ・streamに対してcallbackを突っ込む事ができない。 ・/dev/shm はシステム標準（50%）より多目に必要かも。 要確認） ・pascal以降のunified addressingに対応しているか。 ⇒hash-tableが非常に大きくなってしまったとき、group byのグループ数が推定値よりも 　大きくなった時の対策には非常に有効なので。 対策） ・クライアント（postgresql）側で、一連のgpu kernel呼び出しを監視するスレッドを 　持っておく構造にすれば解決するか。 １．予め _max_async_task_ 個のスレッド／streamを作っておく（あるいはon deman生成） ２．キューに突っ込む人は、現状、空いているstreamを探して獲得する。 　　（空きがなければ待たされる；リソース過剰消費を防ぐには良い？） ３．streamに順次非同期操作を突っ込む。 ４．元々callbackが必要であったポイントでは custreamsynchronize で待つ。 　　（postgresql本体とは別スレッドなので、postgresqlはブロックしない） ５．元々のcallback処理が終わったら、続きの非同期操作を突っ込んでいく。 一連の実行は、本来マルチスレッドを想定していないpostgresqlのコンテキストで実行 されるので、postgresql側のapiを触ることは一切禁止。