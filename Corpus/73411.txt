 URL : "https://github.com/spulec/moto/issues/1360" TITLE : create default kms keys. BODY : hi all. recently i've been working on some testing which involved ssm and kms. my code uses a default kms key created and maintained by aws alias/aws/ssm and i have to write test it. as i have to use the describe_key api call to get the uuid of the key and so in my code, i will use describe_key against alias/aws/ssm . when i was writing the unit tests, describe_key against alias/aws/ssm failed, because the key was not created in moto. luckily, i can add the key and the alias myself in in the setup method of the unit tests. i then realised that this is not the right way to fix it, for sometime later, someone could come in and add some more aliases to the list, and if his/her change included my alias, my test would fail, because the logic in kmsresponse::create_alias forbid any alias defined in reserved_aliases be created again. i have come up with several solutions to this problem, but every one of them involves some breaking changes in the codebase. 1. we could add logic to add a key for all the aliases in reserved_aliases and bind the alias to it. this will create a bunch of extra keys in the backend, and in turn, could break someone's tests. i have personally implemented all these, and i have to fix several test cases in test_kms.py and test_server.py , which means if it is accepted, the new code could also break someone else's existing tests. 2. alternatively, we could remove the reserved_aliases list and all logic around it, which, needless to say, could break someone's tests 3. we could allow user to add a key with prefix alias/aws/ into the backend, but this behaviour is different from aws so imo not right. i hope i can hear your ideas on this issue, and i'm more than happy to implement them. my current implementation can be found at: https://github.com/xiaket/moto/commit/bc1a8c2c3b4b3ea92cf2eec4b0bea12d0413d7b5