 URL : "https://github.com/cython/cython/issues/1685" TITLE : segfault with asyncio BODY : on macos 10.12.4, cython 0.25.2, python 3.6.1, if you await asyncio.sleep <= cython <= python chain, it will segfault. it won't die if you await cython future right away, without first using python. here is an example that reproduces this bug: main.py: want_crash = true import asyncio import cy_test async def main : await cy_test.say loop = asyncio.get_event_loop if want_crash: loop.run_until_complete main else: loop.run_until_complete cy_test.say loop.close cy_test.pyx: import asyncio from py_test import py_async async def cy_async : print - this one is from cython async def cb : print async functions can be awaited without problem: await cy_async await py_async print and this will actually sleep for 3 seconds before crashing await asyncio.sleep 3 print i will be never output, because app has crashed already async def say : await cb py_test.pyx: async def py_async : print - and this one is from python setup.py: from distutils.core import setup from distutils.extension import extension from cython.build import cythonize setup name='asyncio_cb', ext_modules=cythonize extension cy_test , cy_test.pyx , , makefile: all: python3 setup.py build_ext --inplace test:	all python3 main.py clean: @echo cleaning demos/callback @rm -f cy_ .c .o .so ~ core @rm -rf build