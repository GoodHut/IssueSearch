 URL : "https://github.com/jakesgordon/javascript-state-machine/issues/128" TITLE : transition from none BODY : i may be using the library wrong, but am upgrading from 2.x. say i have the following made up fsm: js { init: 'index', transitions: { name: 'index', from: ' ', to: 'index' }, { name: 'help', from: ' ', to: 'showhelp' } , methods: { onindex: => { console.log 'index' }, onshowhelp: => { console.log 'show help' }, onenterstate: lifecycle => { console.log entered state ${lifecycle.to} from state ${lifecycle.from} via event ${lifecycle.transition} ; } } } when i initialise this now i get a transition that didn't used to occur. entered state index from state none via event init this then fires the onindex method that wouldn't previously have been called until i called fsm.index . where this becomes problematic is in my unit tests of the fsm, where i am attempting to initialise the fsm in a specific state and then test the transitions. i want to initialise it in a specific state, as if it was already there, but not have its method fire as this interferes with the subsequent transition i want to test . i would assume that initialising something in a state wouldn't fire the lifecycle events to transition to it from none - i don't want this transition, i want it to just be in the state i ask it to be in when i initialise it. is there a way to disable the init transition from none ? or am i thinking of unit tests from the wrong angle?