 URL : "https://github.com/tensorflow/tensorflow/issues/13228" TITLE : add image gradient op BODY : a paper 1 i am reimplementing recently uses image gradient loss 2 . numpy offers np.gradient 3 to achieve this task i.e. np.gradient image, axis=0 , np.gradient image, axis=1 however tensorflow lacks this feature or at least documentation about how to use tf.gradients to get this done. therefore i propose to either send a pr where i add a gradient image op which uses fixed 2d convolution, i.e.: python import numpy as np import scipy as sp import tensorflow as tf from skimage import io from skimage import color from matplotlib import pyplot as plt image = color.rgb2gray io.imread 'image.jpg' image_rs = image.reshape 1 + list image.shape + 1 xgrad = np.gradient image, axis=0 ygrad = np.gradient image, axis=1 image_ph = tf.placeholder tf.float32, image_rs.shape x_weight = tf.reshape tf.constant -1, 0, +1 , tf.float32 , 3, 1, 1, 1 y_weight = tf.reshape x_weight, 1, 3, 1, 1 xgrad_ts = tf.nn.conv2d image_ph, x_weight, 1, 1, 1, 1 , 'same' ygrad_ts = tf.nn.conv2d image_ph, y_weight, 1, 1, 1, 1 , 'same' with tf.session as sess: xgrad2, ygrad2 = sess.run xgrad_ts, ygrad_ts , feed_dict={image_ph: image_rs} print xgrad2.shape fig, axes = plt.subplots 2, 3 axes 0, 0 .imshow image axes 0, 1 .imshow xgrad axes 0, 2 .imshow ygrad axes 1, 0 .imshow image axes 1, 1 .imshow xgrad2 0,:,:,0 axes 1, 2 .imshow ygrad2 0,:,:,0 plt.show or have someone update documentation of tf.gradients . for the first i could provide a pr if this is considered interesting for tensorflow and not too implementation specific . 1 : https://arxiv.org/abs/1612.05362 2 : https://en.wikipedia.org/wiki/image_gradient 3 : https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.gradient.html