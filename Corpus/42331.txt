 URL : "https://github.com/ipython/traitlets/issues/375" TITLE : async trait observers BODY : i'm really just throwing this idea out there to see if there's any demand for it. perhaps this would be useful for plotting where all the rendering only occurs at the time the plot is requested? i haven't really thought about it too deeply though. cc: @rgbkrk @sylvaincorlay @ellisonbg @minrk @tacaswell python import asyncio import random class asycntrait object : def __set__ self, obj, value : task = asyncio.ensure_future obj.handle value obj._tasks.append task def __get__ self, obj, cls : loop = asyncio.get_event_loop loop.run_until_complete asyncio.gather obj._tasks return obj._x class hasasynctraits object : a = asycntrait def __init__ self : self._tasks = self._x = 0 async def handle self, value : await asyncio.sleep random.random self._x = value obj = hasasynctraits for i in range 10 : obj.a = i print obj.a