 URL : "https://github.com/fable-compiler/Fable/issues/630" TITLE : meteorjs methods table BODY : hi, i'm trying to write fable bindings for meteor js. i've to use ts2fable and use it's output for simple apps and it works. but for some complex things, ts2fable's output is too poor. for example methods http://docs.meteor.com/api/methods.html meteor-methods . regular use: js meteor.methods { foo: function arg1, arg2 { // .. do stuff .. console.log this.userid ; return some return value ; }, bar: function { // .. do other stuff .. return baz ; } } ; ts2fable outout fs type globals = static member methods methods: obj : unit = jsnative i can create objs like fs let methods = createobj foo ==> fun arg1 arg2 -> some return value but i can't use this keyword here. maybe you can give me hint about this problem? some thoughts about it: 1. create type method fs <keyvaluelist> type methods = | <erase> method of methodname:string meteormethod and meteormethod = member this.userid :string = jsnative abstract function: <paramarray> args: obj -> unit ///and use it like this meteor.methods method name , {new meteormethod with function <paramarray> args: obj = this.userid} ///too long and how to render meteormethod to function? 2. wrapp function and pass this as parameter fs let mehodwrapper func:thiscontext -> obj list -> 'a = jsnative and it render like js function params { return func this,params } how should i write fable binding here? and how anybody should use it? fs type globals = static member methods methods: seq<string thiscontext -> obj list -> 'a > : unit = createobj <| methods |> seq.map fun f,s -> f ==> mehodwrapper s ///will it work?