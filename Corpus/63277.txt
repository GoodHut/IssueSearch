 URL : "https://github.com/cockroachdb/cockroach/issues/16580" TITLE : distsql: use mergejoins BODY : - detection of existing ordering and using mergejoiner during planning plan mergejonis if provided orderings happen to match on all equality columns. the logic to keep only required orederings needs to be adjusted. - use of a partial ordering if we have a matching ordering on a subset of equality columns, we would benefit from a hybrid merge-hash join use hashjoin across all rows with the same value on the ordered columns . in lieu of this, we could use a sorter to provide the full ordering the sorter can take advantage of partial orderings . - take desired ordering into account during index selection we would want index selection to prefer indexes that give us matching orderings. this is complicated because local sql doesn't have a merge-join plannode , and because we don't support desiring that two plans have the same ordering we only support desiring of a specific ordering . - devise a mechanism for merge joiner to bubble upstream information about the next row e.g. to skip part of a scan longer-term, we want to have feedback from the merge joiner to potentially skip a lot of unnecessary rows from one source. this kind of mechanism can be implemented by table readers and sorters. cc @arjunravinarayan