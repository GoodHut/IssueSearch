 URL : "https://github.com/crystal-lang/crystal/issues/5126" TITLE : array.shift is slow BODY : i was using array shift a lot, but i found out it's pretty slow compared to using an index lookup this is the current implementation crystal def shift if @size == 0 yield else value = @buffer 0 @size -= 1 @buffer.move_from @buffer + 1, @size @buffer + @size .clear value end end if i change this function by crystal def shift if @size == 0 yield else value = @buffer 0 @size -= 1 @buffer += 1 value end end it is a lot faster shifting array string .new 100_000, a shows the following speed improvement user system total real shift 1.600000 0.000000 1.600000 1.602299 each 0.000000 0.000000 0.000000 0.000487 fast shift 0.000000 0.000000 0.000000 0.000530 question is, can it really be implemented like this or is there in important reason the buffer move and clear is required for this operation? i've made the change in the current master branch and tests all pass.