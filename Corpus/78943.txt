 URL : "https://github.com/openssl/openssl/issues/4935" TITLE : replacing the ldcmd hack BODY : back just a week or so ago, it was possible to link stuff using a different command than your usual compiler, through the ldcmd environment / make variable. with the removal of makefile.shared also removed that possibility. this is unfortunate for google's fuzzing initiative, as shown in their issue on this https://github.com/google/oss-fuzz/issues/1037 . one way is to retrofit the hack back into the unixly makefile template https://github.com/google/oss-fuzz/issues/1037 issuecomment-351845889 ... that hack is currently incomplete, as it only affects the linking of applications, not of shared libraries, but i do believe that for the particular use case, that is enough. however, i'm not exactly happy with this hack, so i'd like to see if there are thoughts on how to do this more cleanly. one idea i have is to add these lines in configurations/unix-makefile.tmpl : make ld=$ cc ldxx=$ cxx ... and then use them appropriately in the perl functions lib2obj2shlib and obj2bin instead of $ cc and $ cxx . i imagine that would enable anyone who wants to to do, say, make ld='$ cxx ' ... note: we cannot ignore this issue, because fuzz/readme.md https://github.com/openssl/openssl/blob/master/fuzz/readme.md . it can be argued that it's mostly useful for us , and that an ugly hack might therefore be acceptable, but frankly, i'd rather not leave something that raises eyebrows a few years down the line...