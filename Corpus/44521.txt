 URL : "https://github.com/metrumresearchgroup/mrgsolve/issues/220" TITLE : f @required in $param BODY : i'd like to propose the inclusion of @required as a macro to be included in a param block. though there are ways of 'faking' this by setting default values that do things like cause crashes lol , there are times where we must be assured that the user is manually setting the parameter value. a case in point - i was recently auditing a project in which the user was attempting to simulate the impact of changes in a couple different parameters under different dosing scenarios. during the setup process, an improper select statement caused one of the parameters to be dropped from the dataset that would be input to data_set . as there was a default value, mrgsolve obviously did not complain. i consider such bugs to be by far the most dangerous and difficult to track down, hence, this would allow in-built capacity to force certain params to be provided each time. the other option i thought of was a set of validation functions that can allow more ad-hoc validation criteria - eg r ... create model above model %>% data_set validate_data df, required = c cl , f_gut %>% mrgsim however, while such validators could provide checks for many more scenarios specific to a users analysis and out of scope of even mrgsolve itself , these functions still do not securely protect at the model level, and would require more conscientious use.