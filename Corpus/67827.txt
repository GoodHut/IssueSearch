 URL : "https://github.com/elastic/elasticsearch/issues/25312" TITLE : queryable object fields BODY : often we have large object fields with many sub-fields, only a few of which are needed for aggregations, sorting, or highlighting. today, we create fields for all sub-fields, but we could greatly reduce the number of required fields if we make object fields queryable. we would need a specialiased analyzer which can accept json and transform an object like: { status : active , age : 25, city : new york } into the following terms: status:active , age:25 , city:new , city:york then you could search for active statuses with: { match : { my_object : status:active } } or { query_string : { query : my_object:\ status:active\ } } we could possibly even support searching for new york vs new city of york with: { match_phrase : { my_object : new york } } which would be rewritten as my_object: city:new city:york if we wanted to be able to aggregate on the age field, the object field could be mapped as: { my_object : { type : object , index : true, dynamic : false, properties : { age : { type : integer } } } } with this mapping, only the my_object.age sub-field would have its own lucene field or elasticsearch field and the rest of the object would be queryable via the my_object field. this could even be made to work on the whole document by allowing the _source field to be configurable.