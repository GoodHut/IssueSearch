 URL : "https://github.com/jackc/pgx/issues/268" TITLE : pgtype protobuf support. BODY : the pgtype's in v3 are fantastic and will lead to a class of orm that do not exist in go yet! i am working on generating an orm-microservice and i need the pgtypes to use in protobuf definitions. there are two approaches i can think of. without copying the types into a separate package they would both create a proto dependency: gogoproto custom type: gogoproto https://github.com/gogo/protobuf/blob/master/custom_types.md can be used to set up custom types as first-class proto messages. some manual code generation would still be needed for this approach. kubernetes approach -- gengo the gengo protobuf generator can be used for this. here are the steps. step 1 would have to be done manually. 1. the pgtype structs would need the protobuf struct tags -- see this kubernetes file https://github.com/kubernetes/kubernetes/blob/master/pkg/api/v1/types.go l70-l217 . 2. generated an init block which registers with the types with the proto runtime. 3. generated protobuf support methods. 4. generated a proto file for the package with the struct definitions. the kubernetes approach might be the least invasive. the types in the existing package would need to add protobuf struct tags and annotations for gengo. if these two are present a new package can be generated.