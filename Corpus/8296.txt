 URL : "https://github.com/ron-rs/ron/issues/40" TITLE : new data format BODY : so i've been tossing an idea for a data format around in my head for a while now, and this seems like a good application so i thought i would throw it out. basically the data format is roughly this: xml in json-syntax. the idea is to have a json/yaml-like syntax but with attributes . so you could write something like this: foo @{x: 42, y: 72, z}: a: this is a key: string @dec_attr: this is a decorated attribute bar: this is bar the basic idea is that attribute maps denoted by @ can be placed either after a key or above a key. after a key they must be in the form @{ ... } and above the key they must be in the form @key = value . the basic idea is to make it easy to have keys with attributes associated with them -- such as types, generics, compiler flags, etc. this kind of language could be used for writing type systems, as a new programming langauge, or almost anything! if you think about it, programming languages are pretty much just variable names with some attributes as well as some logic handlers... which would not be included in this spec . maybe significant white-space is not desired, or requiring around keys is desired. you could still use much the same syntax: { foo @{ x : 42, y : 72, z : true}: { a : this is a key: string , }, @ dec_attr : this is a decorated attribute , <-- note the , is necessary bar : this is bar , } > also note that {z} is interpreted {z: true} to make passing flags easier. that could also be removed. anyway, just something i've been tossing around in my head, thought you might like it for some food for thought!