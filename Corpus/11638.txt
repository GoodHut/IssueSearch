 URL : "https://github.com/mobxjs/mobx-state-tree/issues/310" TITLE : inferred type of BODY : working with the latest mst 0.10.0 and liking it a lot, but we're experiencing some trouble with inferring the return type of getsnapshot, specifically when the model is instantiated in another scope. say we have a model: export const mymodel = types .model { testing: types.string} if we create an instance and get a snapshot in the same scope, it's able to infer that getsnapshot returns an object that includes the property testing : const myinstance = mymodel.create { testing: 1,2,3 } ; const mysnapshot = getsnapshot myinstance ; mysnapshot.testing //ok --testing is a known property however, if we're creating/assigning the instance at a later time for example, in tests : describe test , function { let myinstance: typeof mymodel.type before function { myinstance = mymodel.create { testing: 1,2,3 } ; } it ts compile error , function { const mysnapshot = getsnapshot myinstance mysnapshot.testing //not ok -- inferred type of mysnapshot is {} } } ; there's an easy solution, ie by explicitly telling it the return type getsnapshot<typeof mymodel.type>... , but i'd assumed it would be able to infer the type in this case.