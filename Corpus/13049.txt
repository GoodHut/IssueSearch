 URL : "https://github.com/altalogix/SFZeroModule/issues/4" TITLE : stream from disk BODY : originally posted on steve folta's repo but i later realised i would prefer to implement it in this juce module version . i would like to implement disk streaming capability to allow loading large instruments. any guidance here would be very welcome to make this fit better into the existing code. for sf2 files to get started : loading an instrument: define a pre-caching blocksize cachesize sf2reader::readsamples - limit loading to first cachesize number of samples playing an instrument: something needs to trigger the reading of the full sample. i suppose this should be in sfzero::synth::noteon where we could submit an asynchronous loading of the rest of the sample into a temporary buffer. then when sfzero::voice::rendernextblock where i understand the bulk of the rendering is done reaches the end of it's pre-cached block, it could look at the temporary full-sample buffer. not sure yet where to delete the temporary buffer. maybe also in sfzero::voice::rendernextblock , which seems the first function to know that a note has finished. does this sound the best way?