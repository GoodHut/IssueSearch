 URL : "https://github.com/ros-industrial-consortium/descartes/issues/193" TITLE : extra ik-fast solutions BODY : descartes more or less requires ik-fast to work. my understanding of ik-fast is that it gives you the unique solutions that correspond to different robot configurations reaching for the same point. for many robots, there are 8 solutions returned for a given pose. for the ik-fast models i've been working with, these 8 solutions have joint values between -pi and pi. if a robot joint can rotate further than that, say +/- 2 pi, then there are extra solutions which are not currently captured. some of you may have already figured this out, but our existing robot models do not take this into account. effectively all descartes robot models have artificial joint limits at +/- pi. the brute force way to incorporate these is to try adding/subtracting 2 pi to every possible joint that can move beyond pi for every solution that we get from ikfast and keeping any that are valid. this applies to every possible permutation of those joints. so we could end up with a lot more solutions for some robots e.g., ur5 . there may be a more intelligent way to search and store these alternate solutions, but i can't think of it right now.