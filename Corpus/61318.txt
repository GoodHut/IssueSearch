 URL : "https://github.com/cobertura/cobertura/issues/358" TITLE : another try finally bug BODY : hello, i have a code coverage issue with a try-finally block. i originally had a try-with-resources but upon seeing the coverage issues and googling the reasons, i decided to go old school on it. unfortunately i hit another issue although code coverage was much better . here's a super simplified code snippet i don't code like this . filereader filereader = null; bufferedreader buffreader = null; try { filereader = createfilereader copybook ; buffreader = createbufferedreader filereader ; copybooktype = determinecopybooktype buffreader ; }finally { if buffreader == null { system.out.println buffreader == null ; }else{ system.out.println buffreader was closed ; } if filereader == null { system.out.println filereader == null ; }else{ system.out.println filereader was closed ; } } cobertura flags the first line in the finally block as red, the rest green. what's special about this, is if i add a system.out.println as the first line of the finally block i can also do a simple buffreader = buffreader instead of a system.out , i get 100% coverage without changing a test case or any other line. fyi, i get the same results if i actually close the files instead of just printing out .... was closed . i tried several different versions of easymock, powermock, mockito and doing away with mocks all together using inner class and i get the same results. i'm using 2.7 version of cobertura via maven plugin. i've looked at issue https://github.com/cobertura/cobertura/issues/170 and seen the work around: https://github.com/checkstyle/checkstyle/pull/3031/files the work around does work. i'm reporting this issue because none of the other try issues seem to be fixed/worked around by a simple statement being added as the first line. as i don't know cobertura's code, i don't know if it's the same cause or not.