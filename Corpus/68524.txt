 URL : "https://github.com/zhuker/lamejs/issues/38" TITLE : save buffer to mp3 file BODY : i just write some code like this. how can i save buffer to a mp3 file with nodejs? var lamejs = require 'lamejs' ; var fs = require 'fs' ; function encodemono channels, samplerate, samples { var buffer = ; var mp3enc = new lamejs.mp3encoder channels, samplerate, 128 ; var remaining = samples.length; var maxsamples = 1152; for var i = 0; remaining >= maxsamples; i += maxsamples { var mono = samples.subarray i, i + maxsamples ; var mp3buf = mp3enc.encodebuffer mono ; if mp3buf.length > 0 { buffer.push new int8array mp3buf ; } remaining -= maxsamples; } var d = mp3enc.flush ; if d.length > 0 { buffer.push new int8array d ; } console.log 'done encoding, size=', buffer.length ; // fs.open 'test.mp3', 'w', err, fd => { // if err { // console.log err ; // return; // } // fs.write fd, buffer, err, written, buffer => { // if err { // console.log err ; // return; // } // console.log 'written:', written ; // } ; // // } ; } function toarraybuffer buf { var ab = new arraybuffer buf.length ; var view = new uint8array ab ; for var i = 0; i < buf.length; ++i { view i = buf i ; } return ab; } var wavfile = ./left44100.wav ; //var request = new xmlhttprequest ; //var request = xmlhttprequest; fs.readfile wavfile, err, data => { let audiodata = toarraybuffer data ; console.log audiodata ; var wav = lamejs.wavheader.readheader new dataview audiodata ; console.log 'wav:', wav ; var samples = new int16array audiodata, wav.dataoffset, wav.datalen / 2 ; encodemono wav.channels, wav.samplerate, samples ; } ;