 URL : "https://github.com/DrPandemic/MasDB/issues/10" TITLE : remote genserver call BODY : ok, so we have https://github.com/drpandemic/masdb/blob/master/lib/masdb/distant_supervisor.ex to fetch remote pids. the goal of this module is to be able to spawn remote task to extract registered pids on that remote server. a use case could be when the register want to update itself, it needs to contact a certain number of other register to be sure everyone agrees on the state. if we always work this way, it would be sub-optimal because it's a 2 way trip get the pid and then call the genserver . i see 2 possible simple solutions here. we could keep the current distant_supervisor concept and add a cache. this way, we wouldn't do a second query every time. but, managing a cache can be complicated. the second solution could be to change/remove the distant_supervisor and add a way to directly call a remote genserver. something like call remote_node, fn, args . i think this could be done with protocols http://elixir-lang.org/getting-started/protocols.html . or, we could add directly other signature to our genserver functions. for example, if we have masdb.node.get_something arg0 we could also add a function like masdb.node.get_something arg0, remote_node that would bridge the gap.