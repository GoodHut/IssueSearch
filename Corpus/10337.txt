 URL : "https://github.com/stratis-storage/stratisd/issues/686" TITLE : cache tier ideas BODY : @mulkieran: based upon this article you found https://access.redhat.com/articles/2106521 and our discussion, and this thread https://www.redhat.com/archives/linux-lvm/2014-august/msg00016.html , it sounds like the configuration being considered assumes caching the thinpool data device as opposed to the thin devs directly, which is not supported. this then presents two issues: 1 this leaves the thinpool meta dev -- which should be quite hot access-wise -- uncached. 2 caching doesn't support the origin device in this case the thinpool data dev being resized underneath it. 2 leads to the implication that we would need to wrap data dev extensions with tearing down and recreating the cache, hurting the cache's effectiveness, and that we would also suffer reduced performance because of 1 unless we did something else such as moving the thin meta dev to the cache device, as that thread suggests, but that has its own complexities . nothing impossible with this, but it sounds less than ideal. another thought i had that could resolve both these drawbacks is to cache the entire available space in the pool: create a linear dev that glues together the usable space in all the blockdevs and use that as the cache origin dev. flex layer devs sit on top of the cache layer, and all of them including the thin meta dev benefit. thin data dev extensions would no longer invalidate the cache, but adding or removing a blockdev would. thoughts?