 URL : "https://github.com/maro01507i/Calculator/issues/1" TITLE : propuesta de mejoras BODY : hola @maro01507i , he revisado el branch test y te propongo las siguientes mejoras: - tienes archivos que solo pertenecen al ide. para eliminarlos: elimínalos y crea un fichero .gitignore en la raíz del proyecto. puedes combinar estos dos ficheros: https://github.com/github/gitignore/blob/master/global/jetbrains.gitignore https://github.com/github/gitignore/blob/master/node.gitignore - los módulos de nodejs no se versionan. para evitar que se versionen, con los .gitignore que te he mencionado arriba te valdría. para poder mover tu proyecto y conocer siempre la versión de los módulos que tienes se utiliza un archivo llamado package.json igual que en python con requirements.txt . modificas lo que quieras en el package.json y si es una adición, desde la consola de comandos, en la raíz del proyecto se hace npm install . si se trata de una eliminación, no tienes por qué borrarlo si no quieras, pero si quisieras, se puede con npm prune . los módulos necesarios, se introducen en dependencies . documentación: https://docs.npmjs.com/files/package.json ejemplo: en tu mismo repo https://github.com/maro01507i/calculator/blob/master/libraries/package.json - para las dependencias de la propia página web, se pueden usar imports y utilizar webpack para empaquetar todo en un mismo bundle. esto es mucho lío, pero así, en cada fichero puedes hacer imports y usar npm con las librerías esas. de la otra forma, tienes que usar commonsjs o los tags <script> de html. - para servir con expressjs y nodejs ficheros estáticos puedes crear una carpeta public y luego app.use express.static path.join __dirname, 'public' ; en esta carpeta introducirías los html, los css, los javascript y demás recursos públicos.