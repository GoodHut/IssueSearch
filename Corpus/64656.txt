 URL : "https://github.com/sequelize/sequelize/issues/7310" TITLE : hash injection security BODY : using specially crafted requests we can trivially bypass secret_token protections on websites using sequalize. many people have code like this db.token.findone { where: { token: req.query.token } ; but node.js and other platforms allow nested parameters, ie token $gt =1 will turn into token = { $gt :1}. when we pass such hash to sequalize it will consider it a query greater than 1 and find the first token in db, bypassing security of this endpoint. this behavior was copied from mongo https://docs.mongodb.com/manual/reference/operator/query/ using finely tuned $gt we can iterate all tokens in db and impersonate every single user. there are vulnerable sites in the wild. that's how it can be exploited in mongo http://blog.websecurify.com/2014/08/hacking-nodejs-and-mongodb.html and https://cirw.in/blog/hash-injection my advice would be to either disable this functionality entirely i.e. require passing token { $eq :token} every time or make sure the parameter isn't coming from req.query and is native hash object.