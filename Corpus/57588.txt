 URL : "https://github.com/goby-lang/goby/issues/103" TITLE : range of integer class BODY : i manually checked the edge cases of integer class with the latest master: ruby a = 999999999999999999 works a = 9999999999999999999 + 1 => panic: could not parse 9999999999999999999 as integer upper limit a = 9223372036854775807 equivalent to 0x7fffffffffffffff 2 64 - 1 overrun a = 9223372036854775807 + 1 => -9223372036854775808 negative number a = 9223372036854775808 => panic: could not parse 9223372036854775808 as integer lower limit a = -9223372036854775807 equivalent to 0xffffffffffffffff 2 64 overrun a = -9223372036854775807 - 1 => -922337203685477580 a = -9223372036854775807 - 2 => 9223372036854775807 a = -9223372036854775808 => panic: could not parse 9223372036854775808 as integer i don't think this is a bug but comes from go's spec, as well as a specification matter of goby. it might be good to add above to integer's api doc. ------------------ future: it might help us: https://golang.org/pkg/math/big/ ruby 2.4 finally ceased the legacy fixnum and bignum classes and migrated them to integer, so i think switching between integer and bignum again in goby might not be good.