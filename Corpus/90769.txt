 URL : "https://github.com/catchorg/Catch2/issues/1120" TITLE : stdout capturing is wonky BODY : description the capturing of stdout seems to not be working properly for me. on linux, all stdout seems to be swallowed and none of it makes it to the console. on the other hand, when i run the below example in wandbox, none of the stdout gets captured at all, and all of it makes it to the console. what gives? i swear this worked correctly in catch 1.x is there a compilation flag i need to modify to get the catch 1.x behavior where passing tests capture and swallow the stdout, and failing tests print out the captured stdout as part of the failure message? steps to reproduce c++ define catch_config_main // this tells catch to provide a main - only do this in one cpp file include catch.hpp test_case check string capturing , capturing { section captured? , capture { std::cout << should capture ; check 1==0 ; } section captured?22 , capture { std::cout << should not capture ; check 0==0 ; } } yields should capture ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ prog.exe is a catch v2.0.1 host application. run with -? for options ------------------------------------------------------------------------------- check string capturing captured? ------------------------------------------------------------------------------- prog.cc:7 ............................................................................... prog.cc:9: failed: check 1==0 with expansion: 1 == 0 should not capture =============================================================================== test cases: 1 | 1 failed assertions: 2 | 1 passed | 1 failed