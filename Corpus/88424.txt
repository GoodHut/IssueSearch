 URL : "https://github.com/origamitower/folktale/issues/139" TITLE : nicer error for matchwith BODY : <!-- the following is a template for your issue. you can use it as a guideline if you're not sure how to format your report --> if you are missing a union type in matchwith , you don't get an error telling you what you did wrong. if you look at the code, it's pretty simple to see, though: javascript b.matchwith { // hit: => log we have a hit. , miss: => log miss! } ; typeerror: pattern name is not a function at internalconstructor.matchwith /users/jessewarden/documents/_work_projects/get-eapi-oauth-token-master/node_modules/folktale/adt/union/union.js:67:27 i know i've seen another error somewhere where it was a page long and awesome. if you can guide me to where that kind of error handling is in the code, i can submit a pr for this. also, side note, is there any case for supplying a catch all like elixir has? javascript b.matchwith { hit: => log we have a hit. , miss: => log miss! , _: => log catch all. } ; steps to reproduce create a union type with 2 types and make a matchwith only have 1 of the 2, it'll throw the error. expected behaviour just a nicer error like i've seen elsewhere indicating what you did wrong, and steps to help you mitigate it in the future. observed behaviour throws the error i showed above. environment describe the environment where the problem happens. this usually includes: - os: mac - javascript vm: node 8 - folktale version: 2.0.0-rc1 additional information none.