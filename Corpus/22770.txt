 URL : "https://github.com/monster-slayers/web-is/issues/72" TITLE : milestone 2 checks BODY : - implement facade layer interfaces and implementations. - everything that should happen in the system must be available through these interfaces create entities, deleting them etc ; - you must have at least 2 non-trivial business functions on service layer the example project contains several of them . service layer is not always just a place to delegate to dao; - other points about the facade and service layers: - all the classes must be wired via dependency injection. your service objects should obtain an instance of the entitymanager that way; - all the facade interfaces must not reference entities, but transfer objects only; - all service interfaces must reference only entities, not data transfer objects; - you can use dozer framework to map entity instances to transfer objects. the mapping may be done on facade layer; - facade layer is used to drive transactions; - change layout of your project to multimodule maven project tutorial here http://maven.apache.org/guides/getting-started/index.html your project should have 3 separate modules: - dao layer - service layer and facade layer implementation - api layer - just dtos and facade interfaces! - facade layer will use service layer and service layer will use dao layer; - make sure that dataaccessexception or its subclass is thrown in case of any exception on a the dao layer; - implement simple unit tests for facade layer. just one simple test per method is enough. this is mainly so that itâ€™s easy to verify the facade layer works; - there must be extensive unit tests for the service layer particularly for your 2 business functions and all the tests of service layer must use mock dao objects;