 URL : "https://github.com/JuliaDiff/TaylorSeries.jl/issues/88" TITLE : add jacobian! BODY : related to taylorintegration's pr 18 https://github.com/perezhz/taylorintegration.jl/pull/18 . for performance reasons, it would be good to have an in-place evaluation version of jacobian in taylorseries. my proposal is something like this: julia function jacobian!{t<:number} jjac::array{t,2}, vf::array{taylorn{t},1} numvars = get_numvars @assert length vf == numvars for comp = 1:numvars jjac comp,: = vf comp .coeffs 2 .coeffs 1:end end nothing end as far as i've tested it, this change improves memory use on taylorintegration lyapunov spectrum methods, in particular stabilitymatrix! , where jacobian is currently used.. perhaps this could be included in 87 ?