 URL : "https://github.com/sniezka102/LearnCodeWars/issues/3" TITLE : take an integer n n >= 0 and a digit d 0 <= d <= 9 as an integer. square all numbers k 0 <= k <= n between 0 and n. count the numbers of digits d used in the writing of all the k 2. call nb_dig or nbdig or ... the function taking n and d as parameters and returning this count. BODY : take an integer n n >= 0 and a digit d 0 <= d <= 9 as an integer. square all numbers k 0 <= k <= n between 0 and n. count the numbers of digits d used in the writing of all the k 2. call nb_dig or nbdig or ... the function taking n and d as parameters and returning this count. examples: n = 10, d = 1, the k k are 0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100 we are using the digit 1 in 1, 16, 81, 100. the total count is then 4. nb_dig 25, 1 : the numbers of interest are 1, 4, 9, 10, 11, 12, 13, 14, 19, 21 which squared are 1, 16, 81, 100, 121, 144, 169, 196, 361, 441 so there are 11 digits 1 for the squares of numbers between 0 and 25. test.describe nb_dig test.it basic tests test.assert_equals nb_dig 5750, 0 , 4700 test.assert_equals nb_dig 11011, 2 , 9481 test.assert_equals nb_dig 12224, 8 , 7733 test.assert_equals nb_dig 11549, 1 , 11905 def nb_dig n, d : val = item 2 for item in range 0,n+1 if n >= 0 or d >= 0 and d <= 9 count = 0 valtostring = .join str item for item in val for x in valtostring: if x == str d : count += 1 return count print nb_dig 10,1 print nb_dig 5750, 0 print nb_dig 12224, 8 print nb_dig 11011, 2 print nb_dig 11549, 1 =========== shorter proposition def nb_dig n, d : return sum str num 2 .count str d for num in range n + 1 print nb_dig 10,1