 URL : "https://github.com/gaearon/redux-thunk/issues/160" TITLE : withstore extra argument? BODY : any chance we have an additional function argument that receives the store and forwards it to the action? something like: function createthunkmiddleware extraargument, withstore = function.prototype { return { dispatch, getstate } => next => action => { if typeof action === 'function' { return action dispatch, getstate, extraargument, withstore getstate } return next action } } const thunk = createthunkmiddleware thunk.withextraargument = createthunkmiddleware export default thunk the motivation for this function callback is that i always have to call getstate within my authenticated action to get the user-key from the store: export const getmembers = org => dispatch, getstate => dispatch { type: get_members, payload: getorgmembers getstate .auth.get 'key' org , meta: { org }, } with that little hack i could be doing something like, and have the get user-key logic into just a single place: export const getmembers = org => dispatch, getstate, extraarg, key => dispatch { type: get_members, payload: getorgmembers key org , meta: { org }, } the withstore function would be as simple as: const withstore = getstate => getstate .auth.get 'key'