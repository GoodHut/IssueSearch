 URL : "https://github.com/triplea-game/triplea/issues/2753" TITLE : new ui next steps BODY : new ui is now available behind a beta flag, not fully functional yet - a question here for dev team here on how to proceed. we have a few options: 1. try to make new ui work with existing network model code. 2. remove existing ui so we can refactor model code and then integrate it with the new ui 3. build a new network code infrastructure json over java sockets or something similar option number one is a bit painful, but with enough stamina and teeth gritting and hacking we could get it to work. a nice bonus is that we can have both uis, new and old side by side with both working. option two would make integration of network model code with the new ui much easier. we would also be able to drop a very large amount of 'legacy' ui code. option three requires potentially the most work as we would be rebuilding the network model, and this could have implications for actual gameplay as well beyond the staging screens. if we want to start a new network model/codebase, this could be a good option. a downside to this approach is that it would probably take longest as we rewrite triplea's network code. so question for dev's, which option seems most reasonable/best? i think i am leaning towards number one or two, but if there is some help i could be talked into number three. number two is a bit attractive, but it requires us to commit with going with the new ui and not turning back. happily the new ui does have all the screens mostly completed, largely we just need to wire together the network models so that the game launches so it is actually pretty close . if we drop the old ui code and can then refactor the network model code, that would likely be the most efficient and interestingly least risky for getting the new ui launched. on the other hand there is some good value in having both ui's running in parallel while we work to complete the ui update.