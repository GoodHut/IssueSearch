 URL : "https://github.com/DSpace/dspace-angular/issues/89" TITLE : community home page BODY : add a community home page component their route should be /communities/:id the component should show the following fields if they exist: - title - logo - introductory text html - news html - also referred to as sidebartext - copyright text html create a smart component at the root that connects to the communitydataservice to fetch the data, use small dumb components i.e. a component that gets all its information through inputs rather than services for each of the fields. ensure the html fields get rendered as html. for adaptability's sake, it would be best if you'd take the approach of the simple-item-view component in the prototype https://github.com/dspace-labs/angular2-ui-prototype/blob/master/src/app/dspace/components/simple-item-view.component.ts , where you create a single wrapping component https://github.com/dspace-labs/angular2-ui-prototype/blob/master/src/app/dspace/components/item/view-element.component.ts to render a section of the page, and then a specific component https://github.com/dspace-labs/angular2-ui-prototype/blob/master/src/app/dspace/components/item/authors.component.ts that makes use of the wrapping component, for each field on the page. that way, if an institution using this ui later on, wants to customize the way e.g. news is rendered, they only need to touch the news component and nothing else. the wrapping component ensures that you can still re-use as much code as possible. for the layout, i'd say base yourself on the prototype http://ui-prototype.atmire.com/communities/93?page=1 , rather than the current dspace uis