 URL : "https://github.com/vadimdemedes/cancan/issues/28" TITLE : possible future of cancan BODY : i'd like to suggest possible future of cancan: - make api a bit simpler ability.can 'read', post instead of can user, 'read', post - provide more sophisticated rule checks based on mongo ql can be added with help of sift.js https://github.com/crcn/sift.js/tree/master - improve performance of checks via special datastructure this will prevent event loop blocking in case of big amount of rules - create a mongoose middleware which converts specified rules into mongo query and allows fetch records like post.accessibleby ability , where ability is a configured instance of ability class which in this library is just called cancan - separate rulebuilder and ability this will allow build context dependent dsl js const { rulebuilder, ability } = require 'cancan' function definerulesfor user { const { can, cannot } = new rulebuilder can 'read', 'update' , 'post' ; can 'delete', 'post', { createdby: user.id } ; cannot 'update', 'post', { readonly: true } ; can 'read', 'comment' ; can 'delete', 'comment', { createdat: { $gt: date.now - 3600 1000 } } return can.rules; } const ability = new ability definerulesfor currentuser ability.can 'read', post - more tests also i'd like to use something like mocha or jest for testing - provide browser version of the library - add better documentation similar to what ruby cancan has, provide examples for express.js integration, for angular2/aurelia/ionic2/react/vue integration some of these i did in past, so instead of creating one more cancan project suggest to merge some of my ideas into yours : so, @vadimdemedes what do you think?