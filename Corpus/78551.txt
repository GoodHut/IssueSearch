 URL : "https://github.com/facebookresearch/faiss/issues/216" TITLE : python sharded gpu index BODY : hi -- i'm wondering how to create a gpu index using indexshards as alluded to in the wiki. i understand how to create an index that's copied across gpus using indexproxy : dim = 128 ngpu = faiss.get_num_gpus res = faiss.standardgpuresources for i in range ngpu for r in res: r.settempmemoryfraction 0.45 flat_config = for i in range ngpu : cfg = faiss.gpuindexflatconfig cfg.usefloat16 = true cfg.device = i flat_config.append cfg indexes = faiss.gpuindexflatl2 res i , dim, flat_config i for i in range ngpu findex = faiss.indexproxy for sub_index in indexes: findex.addindex sub_index is there an analogous example of using indexshards ? in the benchmark code, it looks like there are some examples of copying an index from the cpu to multiple gpu shards, but ideally i'd like to construct the sharded index directly. thanks