 URL : "https://github.com/zig-lang/zig/issues/395" TITLE : float division by zero BODY : currently division by zero of floats will be caught at runtime and the program will abort when encountered. however, most other languages will allow float division by zero and instead generate a signalling nan with the fpu div by zero error set. this is currently used in a few places in the math library as a result of musl relying on division by zero to signal nans, and so division by zero errors will occur with valid inputs. the implementation here though is not a huge concern, since i can manually set whatever exceptions we need and rewrite the code to avoid them internally. the question is more about what behavior is considered right and we should follow so the user gets the least surprise. it is probably more correct to allow for float division by zero to be valid and not panic when encountered. thoughts?