 URL : "https://github.com/JuliaStats/Clustering.jl/issues/91" TITLE : kmeans dispatch problem BODY : the current implementation of kmeans has the following declaration: julia function kmeans x::matrix, k::int; weights=nothing, init=_kmeans_default_init, maxiter::integer=_kmeans_default_maxiter, tol::real=_kmeans_default_tol, display::symbol=_kmeans_default_display although it calls the function kmeans! whose declaration is: julia function kmeans!{t<:abstractfloat} x::matrix{t}, centers::matrix{t}; weights=nothing, maxiter::integer=_kmeans_default_maxiter, tol::real=_kmeans_default_tol, display::symbol=_kmeans_default_display here t is a subtype of abstractfloat . this constraint in t is not present in kmeans which allows us to call kmeans as: julia kmeans rand int,3,100 , 5 which throws an error. i also require kmeans{t} to be constrained with t<:abstractfloat because i am dispatching on kmeans for imagesegmentation https://github.com/juliaimages/imagesegmentation.jl/pull/11 as: julia kmeans{t<:colorant,n} x::abstractarray{t,n}, args...; kwargs...