 URL : "https://github.com/dgf/express-sequelize-session/issues/5" TITLE : how to use a custom table? BODY : user_session model: module.exports = function sequelize, datatypes { return sequelize.define user_session , { sid: { type: datatypes.string, primarykey: true }, expire: { type: datatypes.date, allownull: true }, data: datatypes.text, created_at: { type : datatypes.date, defaultvalue:null }, updated_at: { type : datatypes.date, defaultvalue:null } },{ underscored: true, indexes: { unique: true, fields: 'sid' } } ; }; how to get this working from within a separate model file? upon syncing the model with the database, i am left with the following mysql table named user_sessions: create table user_sessions sid varchar 255 not null default '', expire datetime default null, data text, created_at datetime default null, updated_at datetime default null, user_id int 11 default null, primary key sid , unique key user_sessions_sid sid , key user_id user_id , constraint user_sessions_ibfk_1 foreign key user_id references users id on delete cascade engine=innodb default charset=latin1; which is what i want. however, upon any page request, the module loops this query perpetually until i kill node: executing default : select data from sessions as session where session . sid = 'lkuitz3dshcxloewpl4ncrpo6ispkp85' limit 1; what am i doing wrong? i've associated and synced my models as such in model/user.js: var session = sequelize.import './user_session' ; session.belongsto user, {foreignkeyconstraint: true, foreignkey: 'user_id', ondelete: 'cascade', onupdate: 'restrict' } ;