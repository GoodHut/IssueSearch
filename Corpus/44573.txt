 URL : "https://github.com/azavea/raster-foundry/issues/1551" TITLE : feature flags cleanup BODY : see 1548 for more details. we have two options for this: 1 refactor the feature flags service to return promises. this would allow the rest of the app to continue loading, and only elements relying on feature flags would be blocked waiting on the /feature-flags endpoint, which would probably be a better user experience. 2 be more explicit about our app initialization phases, so that there is a single function or event that occurs when the app is ready that is, set up and authenticated so that api requests are expected to succeed . currently, the closest thing we have to a ready state is after we have set up listeners for location- and state-change events, but this can cause a jarring experience where the app loads but then appears to immediately log out the user which happens because they weren't actually logged in in the first place, but the front-end thought they might be . however, doing it this way would prevent the entire app from loading until both the /config and /feature-flags endpoint had returned, which might make the initial page load feel slow. it's possible we may want to do both.