 URL : "https://github.com/elastic-rs/elastic/issues/208" TITLE : add support for bulk BODY : it looks like the main way elastic is used is for bulk operations. we should make this more convenient so users don't have to manually construct the json payload themselves if they don't want. i think it would be good to offer something like: let bulk_ops = bulkops::new ; for doc in docs { let id = doc.id; let op = bulkop::insert doc .index my_index .ty my_ty .id id ; bulk_ops.add op ; } client.bulk .ops bulk_ops ; it'd be nice to figure out how to configure the op without having to define a local for it, we could do: let bulk_ops = bulkops::new ; for doc in docs { let id = doc.id; bulk_ops.insert doc .index my_index .ty my_ty .id id ; } client.bulk .ops bulk_ops ; where bulk_ops.insert returns an indexbulkopbuilder<'a> that calls add on drop. i think we need to be careful with that though. or if you want to supply your own payload: client.bulk .body bulk_body ; the bulkops object should be able to efficiently construct a payload as more operations are added. i think just formatting into a buffer is the easiest way to support multiple serialisable types.