 URL : "https://github.com/databio/simpleCache/issues/20" TITLE : loadcaches failure message BODY : right now, to someone unfamiliar with how loadcaches is implemented, the error message that comes back from a nonexistent cache file will be confusing. error in dotrycatch return expr , name, parentenv, handler : ::error:: no instruction or rbuild file provided. this comes from the call into simplecache ; here are the first couple of possible improvements that come to mind: 1 -- the logic for building the path to the cache file could be pulled out of simplecache itself, into a separate function. then loadcaches could use that function to check for the file and provide an more informative message about the missing cache file before ever calling into simplecache . simplecache could also use the filepath creation function. without additional modification, the filepath logic creation would then be executed twice once for the existence pre-check in loadcaches and once in simplecache itself, but since it's cheap that doesn't seem so bad . simplecache could also provide a parameter for a filepath directly, in which case it interprets its task as a loadcaches call, or at least skips the filepath construction step if an argument is provided to that hypothetical new filepath parameter. 2 -- since several possible stop s are possible from within simplecache , i don't want to simply wrap the call into it from loadcaches in a trycatch since we couldn't assume that a nonexistent filepath was the cause of the error. we could make a custom exception class for this and others as we saw fit errors from within simplecache and provide the appropriate missing file exception message if we intercept that error type from the call into simplecache . the first seems better to me, but i've not implemented custom exceptions in r before so am not sure how straightforward it is n't .