 URL : "https://github.com/couchbase/couchbase-lite-core/issues/50" TITLE : blob garbage collection BODY : need to implement deletion of blob files that have no references in the database as in cbl 1.x. 1. index all the blob digests used in the database 1. scan database for documents with attachments by checking metadata flag 2. scan those docs for references to blobs dicts with a _cbltype : blob property 3. collect the digest: property values of all those dicts 2. delete blob files whose digests don't appear in that index in 1.x we collected the digests in memory as a set data structure. this is fast and easy but has limited scalability, of course. i don't believe anyone has run into problems with the memory use, though. two ways around that: store the digest index in the database. interestingly, that turns step 1 into a pretty typical map/reduce process. store the index as a bloom filter, which uses vastly less space but will allow a small fraction of unused attachments to remain.