 URL : "https://github.com/BrayDong/COMP4711_Lab05/issues/10" TITLE : job 1: task model BODY : there is only the one csv file for this app, data/tasks.csv. i suggest naming models after the tables , which would usually mean the plural of the entity name that a table pertains to. for this lab, that suggests application/models/tasks.php ... class tasks extends csv_model { public function __construct { parent::__construct apppath . '../data/tasks.csv', 'id' ; } } the filename above is a mouthful, starting at the application folder, moving up one folder, and then drilling down into the data folder. it would be cleaner if we had a datapath constant to use, and you are free to do that but not required to , for instance setting that in applicaiton/config/constants.php. if you choose to do this, do not set absolute paths, as they may not work on your team mates' platforms or mine! we inherit a whack of functionality from csv_model ... crud methods, searching methods, etc. check out core/csv_model.php, if you haven't done so already. note: in the constructor above, i expressly specified the table name case sensitive and the column to use as a primary key. if these were not provided, the base model constructor will assume that the origin table filename is the same as the class name, and that the unique identifier column is id that would be the primary key in an rdb table . your webapp homepage should still load without change, but without errors.