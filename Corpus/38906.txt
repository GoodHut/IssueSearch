 URL : "https://github.com/doctrine/dbal/issues/2841" TITLE : refactor type system BODY : from @majkl578 on slack: just a quick thought of a possible approach: introduce typeinterface with required methods or different name make types implement it introduce some kind of types enum-like empty class for implictly supported types, just like i.e. generatortype in orm develop edit: maybe this could stay in type to lower bc implications and make type an enum class in 3.0 introduce non-static typeregistry with no default types hardcoded in it - this would allow different connections/platforms use different type mappings as @ocramius suggested in https://symfony-devs.slack.com/archives/c3fqpe6le/p1504362019000073 make typeregistry work with type instances instead of their class names sounds good, but unsure about consequences migrate type:: to types enum, keep bc by aliasing them and deprecate in 2,7 migrate type:: mechanics to typeregistry, keep bc by using private static typeregistry internally in 2.7 some kittens may die during this process in 3.0 develop drop these bc hacks so no more kittens die