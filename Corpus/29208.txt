 URL : "https://github.com/getsentry/sentry/issues/6095" TITLE : json schema for api BODY : let's implement json schema! overview utilizing json schema will let sentry's backend api describe to the frontend how forms should function. you can imagine this as an extension of the stuff we built ourselves get_config on plugins for example , but in a standardized format. this means that to render the project settings , we could hit an endpoint which describes the settings and the ui could be completely agnostic of the ordering/grouping of components. in the cases where that's not acceptable, at the very least the backend can clarify what types, validation, and general metadata form components should take on. implementation there's a few unanswered questions: 1. what should be used to describe the schema? 2. how is schema queried and returned? schema descriptions we could continue using the rest serializers for input and build an output parser for them. alternatively we could use marshmallow framework agnostic, used by zeus . i would side with using marshmallow at this point, as it seemingly could replace all of our serializer code as well if we really wanted to invest into it. it's plausible rest framework can as well, however it's unclear that it'd be worth refactoring and/or upgrading the framework just to continue to be locked into django. querying schema there's two clear options that i see: 1. adding some kind of ?schema=1 to endpoints or possibly use options ? . this has complexity in that we're going to always return a lot of data and we may not want it. for example, sentry has a ton of options per project, and we dont render them all on one page right now. 2. add a special 'schema' endpoint. this could be something like /:endpoint/:schema/ . in addition, we likely will want to make it possible to select which top level attributes are returned for the schema, which ensures changing the ui can be extremely minimal.