 URL : "https://github.com/byxor/limp/issues/15" TITLE : optimise tail recursion BODY : currently recursive functions create a lot of stack frames. this isn't always necessary, and can be optimised as tail call recursion . how would we do it? i don't know yet. 1. we need some way of _detecting_ when a recursive function can be optimised. 2. we need to use constant stack memory. this would probably involve somehow avoiding the recursive call and re-using the same memory. how? magic. python's recursive limitations are frustrating. it looks like we'll have to implement this ourselves.