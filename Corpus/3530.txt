 URL : "https://github.com/zingdle/Blog/issues/1" TITLE : recv and read BODY : i am writting a simple python socks5 server with socketserver.tcpserver . the framework is simple. python import socketserver class mytcphandler socketserver.streamrequesthandler : def handle self : handle the request pass if __name__ == __main__ : host, port = localhost , 9999 server = socketserver.tcpserver host, port , mytcphandler server.serve_forever class streamrequesthandler provides both self.connection and self.rfile to manipulate network content in the handle method. - self.connection is the socket connected to the cilent. - self.rfile is the file object generated by makefile method. then you can use some file methods like read , write or readline at first, i wrote this for handle python def handle self : data = self.connection.recv 257 the handshake takes up at most 1 + 1 + 255 bytes print data it works. but when i tried to change it to this python def handle self : data = self.rfile.read 257 print data this time nothing was printed out. the script blocks at read . when i changed self.rfile.read 257 to self.rfile.read 3 . the normal request \x05\x01\x00 received. weird. after some searching, i found this for file object > file.read size > read at most size bytes from the file less if the read hits eof before obtaining size bytes . if the size argument is negative or omitted, read all data until eof is reached. so this is where it went wrong. the read method won't return until it see eof or the content read is big enough. at socks5 handshake the client won't send eof so the read keep waiting. while recv won't have this problem.