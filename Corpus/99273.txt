 URL : "https://github.com/WebAssembly/tool-conventions/issues/8" TITLE : merging of global sections BODY : i think that phrase is somewhat ambiguous: data segments and table sections need to be merged by concatenation+renumbering. the code section can be merged that way, too, though it's not clear to me whether a linker should, should be allowed to, or shouldn't collapse identical function bodies to the same function index but not the same table index . but for globals, doesn't it depend on the global whether the right thing to do is to concatenate the global entries such as for unrelated globals or make them refer to the same combined global such as for the stack pointer ? in c terms, the same global variable in different cus should be made to refer to the same memory location/wasm global, right? even if the approach we choose is to concatenate global entries in general, i don't see anything specific about the stack pointer that justifies giving it, but no other global, a special section to indicate it should be collapsed. so the specific proposal is to replace merging by concatenation or collapsing in linking.md; the less specific proposal is to get rid of the stack pointer special case and replace it with a generic way of merging common globals by name, rather than id.