 URL : "https://github.com/misja-alma/unionfind/issues/2" TITLE : hashunionfind is incorrect BODY : the following test case fails for hashunionfind thus it is not a correct implementation. import org.scalatest.funsuite class unionfindtests extends funsuite { test unionfindtests.hashunionfind { val step0 = hashunionfind.create 6 val step1 = step0.union 0, 1 val step2 = step1.union 0, 2 val step3 = step2.union 3, 4 val step4 = step3.union 3, 5 val step5 = step4.union 1, 4 assert step5.connected 2, 3 } } what happens is that after step 4 the map looks like this: lookup: 0 -> 0,1,2 1 -> 0,1 2 -> 0,1,2 3 -> 3,4,5 4 -> 3,4 5 -> 3,4,5 partitions: 0, 1, 2 , 3, 4, 5 when step 5 then runs, the entries in 1 and 4 are combined, creating 0,1,3,4 which does not exist in the current partitions and are thus added as a new partition resulting in 0, 1, 2 , 3, 4, 5 , 0,1,3,4 . when we then ask if 2 and 3 are connected the set 0,1,2 will be picked out which does not contain 3 and returns false.