 URL : "https://github.com/NewForester/apl-py/issues/95" TITLE : 2x2 matrix calculator BODY : milestones are great for setting out the medium terns goals but on github there is no markdown so you are limited to a simple statement. so here is the full statement: the 2x2 matrix calculator is is the next step towards a full array calculator. the functions for the vector calculator will be extended as necessary and appropriate to handle 2x2 matrices. the reasons for restricting the milestone to 2x2 matrices are to - limit the number of test cases that need to be written and - allow a little time and space for experimentation. there are several options to be considered for the array calculator. the oldest idea was to move from python lists to a numpy array or similar representation. the snag with this approach is that such arrays need to be homogeneous: if one element is real, then all elements must be real. the killers appear to be mixed and nested vector that are, by definition, heterogeneous. the next idea was to use a vector representation internally with the array's rank representing a logical structure laid on top. looks good for mathematical functions but poor for some non-mathematical functions, particularly when it comes to 'lazy' evaluation. the most recent idea was to use a 'c' style approach of vectors of vectors. this might work every well for non-mathematical functions along first and last axes but it is likely to be a mess for other axes. a lazy design approach might choose both these two approaches and provide the means to convert between the two. i see the 'lazy' evaluation approach providing the conversions in the form of iterators. the open question is will such conversions be simply slow mechanisms of resolving promises or can we be a bit more clever. it may not be possible to answer this question in this milestone but it will be given 'on-going' thought.