 URL : "https://github.com/open-horizon/anax/issues/306" TITLE : agbot multi-tenant support BODY : suggestions from mike: - notion of separately owned policies - reduce db mutexes - gather all of the policies up for all tenants, make a goroutine pool to serve them, have state for each - have a fat loop that finds all devices to make agreements with, send the resulting device list and the tenant's state to one of the goroutines to fulfill it - boltdb has transaction closures with visibility only after the commit from a transaction and the concurrency model golang pushes most is queueing work in channels so you don't have this concurrent access to the db problem really - each goroutine needs its own connection into the db threadpool and needs to be able to make writes to its namespaces at the same time as other goroutines write to their namespaces