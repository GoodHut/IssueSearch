 URL : "https://github.com/rails/webpacker/issues/1127" TITLE : excluding vs testing files BODY : hi all, a recent change https://github.com/rails/webpacker/blob/master/package/rules/file.js to the file-loader that is included in webpacker broke our loaders implementation in 3.2.0 . the problem was that before this update a certain number of files was included/tested for the file-loader matcher, but now certain files were excluded from the file-loader . i'm wondering why exclude is used in favour of test ? it seems excluding file extensions makes it harder to maintain and a hell to debug the actual problem. if people still want to use exclude in favour of the use action, i would like to propose to also add .md to the list. --- i've fixed things on our side by adding .md files to the list of files to be excluded in case any one is running into the same problems . javascript config/webpack/environment.js const { environment } = require '@rails/webpacker' ; // - alter the fileloader exclude statement to make sure markdown files aren't loaded by the file-loader const fileloader = environment.loaders.get 'file' ; fileloader.exclude = /\. js|jsx|coffee|ts|tsx|vue|elm|scss|sass|css|html|json|md ? \.erb ?$/ module.exports = environment;