 URL : "https://github.com/diaspora/diaspora/issues/7310" TITLE : hsts header adjusting BODY : i've been trying to set up hsts headers on my pod, following the advice on https://hstspreload.org/ https://hstspreload.org/ for setting up and testing hsts preloading. but after lots of exploration, i discovered that the environment.require_ssl = true setting makes rack::ssl produce its own hsts headers. rack::ssl also does the very useful job of ensuring that all cookies are marked as secure. but i want a slightly different hsts header i want to include includesubdomains , for example . i've used apache's header always set ... to create my own customised version, but bizarrely i end up with two different strict-transport-security headers - it seems that apache's header option acts before the rack::ssl middleware does its work?? so i considered setting environment.require_ssl = false , but then i lose the cookie security. my current solution is to edit config/initializers/enforce_ssl.rb to add , hsts: false at the end of the rack::ssl line. it would be nice to have an additional option in the environment settings to do this. rack::ssl does not offer the preload option either, so in its current status, it cannot be used to produce the header i ultimately want. so allowing something like the following in diaspora.yml could work: environment: require_ssl: true hsts_options: false or environment: require_ssl: true hsts_options: expires: 1000000 subdomains: true which would pass these options through to rack::ssl if hsts_options is set. obviously this is an advanced option!! thoughts?