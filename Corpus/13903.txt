 URL : "https://github.com/kotlin-korea/AndroidApiDemo/issues/4" TITLE : 5회차 view/list BODY : <br> 이번 컨버트의 난이도도 대체로 평이했습니다. 그 중에서 가장 빈번하게 출현했던 개념은 lazy와 apply 였고, 새로 알게된 개념은 inner class였어요! 1. lazy 이미 이전 스터디에서 이야기가 나왔던 개념이지만, 제가 사용해 본 건 이번이 처음이네요. 문제 ? 의 코드는 다음과 같습니다. kotlin private val mcursor: cursor by lazy { contentresolver.query contacts.content_uri, contact_projection, null, null, null } private val madapter: simplecursoradapter by lazy { simplecursoradapter this@list2, android.r.layout.simple_list_item_1, // use a template that displays a text view mcursor, // give the cursor to the list adapter arrayof contacts.display_name , // map the name column in the people database to... intarrayof android.r.id.text1 , // the text1 view defined in the xml template 0 } 처음엔 별 생각 없이 init {} 을 사용했는데, 컴파일 오류는 없었지만 contentresolver 를 호출하는 부분에서 nullpointerexception 이 발생하더군여...^p^ 당연한 일이었습니당.. 생성자에서 얘를 호출하다보니 context가 null 이라.. ㅎㅎ 그래서 lazy를 사용해 해결을 했습니다!<br><br> 2. nested and inner classes 이 개념은 처음 접하는 개념이었어요! 어쩌면 예전에 이야기가 나왔을 수 있지만;;ㅎㅎ.. ~이미 새하얘진 기억~ nested classes 와 inner classes의 차이점: 전자는 바깥 클래스의 멤버에 접근하지 못하는 반면, 후자는 접근이 가능하다. 코틀린 레퍼런스 참조 https://kotlinlang.org/docs/reference/nested-classes.html 이상입니다!