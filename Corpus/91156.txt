 URL : "https://github.com/reaktivity/ignition/issues/11" TITLE : system benchmarking tools BODY : each nukleus can provide specific microbenchmarks, but we also need a convenient way to assess system performance end-to-end. one of the most challenging aspects of getting good benchmark results is first to get a good bench upon which to run the benchmark tests. for example, it is common to see multiple clients being simulated in a benchmark by running multiple instances of the actual client application, or perhaps an equivalent client with simplified ux. under normal operation, each client is running on its own hardware, such as a phone, tablet or laptop. however, in the benchmark environment described above, the simulated clients typically share the same hardware, and therefore compete with each other for available resource. if insufficient resources are given to the simulated clients, then the benchmark ends up testing the efficiency of the clients as they compete for shared resources, rather than the efficiency of the server that is supposed to be under test. instead, we can use the same server-side architecture to simulate the clients by putting the same network traffic on the wire as the real client application, but at significantly reduced overhead, creating a much more stable bench for testing many concurrent clients and high throughput. reaktivity allows composition of nuklei to form arbitrary high performance application networking stacks, so if we add to that a bench nukleus that can be controlled to initiate new streams and drain data on response streams, then we can drive significant load on the server at low overhead. the server can then be inspected in parallel via shared memory to assess live performance benchmark results. the same benchmark assessment tooling can be applied to live systems, as it has no dependency on the load generation tooling.