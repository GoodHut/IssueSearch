 URL : "https://github.com/badga/Collaborative-exams/issues/4" TITLE : dépôt & projet général BODY : v. a v. b bp maven × 2 exposer des types généraux si possible list plutôt que arraylist, par exemple optional ou garanties contre null. multipplechoice ⇒ multiple questioncount ne doit pas se trouver dans question, car ce n’est pas propre à une question locale plutôt que string : type plus clair bp exceptions json : utiliser technique vue au cours pour éviter casts ; assurer ordre sur les champs ; choix format date très discutable https://stackoverflow.com/questions/10286204/the-right-json-date-format utiliser plutôt le choix du standard jsonb, à défaut d’y avoir réfléchi consciencieusement utiliser https://docs.oracle.com/javase/tutorial/essential/exceptions/tryresourceclose.html programmer avec des streams plutôt que des fichiers, c’est plus général : reader, writer ou inputstream, outputstream https://docs.oracle.com/javase/tutorial/essential/io/streams.html servlets : choisir méthode http appropriée post, get, … ; envoyer réponse attendue id ; ne pas utiliser inutilement les attributs de requêtes ; test fonctionnel demandé javadoc au format javadoc, pas // ; enlever les commentaires inutiles conservez les données en mémoire plutôt que dans des fichiers, en attendant de les mettre dans une vraie bd. beaucoup de choses à revoir. mais il n’est pas trop tard : les notes qualité sont temporaires.