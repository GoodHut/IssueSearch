 URL : "https://github.com/fpco/haskell-filesystem/issues/19" TITLE : incorrect monoid instance BODY : hi. monoid instance of filepath is incorrect: > let x = f.decodestring /a/b in x mappend mempty == x false it seems, the reason is in append lib/filesystem/path.hs : 171 append :: filepath -> filepath -> filepath 172 append x y = cased where 173 cased = case pathroot y of 174 just rootposix -> y 175 just rootwindowsvolume{} -> y 176 just rootwindowscurrentvolume -> case pathroot x of 177 just rootwindowsvolume{} -> y { pathroot = pathroot x } 178 _ -> y 179 just rootwindowsunc{} -> y 180 just rootwindowsdoubleqmark -> y 181 nothing -> xy 182 xy = y 183 { pathroot = pathroot x 184 , pathdirectories = directories 185 } 186 directories = xdirectories ++ pathdirectories y 187 xdirectories = pathdirectories x ++ $ if null filename x 188 then 189 else filenamechunk x 190 in xdirectories , which adds filename of x to the directories of resulting filepath . here is the result with modified show instance: > decodestring posix /a/b/c filepath {pathroot = just rootposix, pathdirectories = a , b , pathbasename = just c , pathextensions = } > decodestring posix /a/b/c mappend empty filepath {pathroot = just rootposix, pathdirectories = a , b , c , pathbasename = nothing, pathextensions = }