 URL : "https://github.com/w3c/web-platform-tests/issues/8668" TITLE : module execution timing BODY : i've found a different between how browsers execute inline module scripts. the below example demonstrates the difference: html <!doctype html> <html lang= en > <template> <script type= module > console.log two ; </script> </template> <script type= module > let tmpl = document.queryselector 'template' ; let frag = document.importnode tmpl.content, true ; console.log 'one' ; document.body.append frag ; console.log 'three' ; </script> initially i expected to see this logged as: one two three in firefox with modules enabled this is what you see. in chrome and safari you get: one three two after reading the spec for prepare a script https://html.spec.whatwg.org/multipage/scripting.html prepare-a-script i think that the latter is actually correct. specifically step 23 says fetch the descendants of and instantiate script which asynchronously completes . even though there are no descendants in this case, it makes sense that the algorithm would work the same with 0 descendants as it does with n descendants. so, my question is, is my interpretation correct here? if so i will add a test for this. thanks!