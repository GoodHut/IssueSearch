 URL : "https://github.com/foxbenjaminfox/vue-async-computed/issues/17" TITLE : infinite dependency chains BODY : thanks for the great library! i'm trying to debug an issue where i end up with 2 async computed properties cyclically triggering each other. as far as i can see it should be only one way. i just wanted to check that it is okay to have one async property depend on another? the two properties i have are files and currentdir . i expect files to depend on currentdir , but not the other way around. am i doing something wrong here? the full file is here https://github.com/peergos/web-ui/blob/master/src/components/filesystem/index.js context is an object from an external library which returns promise like objects with thenapply methods. currentdir: function { var context = this.getcontext ; if context == null return promise.resolve null ; var x = this.forceupdate; var path = this.getpath ; return new promise function resolve, reject { context.getbypath path .thenapply function file { resolve file.get } ; } ; }, files: function { var current = this.currentdir; if current == null return promise.resolve ; var that = this; return new promise function resolve, reject { current.getchildren that.getcontext .thenapply function children { var arr = children.toarray ; that.showspinner = false; resolve arr.filter function f { return !f.getfileproperties .ishidden; } ; } ; } ; },