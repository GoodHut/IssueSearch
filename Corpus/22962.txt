 URL : "https://github.com/xpenatan/gdx-dragome-backend/issues/28" TITLE : need port gdx test BODY : will be very good if you port gdx-test https://github.com/libgdx/libgdx/tree/master/gdx/test/com/badlogic/gdx to test-engine for web dragome. and check that all test run ok. i think that perhaps will be trouble with bits.java because it used bitwise operations with long that do not have full support in javascript. bitwise operations are a bit of a hack in javascript. since all numbers in javascript are floating point, and bitwise operators only work on integers, javascript does a little behind the scenes magic to make it appear bitwise operations are being applied to a 32bit signed integer. specifically, javascript takes the number you are working on and takes the integer portion of the number. it then converts the integer to the most number of bits that number represents, up to 31 bits 1 bit for the sign . so 0 would create a two bit number 1 for the sign, and 1 bit for 0 , likewise 1 would create two bits. 2 would create a 3 bit number, 4 would create a 4 bit number, etcâ€¦ it's important to realize that you're not guaranteed a 32bit number, for instance running not on zero should, in theory, convert 0 to 4,294,967,295, instead it will return -1 for two reasons, the first being that all numbers are signed in javascript so not always reverses the sign, and second javascript couldn't make more than one bit from the number zero and not zero becomes one. therefore ~0=-1. so bitwise signs in javascript are up to 32 bits. https://stackoverflow.com/questions/3081271/number-of-bits-to-represent-a-number