 URL : "https://github.com/BADF00D/DisposableFixer/issues/21" TITLE : add codefix wrap in using BODY : if an undisposed object is detected, there should be a possibility to wrap this in a using statement via codefix. there are several situation that should be treated differently: an undisposed local variable csharp namespace somenamespace { public class someclass { public void someclass { var mem = new memorystream ; mem.write ... } } } should become: csharp namespace somenamespace { public class someclass { public void someclass { using var mem = new memorystream { mem.write ... ; } } } } an undisposed anonymous variable csharp namespace somenamespace { public class someclass { public void someclass { new memorystream ; } } } should become: csharp namespace somenamespace { public class someclass { public void someclass { using new memorystream { } } } } an undisposed anonymous variable within an ctor call of a class that is not tracking csharp namespace somenamespace { public class someclass { public void someclass { using var reader = new nontrackingreader new memorystream { } } } } should become: csharp namespace somenamespace { public class someclass { public void someclass { using var somename = new memorystream { using var reader = new nontrackingreader somename { } } } } }