 URL : "https://github.com/Appliscale/xprof/issues/73" TITLE : split gui from core BODY : several future users indicated that it would be useful to have the gui webserver+js split from the tracing core part. this ticket is to track requirements, use cases and implementation ideas. please give feedback in the comments. the suggested way of using xprof currently is to include it as is in the erlang/elixir release of the target node. some of the motivations for only including the tracer core are - target release already contains conflicting version of cowboy - target system already has a ui and only xprof tracer core would be used with a different custom ui - include the least dependencies in the target release and run xprof gui in a separate node possibly even on a separate host some implementation options that are discarded - include nothing in target node and send trace messages via port: unfortunately this solution turned out to have unacceptable overhead - include nothing in target node and inject code: we want to use hdr_histogram nif in the target node and only send aggregated data outside and nifs cannot be injected on a nice way requirements/implementation highlights so far - two components would communicate via erlang distribution - the tracer core will have a documented erlang api - current way of usage should be still possible ie include everything in target node open questions so far - how exactly to build releases and packages