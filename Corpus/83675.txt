 URL : "https://github.com/JetBrains/resharper-unity/issues/123" TITLE : checking of input strings BODY : <sup><sub>when i'm done there will be no more stringly-typed methods left</sub></sup> unity's input https://docs.unity3d.com/scriptreference/input.html class has a number of methods which take a magic string parameter. we should be able to make sure you're using a valid string for most of them. actual: - getkey https://docs.unity3d.com/scriptreference/input.getkey.html / down https://docs.unity3d.com/scriptreference/input.getkeydown.html / up https://docs.unity3d.com/scriptreference/input.getkeyup.html : take a string representing a key https://docs.unity3d.com/manual/conventionalgameinput.html . also, suggest using the overload taking a keycode https://docs.unity3d.com/scriptreference/keycode.html instead. auto convert between the two forms would also be nice. virtual: these are a ~bit~ lot trickier, as they require reading inputmanager.asset , which could be binary or yaml. at the very least, we should scrape it when it's serialized as text. any m_name line is a valid virtual button/axis duplicates may and likely will occur . i don't know the semantics of reading a button as an axis or visa versa, but i think it's valid. - getaxis https://docs.unity3d.com/scriptreference/input.getaxis.html / raw https://docs.unity3d.com/scriptreference/input.getaxisraw.html & getbutton https://docs.unity3d.com/scriptreference/input.getbutton.html / down https://docs.unity3d.com/scriptreference/input.getbuttondown.html / up https://docs.unity3d.com/scriptreference/input.getbuttonup.html : take a string representing a virtual button/axis. <hr /> additional inspection: up / down methods should only be called from inside update as they are cleared after it. needs testing: does the clear happen before or after lateupdate can you call up / down from lateupdate ?