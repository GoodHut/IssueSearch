 URL : "https://github.com/danburkert/memmap-rs/issues/47" TITLE : documentation / user guide BODY : in my opinion, as someone who knows very little about the subject of memory-mapped files, quite a bit more documentation would be useful. this mostly isn't specific to this crate, but having the documentation in one place ideally within the module documentation would make the topic easier to learn. - what are the main use-cases vs non-memory mapped files — performance, memory usage and behaviour differences with read-only and read-write usage. e.g. is it useful when reading a file sequentially or only when seeking? - what are the main costs of mem-mapped files: presumably opening, reading a page, and flushing changes? - are there any guarantees when a memory-mapped file is read and modified by another process — e.g. if the writes are only appends, are reads safe? is it os-specific? - can mem-mapped files be locked? this may be a separate topic, but pointers welcome. - how does paging work: entirely automatically in response to pointer dereferences? what's the page size always 4kb? & how should applications best allocate file memory to take advantage?