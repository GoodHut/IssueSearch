 URL : "https://github.com/randombit/botan/issues/1348" TITLE : tls shutdown sequence BODY : i am working on a production tls client and unit testing tls server and i am currently struggling with the correct shutdown sequence with botan and boost asio. both client and server have an open function which creates a tls::client and tls::server object, respectively. then, close basically does: c++ void client::close { if !mytlsserver->is_closed { mytlsserver->close ; if mysocket->is_open mysocket->shutdown shutdown_both ; } } where mysocket is of type boost::asio::ip::tcp::socket . close can be called explicitly and is called implicitly from my client and server's dtor and from my tls::callbacks::tls_alert override: c++ void client::tls_alert botan::tls::alert alert { if alert.type == botan::tls::alert::close_notify { close ; } } close is also called from my boost asio async_receive handler if it receives a boost::system::error_code . is this the right approach?