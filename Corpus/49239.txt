 URL : "https://github.com/getify/Functional-Light-JS/issues/57" TITLE : tech edit: appendix b BODY : this is a perfect introduction and use of the maybe monad. i'm so grateful for the clarification of maybe - i hope everyone in js reads this! the intro is great. it's exactly an interface with expected behavior. very nice way to describe these burritos. the end is fun too! here's what i got: i think calling humble a data structure or the maybe+humble monad is a stretch - even with the technically it's not a monad by itself note. it is a standard monadic function or kleisli arrow if you like : a -> m a where m is a monad. safeprop is a monadic function as well. they are just two damn good examples of using maybe in action. the egochange example breaks out of the null-check box and demonstrates usage very well. ap is technically part of the applicative aka apply interface, but every monad is an applicative so the point is moot. could be a note, might not matter. just sayin' : maybe.of x instead of just x in the definitions of humble and safeprop are a bit unidiomatic. of is usually reserved for when we need a generic way to place a value in a type and start chain ing away - exactly how you do in the safeprop usage. since we don't really need to program to an interface and the intent may be a little clearer with nothing/just vs nothing/of , it might be good to change. however, i see why you might want to avoid juggling 3 constructors while teaching...