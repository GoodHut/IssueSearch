 URL : "https://github.com/jshint/jshint/issues/3086" TITLE : acccessors configuration BODY : some apis define side-effect producing accessor properties. consuming such apis involves writing statements which may appear to have no purpose, e.g. js theapi.dosomething; by default, jshint issues warnings for such statements because they so commonly reflect a programming error. it is only by enabling the expr option http://jshint.com/docs/options/ expr that jshint users can disable these warnings. however, users of such apis may still wish to be informed of other suspicious-looking statements, so setting expr: true may not be desirable. instead, users might want to configure jshint with a white list of property names which should be considered side-effect producing and therefor not candidates for such warnings. js // jshint:accessors dosomething theapi.dosomething; speaking personally, i am not convinced that this would make for a strong feature, though: 1. false negatives property names cannot be determined statically in all cases js theapi dosomething ; 2. false positives the white list would apply to all object dereferencing operations, not just the api in question: js someotherobject.dosomething so if anyone is interested in implementing this, please make your case here first! for the original motivating discussion, please see gh-3070.