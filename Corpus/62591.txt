 URL : "https://github.com/sksamuel/elastic4s/issues/1018" TITLE : container based testing BODY : im using elastic4s and also interested in using a docker container based testing environment for my elastic search. there are few libraries like: testcontainers-scala https://github.com/dimafeng/testcontainers-scala and docker-it-scala https://github.com/whisklabs/docker-it-scala , but can't find how i integrate elastic4s into those libraries, did someone ever used a docker container based testing env? currently my spec is very simple: class elasticsearchapiservicespec extends freespec { implicit val defaultpatience = patienceconfig timeout = span 100, seconds , interval = span 50, millis val configuration: configuration = app.injector.instanceof configuration val elasticsearchapiservice = new elasticsearchapiservice configuration override protected def beforeall : unit = { elasticsearchapiservice.elasticclient.execute { index into s peopleindex/person doc stringdocumentsource peoplefactory.rawstringgoodperson } // since es is eventually thread.sleep 3000 } override protected def afterall : unit = { elasticsearchapiservice.elasticclient.execute { deleteindex peopleindex } } elasticsearchapiservice tests - { elastic search service should retrieve person info properly - case existing person in { val personinfo = elasticsearchapiservice.getpersoninfo 2324 .futurevalue personinfo.get.name shouldbe john } } } and when i run it, i run elastic search in the background from my terminal, but i want to use containers now so it will be less dependent.