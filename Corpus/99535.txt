 URL : "https://github.com/playframework/playframework/issues/7019" TITLE : more flexible errorhandler BODY : the default error handler hard codes everything to web pages this is easy enough to override, but it does mean content representation has to be added in as a match statement. https://github.com/playframework/play-rest-api/blob/master/app/errorhandler.scala override def onclienterror request: requestheader, statuscode: int, message: string : future result = { logger.debug s onclienterror: statuscode = $statuscode, uri = ${request.uri}, message = $message future.successful { val result = statuscode match { case bad_request => results.badrequest message case forbidden => results.forbidden message case not_found => results.notfound message case clienterror if statuscode >= 400 && statuscode < 500 => results.status statuscode case nonclienterror => val msg = s onclienterror invoked with non client error status code $statuscode: $message throw new illegalargumentexception msg } result } } it would be nicer if all error results had a content that could be associated automatically