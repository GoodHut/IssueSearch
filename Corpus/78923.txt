 URL : "https://github.com/reactjs/react-router-redux/issues/535" TITLE : reorganize routes object BODY : from what i can see, react-little-router exceeds with _little_ applications. if i am building a larger application i want to organize my routes in a single routes file which includes the components routes are mapped to, or even break up a routes into multiple files https://github.com/reacttraining/react-router/tree/master/examples/huge-apps . using your library, i have this helper so i can use a single file for my routes javascript // createroutes.js import react from 'react' import { relativefragment as fragment } from 'redux-little-router' export const createroutes = routes => { const routesobject = {} routes.foreach routeobj => { routesobject routeobj.path = { title: 'placeholder' } } return routesobject } export const createroutecomponents = routes => { const routecomponents = routes.map route => { const routecomponent = route.component return <fragment key={route.path} forroute={route.path}> <routecomponent/> </fragment> } return <app> { routecomponents } </app> } javascript // routes.js import homepage from 'containers/homepage' import errorpage from 'containers/errorpage' export default { path: '/', component: homepage }, { path: '/error', component: errorpage } javascript // index.js const routefragments = createroutecomponents routes const routeobject = createroutes routes const rendercomponent = => <routerprovider store={store}> { routefragments } </routerprovider> reactdom.render rendercomponent , root would you consider including something like this? something where routes dont need to be defined in both a routes object and in each fragment? it makes a react-router app much easier to reason about. if that same logic can be applied without react-router that would be awesome!