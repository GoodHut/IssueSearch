 URL : "https://github.com/graphcool/graphql-yoga/issues/19" TITLE : aws lambda support BODY : i've been prototyping an api to use with aws lambda and this is a basic example of what it could look like: ts import { graphqllambda } from 'graphql-yoga'; const typedefs = type query { hello name: string : string! } ; const resolvers = { query: { hello: _, { name} => hello ${name || 'world'} , }, } const handler = new graphqllambda { typedefs, resolvers } ; export const graphql = handler.graphql; export const playground = handler.playground; the implementation would be simple to put together for basic use cases, but subscriptions and file-upload would be missing. binary file-upload is possible already with aws lambda through api gateway, but if you're using serverless framework which i imagine most people are , it doesn't currently support it as a configuration option. i'll likely open an issue with serverless to add binary pass-through as an option. following that, apollo-upload-server would also need lambda support, but that is a trivial addition that i can do. subscriptions are the one feature that cannot be entirely handled in lambda. what works instead is having a separate subscription server using express graphql-yoga or some other http server with websocket support and then use remoteschemastitching to then have the subscription server resolve queries through the lambda interface. looking for some feedback on this approach before anything gets implemented. thanks!