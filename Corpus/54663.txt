 URL : "https://github.com/goodybag/pg-range-parser/issues/1" TITLE : handle infinite ranges BODY : from my reading of the pg manual i think it's valid to have , as a range also , , , , , , 1, , ,20 , etc . https://www.postgresql.org/docs/9.6/static/rangetypes.html rangetypes-infinite here's some untested code that might handle these if you're happy with nulls since it's not clear what Â±infinity would be represented as for each type that can be in a range : js use strict ; module.exports = { parse: function parse str { var parts = str.split , ; if parts.length !== 2 { throw new error invalid range ; } return { start: parts 0 ? { inclusive: parts 0 0 === , value: parts 0 .slice 1 } : null, end: parts 1 ? { inclusive: parts 1 parts 1 .length - 1 === , value: parts 1 .slice 0, -1 } : null }; }, serialize: function serialize obj { var start = obj.start, end = obj.end; var inclusivity = { true: , false: }; return start ? inclusivity start.inclusive 0 + start.value : , end ? end.value + inclusivity end.inclusive 1 : .join , ; } }; this does not handle the difference between inclusive and exclusive infinity.