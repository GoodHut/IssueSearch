 URL : "https://github.com/prometheus/prometheus/issues/2473" TITLE : add real counter semantics BODY : would like to track the current value of counters over a long period of time. for example, how many get requests has my site ever received. right now i don't see an easy way to do with with prometheus due to resets on process restart. the only solution that i can see it to save the actual counter values in some shared db outside of the processes and prometheus. this is particularliy problematic for distributed applications that are best not being tighly coupled through share writable state and restart often which imo is the modern version of a gc . issues like this https://github.com/prometheus/prometheus/issues/1334 propose a solution, but will not work because of limited retention times. what i'd like to see is an actually server provided monotonically increasing counter. a solution could be actual server and client counter semantics for time series rather than send the current value to the server, clients would send increment commands. the server would be responsible for caching or loading last value, incrementing by the amount sent, and storing the value. client libraries would have to be changed to expose increments since last scrape. yes, this gets a bit tricky because a scrape could happen followed by a server crash or whatever causing the data to be lost. a few way to handle this: - just acknowledge and ignore the problem. it is not any worse than today where the data for counters is discarded by design unless clients track it. - add versions, acks, etc. much like an mq protocol to provide more robust updates expected result prometheus would have the ability to track counter of any period of time. you might only have the last 1 month of data points, but the actual count value would be useful, where today they are not.