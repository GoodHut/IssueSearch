 URL : "https://github.com/bfil/toml-config/issues/4" TITLE : status of this crate BODY : https://github.com/serde-rs/serde/pull/780 added support for a serde default attribute on structs to use the default implementation of the struct to fill in any missing fields. the example from the toml-config rustdoc would look something like: rust derive deserialize struct config { nested: nestedconfig, } derive deserialize serde default struct nestedconfig { value: string, values: vec<u16>, } impl default for nestedconfig { fn default -> nestedconfig { nestedconfig { value: default .to_owned , values: vec! 0, 0, 0 , } } } // then use the toml deserializer as normal is there any other functionality of this crate that you think may be helpful for us to expose directly in serde so that it applies consistently across all data formats?