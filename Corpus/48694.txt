 URL : "https://github.com/hashicorp/serf/issues/453" TITLE : shutdownch not useful BODY : i am consuming serf as a library and my application can be instructed to join and leave different serf clusters during the lifetime of the application. i am running into an race condition where a leave is followed quickly by a create for a new serf instance, causing an error binding to the interface since the listener hasn't been closed yet. i am using the shutdownch to wait till the serf instance is completely shutdown before calling create on a new instance. i took a look at the code here https://github.com/hashicorp/serf/blob/master/serf/serf.go l811 and the shutdown channel is closed before the memberlist object is closed. this leaves a small window for a race condition where memberlist hasn't released the bound interface before the next call to create tries to bind to it. is this a bug or is there a reason that the shutdownch has to be closed before the memberlist object is closed?