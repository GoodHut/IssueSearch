 URL : "https://github.com/pragdave/mix_templates/issues/6" TITLE : non utf8 encoded files BODY : my template includes a png file that eex is trying to eval. ideally id just like this file copied over by default and not processed by eex. unicodeconversionerror invalid encoding starting at <<137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 2, 216, 0, 0, 0, 99, 8, 6, 0, 0, 0, 161, 65, 119, 154, 0, 0, 0, 25, 116, 69, 88, 116, 83, 111, 102, 116, 119, 97, 114, 101, 0, ...>> elixir lib/string.ex:1801: string.to_charlist/1 lib/eex/tokenizer.ex:27: eex.tokenizer.tokenize/3 lib/eex/compiler.ex:17: eex.compiler.compile/2 lib/eex.ex:216: eex.eval_file/3 lib/mix_templates.ex:606: mixtemplates.copy_and_expand/3 elixir lib/enum.ex:645: enum. -each/2-lists^foreach/1-0- /2 elixir lib/enum.ex:645: enum.each/2 lib/mix_templates.ex:590: mixtemplates.copy_dir/3 not sure the best way to check for this. one possible way is to open the file with utf8 encoding then try to read a line. is there a better way to do this? iex 10 > {:ok, file} = file.open some.png , :utf8 iex 11 > io.read file, :line {:error, {:no_translation, :unicode, :unicode}} maybe instead use a whitelist of file types that get processed by eex and everything else just gets copied over? or the other way around using a template configured list of filetypes to ignore?