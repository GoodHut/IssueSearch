 URL : "https://github.com/aws/aws-sdk-ruby-record/issues/62" TITLE : update request parameters BODY : record.update! only accepts record attributes as parameters, disallowing the configuration of 'return_value' or 'return_consumed_capacity'. to reiterate my solution describe in 59: to handle this i created a simpledelegator which delegates an aws::dynamodb::client and provides additional functionality: class interceptclient < simpledelegator attr_accessor :update_item_params inject additional parameters for update requests def update_item request super request.merge update_item_params end end i then created a new_client function for generating clients mainly exposed to be overridden in test, if necessary : spawns a new client with necessary request parameter overrides. def self.new_client client = interceptclient.new aws::dynamodb::client.new stub_responses: rails.env.test? client.update_item_params = { return_values: 'all_new' } client end this is severely limiting due to the fact that the class and all instances share the same client - this means all updates must return 'all_new' attributes; there is no way to safely change that value in a multi-threaded environment using shoryuken for processing sqs messages and reading/writing dynamo .