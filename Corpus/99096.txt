 URL : "https://github.com/WallarooLabs/wallaroo/issues/1587" TITLE : make makefiles more robust BODY : we occasionally run into issues where a bad setting or an error in one makefile can lead to other rules defined in other makefiles not working at all. this is especially pernicious when the effects happen outside the scope you might be working on, so they can go unnoticed and end up merged accidentally. for example, a typo in the testing/tools/dagon/makefile had an include line commented out. this resulted in all rules defined in all the makefiles in testing/tools not working, which led to tests failing as their testing/tools/ dependencies could not be built. in this case, we got lucky that this actually resulted in a ci test failure, since the _test_ wasn't disabled by the typo, only the construction of some of its dependencies. if the test itself had been disabled, ci would have passed and we might never have noticed that we lost significant test coverage! @dipinhora suggested that one way to avoid this is to change our makefile template from implicit if you don't specify as variable as false it's assumed to be true to a more explicit you need to define every variable as either false or true no matter what or else it's an error that would prevent any mistakes in a single makefile from impacting other makefiles this would also be more reliable than any simple check to validate that things are correct