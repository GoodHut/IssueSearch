 URL : "https://github.com/initialstate/particle-electron-gps-streamer/issues/5" TITLE : no issue - wanted to help BODY : author: @rchloe , in part 4 - the code , you mention: note: the tinygps library does something weird when there isn't valid location data that makes it very difficult to keep it from reporting the coordinates 0.00000,0.00000. because those coordinates are valid, they mess up the first point on the map in the dashboard. this can be filtered out using the timeline, but if anyone figures out how to keep it from streaming altogether, let me know! . the fix for that is, in your code, structure the publish as such: //define your junk define one_day_millis 24 60 60 1000 define one_hour_millis one_day_millis/24 define one_min_millis one_hour_millis/60 define half_min_millis one_min_millis/2 unsigned long lastsync10s = millis ; char lat 10 ; char lon 10 ; char gpsdat 21 ; // make strings of the latitude and longitude readings sprintf lat, %f , gps.location.lat , gps.location.isvalid , 11, 6 ; sprintf lon, %f , gps.location.lng , gps.location.isvalid , 12, 6 ; // combine these strings into a format accepted by initial state strcpy gpsdat,lat ; strcat gpsdat, , ; strcat gpsdat,lon ; //for this example, we're calling @ 10s intervals. when you call your publish event, evaluate as such //you could user lon != 0.000000 as well if millis - lastsync10s > half_min_millis/6 { if lat != 0.000000 { particle.publish gpsdata , gpsdat, 60, private ; lastsync10s = millis ; particle.process ; } } cheers, brad pilecki