 URL : "https://github.com/tomaka/glutin/issues/965" TITLE : static function linking BODY : here is an interesting piece of http://kripken.github.io/emscripten-site/docs/optimizing/optimizing-webgl.html optimizing-load-times-and-other-best-practices: > avoid using any of the glgetprocaddress api functions. emscripten provides static linking to all of the gl api functions, even for all webgl extensions. the glgetprocaddress api is only provided for compatibility to ease porting of existing code, but accessing webgl via calling dynamically obtained function pointers is noticeably slower than direct function calls, due to extra function pointer security validation that dynamic dispatching has to do in asm.js/webassembly. since emscripten provides all of the gl entry points statically linked in, it is recommended to take advantage of this for best performance. is there a way to link all gl functions statically as opposed to get_proc_address ?