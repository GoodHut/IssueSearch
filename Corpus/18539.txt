 URL : "https://github.com/GoRethink/gorethink/issues/430" TITLE : thoughts about v4 BODY : hi, currently i maintain gorethink and i think about some major improvements and refactoring. i'm not the original author of gorethink and i don't know the history of some decisions made in past. so i decided to ask community about changes. for a some reason some internal structs and interfaces are public. they are not used by integration tests. so i'm going to make it private unless someone uses it. integration tests with real rethinkdb doesn't substitute unit tests, i think gorethink needs more unit tests coverage. also i think that integration with opentracing-go https://github.com/opentracing/opentracing-go can be useful for understanding performance of your code. with tracing you can easily see for example, in jaeger or zipkin the amount of time your api handlers spend on waiting for rethinkdb responses. but there is a problem. the most evident way to do this -- wrap queryexecutor in a separate package, but it is not enough. span must be started when query is called and must be finished when cursor is closed. but cursor can't be wrapped because it is a struct , not an interface . so the most evident way breaks compatibility. it can be acceptable with growing major version. but it can be achieved without it: i can integrate usage of opentracing-go into gorethink itself. or add not-go-way method to cursor -- setclosedcallback to close span however stdlib uses it sometimes https://golang.org/pkg/net/http/ server.registeronshutdown . i created a mini questionnaire https://goo.gl/forms/eoj2dloqv1v91hdf2 . what do you think about it? any other suggestions? please share your opinion.