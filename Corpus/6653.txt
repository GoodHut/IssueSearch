 URL : "https://github.com/bluele/gcache/issues/19" TITLE : arc get panicks BODY : hi, thanks for the caching library. while trying to integrate this into a project i work on i receive the following panick reproducibly after a variable time of 20sec~1min : panic: runtime error: invalid memory address or nil pointer dereference signal sigsegv: segmentation violation code=0x1 addr=0x20 pc=0x625ef6 goroutine 52 running : panic 0x7ba5a0, 0xc42000c0c0 /usr/local/go/src/runtime/panic.go:500 +0x1a1 github.com/bluele/gcache. arcitem .isexpired 0x0, 0x0, 0xc429fedd30 /home/nokadmin/s-01-main/hashsearch/src/github.com/bluele/gcache/arc.go:312 +0x26 github.com/bluele/gcache. arc .get 0xc4200aba40, 0x7979c0, 0xc42f955c30, 0xc441b79b00, 0x0, 0x0, 0x0, 0x0 /src/github.com/bluele/gcache/arc.go:178 +0x426 github.com/bluele/gcache. arc .getvalue 0xc4200aba40, 0x7979c0, 0xc42f955c30, 0xc429fede30, 0x40dfbb, 0x7979c0, 0xc42f955c30 /src/github.com/bluele/gcache/arc.go:206 +0x48 github.com/bluele/gcache. arc .getifpresent 0xc4200aba40, 0x7979c0, 0xc42f955c30, 0x7979c0, 0xc42f955c30, 0x0, 0xc4419ae980 /src/github.com/bluele/gcache/arc.go:142 +0x43 i tried replacing all locks within the function with a rw lock that wraps the function but this also yields the same panick. so i guess the error is somewhere else. my code has about 10 workers that share the cache. i could probably make the cache only available to one worker at a time but i guess that wouldn't solve the root of the problem. i only call the cache in two different places: cache := gcache.new 1000 .arc .build cache.set domain,robotstxt and cache.getifpresent domain do you have any idea what causes this? best niels-ole