 URL : "https://github.com/dotnet/roslyn/issues/19557" TITLE : type inference issue? BODY : .net compiler platform: 2.0.0.6140902 i have been running into this issue for a while now, and i am wondering whether this is just a bug that nobody has noticed, or a missing feature of roslyn to which i need to raise a proposal in csharplang . first if i create a function that does partial application c static func<b, c> partial<a, b, c> func<a, b, c> f, a a => b => f a, b ; and a simple function to add two ints. c static int add int x, int y => x + y; and then try to partially apply by passing add and 1 to partial . static func<int, int> add1 = partial add, 1 ; i get: the type arguments for method 'partial<a, b, c> func<a, b, c>, a ' cannot be inferred from the usage. try specifying the type arguments explicitly. this is odd to me, because the types for add are known, the type for the constant int is known, the expected return type is known. why can't the a , b , and c of partial be inferred? i _feel_ like this used to work, because i wrote a ton of overrides for doing currying and partial-application; but perhaps i am mistaken?