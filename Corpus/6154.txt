 URL : "https://github.com/flying-sheep/rust-rst/issues/3" TITLE : write a parser BODY : as indicated in 2 , we need a parser. do we know what _kind_ of a parser we might like? for instance, what about a peg parser? they've seemed pretty nice, but i don't know if a peg parser would be sufficient for the syntax of rst. one problem in particular for peg is that it can't handle significant indentation. i think we may be able to get away with that by having a pre-processor that would add indentation tokens to the source, but i'm not sure that's a great way to go. i'm interested in parsers, but i'm new to it, so any thoughts you have on what a good way to do it is would be great. do we ultimately just have to have a state machine?