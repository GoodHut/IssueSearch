 URL : "https://github.com/boazbk/tcs/issues/95" TITLE : chapter 21 crypto BODY : it would be nice to spend much more time relating this chapter to what was done earlier in the course, rather than delving into more crypto-specific conceptual ideas such as relating indistinguishability to semantic security like notions, which i'd advocate dropping entirely . for example: 1 emphasizing that what was needed for crypto to turn from an art to a science is the development of the framework of computational complexity though one can note that shannon hinted at using boolean circuit size , and the concept of reductions 2 if p=np or even np\subseteq bpp, all of crypto can be broken efficiently. some of this was already hinted in the what if p=np chapter, but it is worth working out some of it in more detail here, now that you have precise definitions for crypto. 3 we'd love to base crypto on the assumption that np not in bpp e.g. design a cryptosystem s.t. any successful attacker can be converted into an algorithm that solves 3-sat , but this assumption seems too weak need average-case hardness, and even to generate hard instances together with solutions . still the concept of reductions plays a key role. we know many concrete assumptions e.g. factoring random products of two primes where we can design cryptosystems s.t. breaking the assumption can be reduced to breaking the cryptosystem.