 URL : "https://github.com/SiLab-Bonn/pyLandau/issues/9" TITLE : move to pybind11 BODY : you could simplify the code significantly if you moved to using pybind11. this would remove the need to import the numpy headers in setup.py completely. the binding code would be: at the top of the file cpp include <pybind11/pybind11.h> include <pybind11/numpy.h> namespace py = pybind11; using namespace pybind11::literals; and, after the c++ code is imported, or at the bottom of the file, in a file named landau.cpp : cpp pybind11_module landau, m { m.def landaupdf , py::vectorize landaupdf , x _a, x0 _a=0., xi _a=1. ; m.def gausspdf , py::vectorize gausspdf , x _a, mu _a=0., sigma _a=1. ; m.def landaugausspdf , py::vectorize landaugausspdf , x _a, mu _a=0., eta _a=1., sigma _a=1. ; } this does automatic vectorization, as well, so x can be a vector or a single value. here's a file example: https://gist.github.com/henryiii/9419a0b803664d8ff2a159c1fcfd644e compile by hand if you want: bash c++ -o3 -wall -shared -std=c++11 -fpic python -m pybind11 --includes landau.cpp -o landau python-config --extension-suffix to update pylandau, you'd need a little wrapper to add your new functions in python probably, c++ is easy too as you can see , and a setup.py . > ps: the other option would be to move to using cython's buffer interface, but i think the above method is simpler.