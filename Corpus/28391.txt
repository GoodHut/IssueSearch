 URL : "https://github.com/ipfs/go-ipfs/issues/3689" TITLE : fuse check outdated BODY : <!-- output from ipfs version --all --> version information: go-ipfs version: 0.4.4- repo version: 4 system version: amd64/darwin golang version: go1.7 <!-- bug, feature, enhancement, etc --> type: bug <!-- from p0 critical to p5 relatively unimportant --> priority: p4 description: fuse version check outdated. here is the code for it: go func darwinfusecheckversion node core.ipfsnode error { // on osx, check fuse version. if runtime.goos != darwin { return nil } ov, errgfv := trygfv if errgfv != nil { // if we failed and the user has told us to ignore the check we // continue. this is in case fuse-version breaks or the user cannot // install it, but is sure their fuse version will work. if skip, err := useraskedtoskipfusecheck node ; err != nil { return err } else if skip { return nil // user told us not to check version... ok.... } else { return errgfv } } log.debug mount: osxfuse version: , ov min := semver.mustparse 2.7.2 max := semver.mustparse 3.0.0 curr, err := semver.make ov if err != nil { return err } if curr.lt min { return fmt.errorf errstrupgradefuse, ov } // todo: upgrade fuse lib and work nice with 3.0.0+ if curr.ge max { return fmt.errorf errstrupgradefuse, ov } return nil } which can be found at https://github.com/ipfs/go-ipfs/blob/master/fuse/node/mount_darwin.go l125. this is an extension of 3601.