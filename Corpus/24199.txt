 URL : "https://github.com/pixelspark/catena/issues/43" TITLE : sharding of tables BODY : currently, a node can choose whether to 'replay' sql transactions on top of the database engine, and select only those tables that it is interested in. the query history however needs to be stored by all nodes for all tables nodes could throw away blocks after a certain amount of time has passed, but that would make it impossible for new nodes to download the full blockchain from block 0 . it would be preferable if sql transactions could be split into 'side chains', where each node would only 'follow' the side chains of its interest and discard the rest . a sidechain is an independent block chain with their own numbering and sidechain genesis which identifies a particular sidechain root chain blocks contain only the hashes of newly mined blocks if they are accepted . for a miner to determine which sideblocks are acceptable, it only needs to check the last block in the sidechain is index successive and maintain state what is the sidechain difficulty? . the root chain should contain an incentive for mining a side chain block 'credits'? . starting a sidechain would be akin to creating a new database. the root chain may also handle payments and dropping of sidechains either upon request, or when a certain time has exceeded . nodes mining a sidechain block should perhaps be required to 'prove' they also still have all history blocks perhaps by requiring a deterministically randomly chosen history block to be included in the signature hash? .