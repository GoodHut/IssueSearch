 URL : "https://github.com/timmybyster/CCB/issues/2" TITLE : ibc vs ccb version control BODY : the fundamental functional change of a firing cycle of 120s vs 60s between the ccb and ibc respectively is a huge safety risk. with the introduction of bootloading remotely there is no way of performing qas on units in the field that have had new versions of software installed. there needs to be a sure fire way of distinguishing between the two units or at least a very well defined form a version control where it can be confirmed what version is currently implemented. i see 3 potential ways of ensuring this: 1. a command that can be sent from the pi to the ibc/ccb to confirm its version of firmware. this can be implemented from node and some sort of warning system can be generated to ensure the problem is corrected. 2. a more robust method would be to include a jumper on the pcb of the ibc. the software for both units is kept the same but a new feature then checks the jumper and depending on its state configures the unit to fire for 120s or 60s. the jumper can potentially be accessed very close to the top of the potting to give the ability to change it if neccessary. 3, a bootloading procedure can be written up and the version of software written into the eeprom of the pic. the bootloader can verify the version and this can be compare to what the unit is supposed to be thus ensuring units have the correct firing times. as there are both ccbs and ibcs that are potted there is no option of implementing the hardware change of a jumper. but it is highly recommended going forward as it removes the chance of a unit once released to ever change from and ibc to a ccb. however for now a proposal can be drawn up on options 1 & 3 and discussed as to which will be most consistent.