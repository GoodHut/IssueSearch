 URL : "https://github.com/OutWatch/outwatch/issues/38" TITLE : snabbdom patching issue BODY : i came across an issue while trying to build a router for outwatch. in some cases when a page was replaced with itself but different initial state , the observable updates on the new page would not work. i tracked the issue to the fact that snabbdom patching does an update and not a destroy/insert which results in outwatch not subscribing to the new observables, since the subscription in done in the insert hook. adding the key property didn't fix the issue, it revealed a second bug caused by outwatch not passing the key to the dataobject constructed by dataobject.updateattributes . i fixed these issues on my branch, pr to follow. the snippet below shows the issue, going from page 1 -> 3 or 3 ->1 breaks the counter updates, but all other transitions 1->2, 3->2,... work as expected: scala def page num: int : vnode = { val clicks = createhandler int val sum = clicks.startwith num .scan 0 _ + _ div num match { case 1 => div child <-- sum case 2 => textarea child <-- sum case 3 => div child <-- sum }, div button click 1 --> clicks, +1 } def root : vnode = { val pagehandler = createhandler int 1 div button click 1 --> pagehandler, page 1 , button click 2 --> pagehandler, page 2 , button click 3 --> pagehandler, page 3 , div child <-- pagehandler.map page } def main : unit = { outwatch.render app , root }