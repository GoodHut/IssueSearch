 URL : "https://github.com/passcod/notify/issues/139" TITLE : write fsevent backend BODY : - implement - test on at least the last two versions of macos ref 128 for issues under high sierra - document - add to tests want to help? as there's no backend implementor's guide right now, you'll need to read through raw docs and source to get an idea of what's needed. create a new subordinate crate: - make a backend-fsevent folder; - add a cargo.toml with name = notify-backend-fsevent ; - add an entry in the root cargo.toml for the new backend; - put your code in backend-fsevent/src/lib.rs ; - add backend-fsevents/tests/compliance.rs and populate it as in other backends. refer to the backend documentation in the source or render it with cargo doc yourself for convenience : - https://github.com/passcod/notify/blob/next/backend/src/backend.rs - https://github.com/passcod/notify/blob/next/backend/src/lib.rs - etc also look at existing backends e.g. https://github.com/passcod/notify/blob/next/backend-inotify/src/lib.rs read the documentation on futures::stream , especially poll method description of semantics: https://docs.rs/futures/0.1.17/futures/stream/trait.stream.html tymethod.poll when starting out, omit the ! deny missing_docs and just get it building and working, first. you'll need to use the fsevent https://github.com/octplane/fsevent-rust crate. when you've got something that works, add it to the tests: - in ci/cross-tests.sh - in ci/script.sh - in contributing.md then create a pull request so the tests will run travis!