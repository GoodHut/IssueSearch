 URL : "https://github.com/wolfSSL/wolfssl/issues/1013" TITLE : ecc pubkey encryption BODY : hello, i see that the ecc encryption routine takes a private and a public key. digging into the function i see that the algorithm is based in generating a shared secret between two parties priv key from sender, pub key from receiver and then using aes128. now my question is: can't we have the rsa counterpart for wc_rsapublicencrypt? where we just take a public ecc key and encrypt some small amount of data? i'm implementing a custom protocol and while i could generate a key pair in each client and use this function to exchange an encrypted shared secret, i'd rather not use key generation functions on the client. something along the lines of a simple wc_ecc_mulmod_ex that takes the data provided it's shorter than the key size and multiplies it by the public key. then the other party should be able to recover the data by just multiplying again by the private key. am i missing something? thanks!