 URL : "https://github.com/Nikita-Vasilchenko/OAiP_labs_Vasilchenko/issues/11" TITLE : 5 лаба код - 2 BODY : 1 source.cpp - переименовываем 2 константные значения 30, 100 и т.д. выносим в define char name 30 ; //название 3 int cap = -1; какая-то неопознанная глобальная переменная. это плохо 4 printf vvedite 0 - dopolnit strukt, 1 - yporiadothit po ochkam, 2 - yporiadothit po igram, 3 - vivod v file, 4 - vivod na monitor, 5 - exit ; - транслит это очень плохо и почему вывод не отформатирован? 5 int c = 0; - называйте переменные осмысленно, сюда бы подошло имя key или munuitem 6 организация кода в функциях с похожими действиями это ключевой момент этой лабораторной, читайте мои примеры в wiki не должно быть просто кода скопированного из одной функции в другую с минимальными изменениями organizestructurespoints organizestructuresgames 7 file out = fopen c:/users/никита/source/repos/lab 5-4/debug/output.txt , w ; файл для вывод лучше будет задать в виде константы в самом начале программы 8 вот ту нужно бы избавиться от обращение к глобальной переменной, cap такой код очень трудно поддерживать и это небезопасной, глобальная переменная может быть изменена в любой части программы работая с глобальными переменными мы убиваем возможность повторного использования функций void inputuser football play // функция заполнения структуры пользователем { cap++; // считает сколько раз пользователь заполнил структуру printf enter all the data in turn\t ; //введите по очереди все данные printf enter name\t ; //название scanf %s , &play cap .name ; // code }