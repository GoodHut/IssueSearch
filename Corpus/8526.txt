 URL : "https://github.com/kkokey/leetcode/issues/7" TITLE : path sum 풀이 BODY : 문제 푼것에 의의를... haskell data tree a = leaf | node tree a a tree a deriving eq, show type path a = either a a, a , tree a solve :: int -> tree int -> int solve sum tree = length . solve' $ right sum, , tree solve' :: path int -> int solve' left breadcrumb = breadcrumb solve' right = solve' right ps = solve' . fmap concat . sequence . fmap step $ ps step :: int, int , tree int -> path int step 0, breadcrumb, leaf = left breadcrumb step sum, breadcrumb, tree | sum <= 0 = right | tree == leaf = right | otherwise = let node left value right = tree sum' = sum - value breadcrumb' = value : breadcrumb in right sum', breadcrumb', left , sum', breadcrumb', right