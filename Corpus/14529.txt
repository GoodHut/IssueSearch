 URL : "https://github.com/pravega/pravega/issues/2218" TITLE : async readers api BODY : problem description checkpoints are difficult to work with for a reader where events are processed asynchronously. it requires readers to halt reading, wait for processing to complete, checkpoint before resuming processing. this is problematic because ordering guarantees can only if an application abides by this behavior. for example, if they decide to ignore the checkpoint and keep working one of the segments that was assigned to them may move to another reader, which would be fine except as they are processing events asynchronously it is possible that the second host is faster and completes its processing before the previous host has completed. similarly the application will have a hard time getting exactly once processing without some complicated logic on its side. if there are many requests going in parallel it is possible that some that were delivered later could be completed first. for simple applications where processing is idempotent and order is not critical, or can be managed by knowing the routing key, this sort of async processing is fine. but for applications that want stronger guarantees we don't have a good api to offer this sort of processing. problem location reader api suggestions for an improvement we need to take a step back and think of what a good api would be for this sort of application. ie, they might ideally want ordering guarantees that don't require the reader to be routing key aware and serialize processing within a key. similarly we need to think about what failures might look like in such a case where processing might have occurred out of order.