 URL : "https://github.com/zdennis/activerecord-import/issues/467" TITLE : values as sql queries BODY : we <3 activerecord-import at pixie labs! we're using it to do some pretty hefty importing running regularly, not one-off of a whole bunch of models, a lot of them related to each other. and we've found a situation where it's better for us to construct sql commands ourselves rather than use activerecord-import because it's missing one feature. we'd like to assign some foreign keys to our imported models without looking them up in a separate query, by using a subquery for the value of a field, e.g.: sql insert into comments content, post_id values 'this is content for a comment', select id from posts where slug = 'my-post' limit 1 the issue i think stopping us from doing this with activerecord-import is that the subquery mustn't be quoted. the less efficient alternative is to build a big hash table in ruby, for looking up ids by slug when constructing the objects to pass to activerecord-import . we're happy to work on this as a feature, but: 1. is this something you've thought about before? and if so, is there a reason why it might not be a good idea? 2. what could the api look like? how would you indicate to activerecord-import that you are passing a sql statement? pass it an activerecord::relation for activerecord-import to call .to_sql on? if there's some other functionality in activerecord-import we're missing that will help us, please do say! :