 URL : "https://github.com/iovisor/bcc/issues/1036" TITLE : new tool proposal: bpflist BODY : i'm proposing a new tool that would list enabled bpf programs. this tool could get a lot better with kernel support. but we'd still have the problem of wanting this for older kernels. here's what i'm thinking of hacking up for now. a tool based on: ls -l /proc/ /fd/ | grep bpf ls: cannot access '/proc/10702/fd/255': no such file or directory ls: cannot access '/proc/10702/fd/3': no such file or directory ls: cannot access '/proc/self/fd/255': no such file or directory ls: cannot access '/proc/self/fd/3': no such file or directory ls: cannot access '/proc/thread-self/fd/255': no such file or directory ls: cannot access '/proc/thread-self/fd/3': no such file or directory lrwx------ 1 root root 64 mar 9 00:58 /proc/10700/fd/3 -> anon_inode:bpf-map lrwx------ 1 root root 64 mar 9 00:58 /proc/10700/fd/4 -> anon_inode:bpf-prog lrwx------ 1 root root 64 mar 9 00:58 /proc/10700/fd/6 -> anon_inode:bpf-prog ls -l /sys/fs/bpf/ / ls: cannot access '/sys/fs/bpf/ / ': no such file or directory so fd symlinks with bpf reveal process ids doing bpf, and i can then look up their /proc/pid/comm. also, take a look in /sys/fs/bpf/ / for any pinned bpf programs. i or whoever writes this tool can add a verbose mode to print /sys/kernel/debug/tracing/enabled_functions, and/or kprobe_events/uprobe_events. i haven't seen a way to dump enabled tracepoints yet. are we missing a /sys/kernel/debug/tracing/tracepoint_events?