 URL : "https://github.com/neomutt/neomutt/issues/428" TITLE : unit test suite BODY : here's my take at a minimal unit-testing framework in c. the work is being carried out in the feature/unit-test https://github.com/neomutt/neomutt/tree/feature/unit-test branch. basics 1. unit-tests are based on the header-only cutest https://github.com/mity/cutest framework. this provides a no-dependency, simple drop-in solution. 2. unit-tests are compiled into the mutt executable when configured the --with-unittest flag and are executed with mutt -t . 3. translation units implementing tests - ideally one for feature - are included https://github.com/neomutt/neomutt/blob/feature/unit-test/unit-test/driver.c l9 in the test/driver.c main driver and declared https://github.com/neomutt/neomutt/blob/feature/unit-test/unit-test/makefile.am l5 in test/.makefile.am . 4. single tests are declared https://github.com/neomutt/neomutt/blob/feature/unit-test/unit-test/driver.c l13 in the unit-test/driver.c main driver. example sh $ ./mutt -t test list_create... ok test list_add... ok test list_find... ok summary: success: all unit tests have passed. discussion the decisions i've taken - such as not building a separate mutt-test executable - are of course open to discussion. feel free to comment and suggest improvements!