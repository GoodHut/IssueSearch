 URL : "https://github.com/xvaier/fake-chrome/issues/1" TITLE : method to the madness BODY : the opening few definitions are to obfuscate common javascript properties/methods, typical of malware obfuscating software. for example: js // from line 7 var kgafde = 'lzozrinesky' 'c' + 'o' + 'z', 'w', 'j', 'n' + 'n', 'n', 's' + 't' + 'h', 'g', 'v', 'e', 'r' + 'u' + 'c' + 't' + 'c', 'o', 'm' parseint 1, 4 + 'h', 'p', 'n', 'r' ; // is actually equivalent to 'lzozrinesky'.constructor // this is string // so calling kgafde will for example make a string like so: kgafde 'my fresh new string' // this is equivalent to string 'my fresh new string' to determine what this script actually does i don't have time at the moment to do it all , you can simply start up a node prompt, and run the stuff between square brackets in variables like this to gain a better understanding. the bits between the square brackets are properties or methods of aliases to some of javascript's base classes. with a little bit of care, you don't have to run any malicious code but understand the script. so in the above example, i got constructor from that jumble because: js const t = 'c' + 'o' + 'z', 'w', 'j', 'n' + 'n', 'n', 's' + 't' + 'h', 'g', 'v', 'e', 'r' + 'u' + 'c' + 't' + 'c', 'o', 'm' parseint 1, 4 + 'h', 'p', 'n', 'r' // t will equal constructor 'anystring' 'constructor' // this returns the constructing primitive, in this case string hope this helps.