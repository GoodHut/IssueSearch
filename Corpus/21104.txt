 URL : "https://github.com/mrkm4ntr/ramda-fantasy-validation/issues/1" TITLE : easier syntax idea BODY : thanks for the great validation library. i was trying to find a cleaner way to use this and came up with this. if this is correct in all cases it might be good for the docs. const r = require 'ramda' ; const validation = require 'ramda-fantasy-validation' ; r.usewith validation.liftan 3, functiontovalidate , validate 'type', string , validate 'ret', object, string , validate 'obj', object ; // where functiontovalidate has those arguments const functiontovalidate = type, ret, obj => ... // validate is whatever validation function you want, so long as it expects the parameter value to be supplied as the final argument. example: const validate = module.exports.validate = r.curry name, types, value => r.ifelse v => r.any type => r.is type, v , types , validation.of, _ => validation.failure requires ${name} as one of ${r.join ', ', r.map t => r.type t , types }, but got ${value} // e.g. validation.failure 'requires ret as one of object, string, but got 1' value ;