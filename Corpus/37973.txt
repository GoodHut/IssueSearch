 URL : "https://github.com/Patashu/break_infinity.js/issues/27" TITLE : next slabdrill stuff BODY : 3:24 am slabdrill: i improved my hyperbolic trig functions. it turns out they really only have a range of however much your precision can fit. so not necessarily needed i guess. 6:15 am slabdrill: i think you should just make factorial a static instead of being a function of decimal 6:22 am slabdrill: static factorial value { let n = value+1; return decimal.pow n/math.e math.sqrt n math.sinh 1/n +1/ 810 math.pow n, 6 , n .mul math.sqrt 2 math.pi/n ; } static fact value {return decimal.factorial value } static permutation value,other { return decimal.fact value .div decimal.fact value-other } static combination value,other { return decimal.permutation value,other .div decimal.fact other } static doublefactorial value { value = math.round value //making sure only ints can get in if value % 2 == 1 return decimal.fact value .div decimal.doublefactorial value-1 return decimal.fact value/2 .mul decimal.pow 2,value/2 //also this doesnt support negatives } ilog base { //https://en.wikipedia.org/wiki/iterated_logarithm if this.lte 1 return 0; let t = this.log base for var r=1;t>=1;r++ t = math.log t /math.log base ; return r; } 7:21 am slabdrill: is exp faster the way it is or would this.pow math.e be faster