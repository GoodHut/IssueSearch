 URL : "https://github.com/Squalr/Squalr/issues/242" TITLE : revisit region sizes BODY : a reasonable limitation of c is that byte can only be of size 2,147,483,591 0x7fffffc7 elements see: https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element unfortunately, it is quite possible in a 64 bit process to exceed this. to get around this, we limit regions to 2,000,000,000 bytes by splitting them. naturally, it makes sense to have all region size variables be of int32 since c cannot exceed this limit. however, this can be annoying when using region sizes for values larger than this. known bugs this causes: in memory.cs for 64 bit allocations where region sizes for unallocated bounds must be cast to int32. module sizes > 2gb will likely have issues, although i'm not sure if this exists