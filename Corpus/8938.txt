 URL : "https://github.com/kkmsc17/planung/issues/3" TITLE : sound in chrome BODY : @kaikuehne commented on sun jul 09 2017 https://github.com/kkmsc17/smes/issues/19 obwohl ich eine konfiguration gefunden habe, die meist gut funktioniert, gibt es immer wieder probleme mit stotterndem audio. in chrome ist es eigentlich unerträglich. safari und firefox funktionieren relativ problemfrei, allerdings auch nur bei 22,1 bzw. 32 khz. bei 48 khz stottert das audio dann auch in den browsern. wahrscheinlich ist das eigentlich nur eine konfigurationssache bzw. inkorrektes buffer-handling in kombination mit der sample-größe. der verwendete sdl-port von snes9x verwendet die normalen audio-funktionen von sdl, sdl_openaudio , sdl_closeaudio , etc. laut emscripten-wiki soll man sdl_mixer verwenden https://kripken.github.io/emscripten-site/docs/getting_started/faq.html what-are-my-options-for-audio-playback . das hauptproblem scheint zu sein, dass chrome nicht mit allow_memory_grow=1 klar kommt. lösung: total_memory benutzen. neues problem: auf welchen wert setzt man die variable? lösungsidee: die datei-größe des rom-uploads beschränken z. b. 5 mb und total_memory mit etwas luft entsprechend setzen. spiel hochladen und gucken, wie viel speicher gebraucht wird wie kann man speicher debuggen? total memory auf 1 setzen und dann schauen, wie viel verlangt wurde ressourcen: sdl_mixer https://www.libsdl.org/projects/sdl_mixer/docs/sdl_mixer.html emscripten runtime environment https://kripken.github.io/emscripten-site/docs/porting/emscripten-runtime-environment.html emscripten-runtime-environment https://github.com/kripken/emscripten/wiki/chrome-memory-issues https://github.com/kripken/emscripten/wiki/chrome-perf-issues