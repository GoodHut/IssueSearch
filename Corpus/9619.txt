 URL : "https://github.com/dahongdou111/jietibaogao/issues/1" TITLE : a - 敌兵布阵 BODY : c国的死对头a国这段时间正在进行军事演习，所以c国间谍头子derek和他手下tidy又开始忙乎了。a国在海岸线沿直线布置了n个工兵营地,derek和tidy的任务就是要监视这些工兵营地的活动情况。由于采取了某种先进的监测手段，所以每个工兵营地的人数c国都掌握的一清二楚,每个工兵营地的人数都有可能发生变动，可能增加或减少若干人手,但这些都逃不过c国的监视。 中央情报局要研究敌人究竟演习什么战术,所以tidy要随时向derek汇报某一段连续的工兵营地一共有多少人,例如derek问:“tidy,马上汇报第3个营地到第10个营地共有多少人!”tidy就要马上开始计算这一段的总人数并汇报。但敌兵营地的人数经常变动，而derek每次询问的段都不一样，所以tidy不得不每次都一个一个营地的去数，很快就精疲力尽了，derek对tidy的计算速度越来越不满: 你个死肥仔，算得这么慢，我炒你鱿鱼!”tidy想：“你自己来算算看，这可真是一项累人的工作!我恨不得你炒我鱿鱼呢!”无奈之下，tidy只好打电话向计算机专家windbreaker求救,windbreaker说：“死肥仔，叫你平时做多点acm题和看多点算法书，现在尝到苦果了吧!”tidy说： 我知错了。。。 但windbreaker已经挂掉电话了。tidy很苦恼，这么算他真的会崩溃的，聪明的读者，你能写个程序帮他完成这项工作吗？不过如果你的程序效率不够高的话，tidy还是会受到derek的责骂的. input 第一行一个整数t，表示有t组数据。 每组数据第一行一个正整数n（n<=50000）,表示敌人有n个工兵营地，接下来有n个正整数,第i个正整数ai代表第i个工兵营地里开始时有ai个人（1<=ai<=50）。 接下来每行有一条命令，命令有4种形式： 1 add i j,i和j为正整数,表示第i个营地增加j个人（j不超过30） 2 sub i j ,i和j为正整数,表示第i个营地减少j个人（j不超过30）; 3 query i j ,i和j为正整数,i<=j，表示询问第i到第j个营地的总人数; 4 end 表示结束，这条命令在每组数据最后出现; 每组数据最多有40000条命令 output 对第i组数据,首先输出“case i:”和回车, 对于每个query询问，输出一个整数并回车,表示询问的段中的总人数,这个数保持在int以内。 sample input 1 10 1 2 3 4 5 6 7 8 9 10 query 1 3 add 3 6 query 2 7 sub 10 2 add 6 3 query 3 10 end sample output case 1: 6 33 59