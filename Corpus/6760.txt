 URL : "https://github.com/falconre/falcon_capstone/issues/1" TITLE : building on arm BODY : this should probably be marked as an issue upstream as well, in mm7's repo. building on arm doesn't work because i believe std::ios::raw::c_char is marked as an i8 on x86 and as u8 on arm. the following patch builds on arm, but obviously doesn't build on x86: diff diff --git a/src/capstone.rs b/src/capstone.rs index 3ca1f0e..7e3f767 100644 --- a/src/capstone.rs +++ b/src/capstone.rs @@ -486,7 +486,7 @@ impl capstone { pub fn reg_name &self, reg_id: u32 -> option<&str> { let name = unsafe { let name = cs_reg_name self.handle.get , reg_id ; - if name == 0 as const i8 { + if name == 0 as const u8 { return none; } cstr::from_ptr name @@ -514,7 +514,7 @@ impl capstone { pub fn group_name &self, group_id: u32 -> option<&str> { let name = unsafe { let name = cs_group_name self.handle.get , group_id ; - if name == 0 as const i8 { + if name == 0 as const u8 { return none; } cstr::from_ptr name probably just needs some cfg magic to mediate between the two.