 URL : "https://github.com/Schematron/schematron/issues/29" TITLE : attribute optimization bug BODY : ken holman raised this issue: 2 even passing an arbitrary value of true for $attributes at invocation still does not add the attribute pattern to the context xpath because of the following top-level variable: <xsl:variable name= context-xpath > <xsl:if test= $attributes='true' and parent::node >@ |</xsl:if> <xsl:choose> <xsl:when test= $only-child-elements='true' > </xsl:when> <xsl:when test= $visit-text='true' >node </xsl:when> <xsl:otherwise> |comment |processing-instruction </xsl:otherwise> </xsl:choose> </xsl:variable> my understanding is that in xslt top-level variables are evaluated assuming the context of the document node of the input document. this document node has no parent. the and parent::node expression above will always evaluate to false, thus never adding @ | to the xpath expression. my read of the above is that in this stylesheet it is impossible to trigger the inclusion of attributes in the search contexts of the stylesheet created by schematron. why would it have been included and how was it tested? i have suggested the user hack the above to be: <xsl:if test= $attributes='true' >@ |</xsl:if> ... and to use attributes=true on the command line when invoking the stylesheet with a fragmented schematron schema in order to avoid the auto-detect bug of not looking for attributes in rules of included schematron fragments.