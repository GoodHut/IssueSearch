 URL : "https://github.com/myst-lang/myst/issues/15" TITLE : ada-like custom data types BODY : i was browsing around for ideas on how to mitigate some float precision errors e.g., 0.4 is represented as 0.39999999998 and came across a book on ada-95, which features the ability to define custom primitive types: https://books.google.com/books?id=x_vlpfgoqrgc&pg=pa391&lpg=pa391&dq=better+language+level+float&source=bl&ots=h8iob6obpv&sig=rjdco2qjibfuim5nkkmsysofchq&hl=en&sa=x&ved=0ahukewj9iob2jcvwahwhqsykhfo-a4qq6aeitdah v=onepage&q=better%20language%20level%20float&f=false the tl;dr from there is that ada-95 allows programmers to write something like: ada type inches is digits 4 range 0.00..100.00; which would then let the programmer write something like 6 inches . the part that i'm interested in here is allowing for well-defined handling of float precision errors and rounding. for example, a programmer could write something that says only the first two digits after a decimal place are significant, and use banker's rounding https://en.wikipedia.org/wiki/rounding round_half_to_even . i don't have a syntax in mind, but i figure this could be a useful tool in allowing programmers to reason about the problem they are solving, rather than about how ieee floats work.