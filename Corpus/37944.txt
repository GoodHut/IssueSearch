 URL : "https://github.com/mapbox/tilelive-decorator/issues/10" TITLE : new property options BODY : i think it's time we look at the requiredkeys / keepkeys and requiredkeysredis / keepkeysredis options and consider what effects we actually want to achieve by filtering and selecting data. i'm mentally breaking down decoration processing into 3 stages: - source - the tile's property data - redis - the data we want to decorate onto the tile - output - the tile's properties post decoration we can think of our two levers as filtering via required keys and selecting via keep keys for each stage. here's a layout of the levers in each stage and what i think they let us do: source: - _required_ - allows us to filter out features that don't meet minimum criteria before we ever query redis. this has a potential for big performance savings when there's very mixed data in the tile. - _keep_ - â€‹allows us to specify which properties to keep on the tile before applying decoration data. possibly useful. redis: - _required_ - allows us to throw out records from decorate data that don't meet minimum requirements. definitely useful. - _keep_ - allows us to simplify data to be decorated onto tiles. could be a performance boost when we only want a couple of properties to be applied from a heavy dataset. possibly useful. output: - _required_ - if we select required on earlier stages, does this lever help us? could be useful if you didn't care _where_ data came from but wanted to set requirements for the overall output - _keep_ - makes sense to specify exactly which keys we want