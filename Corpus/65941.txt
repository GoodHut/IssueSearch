 URL : "https://github.com/cxong/cdogs-sdl/issues/529" TITLE : locked door pathfinding BODY : pathfinding across locked doors is extremely slow, because it is inaccessible and the pathfinder ends up searching a lot of tiles for a non existent path. instead, there should be a pre processing step, flood fill to find inaccessible regions, and the set of keys required to pass between neighbouring regions. also store the keys that are contained in each region. create a high level graph connecting neighbours if it's possible to collect a key within the same region that unlocks the neighbour. then if a path requires going to another region, perform a high level pathfinding, across the key graph. this should result in going to s certain coloured key. finally find the closest such key and go to it. whenever a key is collected, look at which regions are now accessible, merge them, and update the key graph.