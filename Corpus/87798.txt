 URL : "https://github.com/snhirsch/katana-midi-bridge/issues/5" TITLE : mapping architecture idea BODY : from 2 > lastly, it would be great if someone wanted to help add the midx-20 cc-->sysex mappings to this code, but i'd like to do a partial implementation first to set an architectural example. i ran into http://das.nasophon.de/mididings/ which seems to have a really versatile set of features to do this. you can write selectors for the input midi messages and use either the sysex generator to create a single sysex message out, or use process to return a list of sysex events or a generator yielding these. there's also built in possibilities to create separate threads, which could be useful for the i/o of patches on disk. keeping the selectors separate from the processing steps would make the bindings very flexible and hackable for people who want custom bindings.