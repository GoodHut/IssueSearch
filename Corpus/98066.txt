 URL : "https://github.com/Rantanen/intercom/issues/6" TITLE : implement string allocator BODY : currently our bstr implementation uses sysallocstring , etc. methods from the windows api. this is the de facto way to allocate/deallocate bstrs on windows. for cross platform purposes we need an alternative way. one option would be to statically implement a istringallocator interface with a known guid. this allows the com client to acquire a istringallocator interface that provides freestring bstr method. this method can then allocate/deallocate the bstr properly. the only important consideration with the implementation is that the allocation and deallocation is done in a compatible way with each other. thus if we allocate the bstr from rust heap, the deallocate must free the bstr into rust heap. if we use sysallocstring then the freeing must be done with sysfreestring . ------------------------------------------------ tasks: - define the interface as intercom::istringallocator or similar trait. the implementation can be static intercom::stringallocator as well. we might not even need the trait but instead just use the implicit impl instead. - modify the com_library code gen to include the stringallocator in the classfactory constructor. - implement string allocation with sysallocstring in windows and something else such as rust heap/ box on other platforms.