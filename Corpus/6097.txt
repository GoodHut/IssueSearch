 URL : "https://github.com/ethereum/viper/issues/523" TITLE : vip error logs BODY : preamble vip: <to be assigned> title: error logs author: @fubuloubu type: standard status: draft created: 2017-11-27 simple summary create an error log to manage and debug runtime errors abstract send out a log containing the line number in the source code and an error message after a revert type exception that cancels further processing motivation the motivation behind this vip is to help with debugging by having statements that localize your attention in the failing method invocation to a specific line in source code, and an error message that helps you understand what went wrong. we would most likely be unable to describe errors in a more detailed way than this unless we built these error logs more dynamically, or used another method to show the values of any operand s in memory. specification internal use only we should attempt to add lll statements or a helper for creating an error log after every revert in our lll ir. this log should be of type error: __log__ {line: num, msg: bytes <= 40} where line corresponds to the line number in the viper source code corresponding to the potential revert statement, and msg contains a description of the runtime error. this log would be invoked after the revert occurs in lll, via a push to memory refer to @davidknott for implementation so a client running any code that creates a runtime issue can see a log helping them debug what happens. error messages should be unique! perhaps we can leverage a python class for this? backwards compatibility backwards compatible, should not cause any functional changes copyright copyright and related rights waived via cc0 https://creativecommons.org/publicdomain/zero/1.0/