 URL : "https://github.com/Shopify/ejson/issues/42" TITLE : aws kms support BODY : proposal: support for storing the private key encrypted with a given kms key inside the ejson document. decryption of secrets would require permission to decrypt with the kms key, not access to the unencrypted private key on disk as before. this is similar to how sops https://github.com/mozilla/sops works in how it wraps the private key with kms and stores it in the yaml file. benefits for applications on aws : - reduced exposure of the private key. unencrypted private keys don't need to be stored or shipped anywhere. - much easier to setup since private key file storage & distribution isn't required. - no risk of leaking the private key through a misconfigured key storage s3/kms/parameterstore setup since key storage isn't necessary now. - decryption of secrets is audible through use of the kms key. - developers that need to view secrets on their machine don't need to put the private key on their filesystem they just assume a role that has decrypt permission . i imagine it working like this: ❯ aws-vault exec ... -- ejson keygen --kms-key-id kms_key_id public key: public_key private key: private_key kms encrypted private key: private_key_enc_w_kms_key ❯ create test.ejson with the above ❯ cat test.ejson { _public_key : public_key , _kms_encrypted_private_key : private_key_enc_w_kms_key , test : ej ... } ❯ aws-vault exec ... -- ejson decrypt test.ejson { _public_key : public_key , _kms_encrypted_private_key : private_key_enc_w_kms_key , test : sssh! it's a secret }