 URL : "https://github.com/gpakosz/.tmux/issues/117" TITLE : cpu usage on status bar BODY : i really don't know how to extend without forking the repo. i really like how this is setup and the idea of overriding things on the local machine. the only thing i miss from my config is this: print_cpu_percentage { if command -v iostat &> /dev/null; then if iostat -c &> /dev/null; then iostat -c 1 2 | tail -n 2 | tr -s ' ' ';' | grep -e '^;' | cut -d ';' -f 7 | awk '{usage=100-$1} end {printf %5.1f%% , usage }' elif $ uname == darwin ; then iostat -c 2 disk0 | tail -n 1 | tr -s ' ' ';' | cut -d ';' -f 7 | awk '{usage=100-$1} end {printf %5.1f%% , usage }' elif $ uname == freebsd ; then iostat -c 2 | tail -n 1 | tr -s ' ' ';' | cut -d ';' -f 11 | awk '{usage=100-$1} end {printf %5.1f%% , usage }' else echo unknown iostat version please create an issue fi elif command -v sar &> /dev/null; then sar -u 1 1 | tail -n 1 | tr -s ' ' ';' | cut -d ';' -f 8 | awk '{usage=100-$1} end {printf %5.1f% , usage }' else if command -v wmic &> /dev/null; then usage= $ wmic cpu get loadpercentage | grep -eo '^ 0-9 +' printf %5.1f%% $usage else load= ps -aux | awk '{print $3}' | tail -n+2 | awk '{s+=$1} end {print s}' cpus=$ cpus_number echo $load $cpus | awk '{printf %5.2f%% , $1/$2}' fi fi } with that, i was able to place the cpu usage on the status like this: status_right_cpu= ${tmux_conf_cpu:- cut -c3- ~/.tmux.conf | sh -s print_cpu_percentage } the thing is, how would i make this work on the local config?