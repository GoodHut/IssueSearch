 URL : "https://github.com/MrChimsley/BitcoinLearn/issues/1" TITLE : my sha don't work right. BODY : ok well i am failing hard at figuring this out. for example: std::string step2 = 800c28fca386c7a227600b2fe50b7cae11ec86d3bf1fbe471be89827e19d72aa1d ; unsigned long val = strtoul step2.c_str , 0, 16 ; unsigned char hashtarget = unsigned char &val; this puts my hex string into val. then i put this in unsigned char hashtarget. i can't hash hashtarget ... invalid conversion from ‘unsigned char ’ to ‘const char ’ -fpermissive | when i cout<<hashtarget i can see that i have bytes unprintable characters displayed in console . the thing is the function to hash is expecting a string. std::string sha256 const std::string str do i change this to expect unsigned char instead of string? i have looked and looked and i can't find an example that i can understand that does the simple steps i want. i see numerous examples of hashing for bitcoin but everything is wrapped up in so much code that i get lost trying to decipher the simple operation i am looking for. i really feel like this whole deal is probably fixed with 5 lines of code lol but i don't know which ones. if i get rid of the function call entirely and do everything in main like so i get the wrong hash result. but at least i am hashing bytes now i think. using the example values from above unsigned char hash sha256_digest_length ; sha256_ctx sha256; sha256_init &sha256 ; sha256_update &sha256, hashtarget, sizeof hashtarget ; sha256_final hash, &sha256 ; std::stringstream ss; for int i = 0; i < sha256_digest_length; i++ { ss << std::hex << std::setw 2 << std::setfill '0' << int hash i ; } std::cout<<ss.str ; i hope you find my questions as entertaining as i find them frustrating.