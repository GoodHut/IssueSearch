 URL : "https://github.com/vermaseren/form/issues/234" TITLE : use of move semantics BODY : the form polynomial routines are written in apparently copy semantics rather than move semantics, because it was written in c++98 and the move semantics was not supported at the language level. this means that there would be many unnecessary memory copies. i just made patches to apply move semantics to poly . unfortunately the result of a polyratfun intensive benchmark https://gist.github.com/tueda/8cabf511573b115b9c17a7a181bf0248 suggests that such a copying cost is negligible. actually the most time-consuming part of this benchmark is addition of big integers. anyway, if someone finds a case where copy semantics seems to cause a significant loss of the performance, the following patches can be tried and would be merged to the master branch: 1. patch to enable c++11 in the configure script if available: https://github.com/tueda/form/commit/3c1c599bc9550160980bcfd49e11b972b83c0587 2. patch to add move semantics to poly if the compiler is in the c++11 mode: https://github.com/tueda/form/commit/77183d775b93b66333f7cfabd8ad3093929a22d5