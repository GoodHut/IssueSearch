 URL : "https://github.com/quicwg/base-drafts/issues/655" TITLE : 1-rtt stateless rejects BODY : currently, if the server is in position where it has to send stateless rejects, the client has to wait two round trips before it can send any data: one to statelessly get a proof of ability to receive, and one to do the tls handshake now with the state . we can do better than that. instead of sending only a cookie, the server can also send a certificate and a session ticket, neither of which would require storing any state. the way i envision this is something like this: 1. client sends the clienthello 1. server sends serverhello, certificate, certificateverify, finished, nst and close_verify. 1. client sends clienthello with the ticket it just received, plus any 0-rtt-eligible data it wants. 1. the rest of the handshake proceeds as usual. in order to not get stuck in an infinite loop, you'd have to opt into that scheme using an extension, and on the second attempt you opt out of it. cc @martinthomson @seanturner @ekr @ianswett