 URL : "https://github.com/phpredis/phpredis/issues/1273" TITLE : improve connection error BODY : connect returns false if a connection could not be established and triggers a php warning. seems like the only way to actually get the connection error message is by adding an error handler around the connection statement and capturing the php warning. i think it would make sense to create a method/property similar to mysqli::connect_error/mysqli_connect_error . getlasterror requires an active redis connection - it throws an exception redis server went away if there is no active connection which there wouldn't be . getlasterror throwing exception after connection failed due to connection refused: $ php -r '$r = new redis ; try { if !$r->connect 127.0.0.1 , 1000 echo $r->getlasterror ; } catch exception $e { echo exception: . $e->getmessage . ; }' php warning: redis::connect : connect failed: connection refused in command line code on line 1 exception: redis server went away dns issue actually produces two php warnings for me: $ php -r '$r = new redis ; if !$r->connect example.example echo some failure ;' php warning: redis::connect : php_network_getaddresses: getaddrinfo failed: name or service not known in command line code on line 1 php warning: redis::connect : connect failed: php_network_getaddresses: getaddrinfo failed: name or service not known in command line code on line 1 some failure connection timeout produces warning: $ php -r '$r = new redis ; if !$r->connect 1.1.1.0 echo some failure ;' php warning: redis::connect : connect failed: connection timed out in command line code on line 1 some failure i'm seeing this behaviour on - os: centos 7.4.1708 - redis: - php: php 7.1.11 - phpredis: 3.1.4