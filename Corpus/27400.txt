 URL : "https://github.com/fatih/structs/issues/100" TITLE : custom map function BODY : similar to the json.marshal it would be really great to have the ability to add my own map function to a struct in order to overwrite the default mapping. example use case: type foo struct { data bar } type bar struct { name string value string } func main { f := &foo{ data: bar{ name: foo , value: bar , }, } fmt.println structs.map f } in this example the actual data is hidden away and only accessible from the foo struct itself at least outside the package . so i would want to build a function foo.map that can extract the data. in a nested case it is necessary that the map package calls the custom map function if it exists.