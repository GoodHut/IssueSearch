 URL : "https://github.com/gcp/leela-zero/issues/206" TITLE : questions about fullboard BODY : what is the significance of the initial ko value defined as the following? ifdef _win32 res = 0x1234567887654321ui64; else res = 0x1234567887654321ull; endif this is the same initial value used in calckohash and calchash. probably it should be a constant. in getrotatedhashes you start with 0x1234567887654321ull but without the ifdef for _win32. is that an oversight? seems like there should be the same ifdef that you did in the other places. is that a potential bug on windows? if it is a bug, its one that would have been avoided by having this value as a constant. what does this comment mean? tromp-taylor has positional superko value for reference, this page describes superko - https://senseis.xmp.net/?superko how does it relate to the hash that is computed in calckohash? there is some duplicated code when computing the hashes. there could be separate methods for calculating the base hashes and also the part that incorporates the prisoners into the hash. the original version of leela handles multiple board sizes - so it must do dynamic allocation. is the code in leela-zero very different? it must be. sounds like having it handle different board sizes would be difficult. i will attempt a pr after i see responses.