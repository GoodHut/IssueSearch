 URL : "https://github.com/alexandru/schrodinger/issues/2" TITLE : proposal: io signature BODY : scala final class io +a { def map b f: a => b : io b = ??? def flatmap b f: a => io b : io b = ??? def attempt: io either throwable, a = ??? def unsaferunsync : a = ??? def unsaferunasync cb: a => unit : unit = ??? def unsaferuntimed limit: finiteduration : a = ??? } object io { def now a a: a : io a = ??? def delay a a: => a : io a = ??? def async a cb: either throwable, a => unit => unit : io a = ??? def fail t: throwable : io nothing = ??? } some things to discuss: - covariance? - do we need now ? someone with a better handle on the performance impact of the new lambda encoding for by-name parameters should weigh in here - we need to be sure we expose the algebra for introspection, to enable the implementation of sane downstream stuff e.g. fork