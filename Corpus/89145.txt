 URL : "https://github.com/pomma89/ObjectPool/issues/3" TITLE : pool grows above max size BODY : thanks for updating the original and adding to nuget, i was very happy to find this, however there is a significant difference between this and the original which defeats the purpose from my point of view. with the original version the pool did not grow above the maximum size and an attempt to get an object when the pool was fully used would block until an object was freed, your version simply creates a brand new object and returns anyway which makes it an unlimited pool. i'm not sure if this is a deliberate change in behaviour or accidental? also, in the original version, the number of objects specified as the minimum were created up front as the pool was created, this meant that once the pool was established no further construction of object took place, ie we knew that everything was up and running ok, this isn't a huge issue though but the lack of blocking is. the draw method of the original had this which is where the blocking took place - is there any likelihood that your version will be amended to block when no pool objects are available? else { if m_canexhaust { throw new invalidoperationexception s pool exhausted! ; } else // the pool should wait until a free object returns { trace s draw: waiting for free object to return in the pool ; while po == 0 { po = internaldraw ; thread::sleep 0 ; // give just a scrap of time } trace s wait finished. at least one free object returned. ; return po ; } // if m_canexhaust } // if grow -1 many thanks