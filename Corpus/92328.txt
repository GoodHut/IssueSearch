 URL : "https://github.com/ukwa/webarchive-discovery/issues/130" TITLE : what to do about commits? BODY : during a batch index by @ruebot, using warc-indexer , solr failed multiple times. it turned out that the problem was commits: unless the option -d / --disable-commit is given, each call to warc-indexer starts with a commit and ends with a commit. those commits are both hard & soft, meaning that the data are flushed to storage and a new searcher is opened. @ruebot's 24 workers meant that about 1 warc was processed each minute, meaning 2 new searcher -events each minute. that does not sound bad, until we remember that x shards with y replicas means that x y shards goes through the new searcher -process each time. running a lot of warc-indexer -processes in parallel is a very easy way of speeding up indexing. doing so without specifying -d leads to problems. unfortunately we cannot reliably detect if multiple warc-indexer s are running at the same time, so maybe warc-indexer -driven commits should be off by default? this leads us to the next problem: without explicit commits, changes will not show up in solr. curl http://mysolrcloud:8983/solr/update?commit=true&opensearcher=true is a simple way of triggering that, but it is not very user-friendly to require such a call and if the user forgets, there will be worrying & debugging. i suggest that we - set autosoftcommit/maxtime in solrconfig.xml to 10+ minutes so that documents will be visible automatically at some point - make a note in the log, if -d has been specified, that there will be delayed visibility - write clearly in the documentation that for multi-threaded indexing, -d and issuing a explicit post-index commit is the recommended workflow - make a note in the command line arguments list to check the documentation if one runs multiple parallel jobs