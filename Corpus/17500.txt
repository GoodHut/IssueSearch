 URL : "https://github.com/JohnOmernik/zetago/issues/21" TITLE : port code cleanup BODY : ports with edge/slave_public nodes is working now, it's not pretty, but it is working. thus, we have ports that are cluster available internally from node to node communication or edge ports that exposed on the edge node loadbalancers. there are some things work out there, but basically it's working. the code in the package installs is wordy and repetitive right now, it could be cleaned up. getting a port returns a whole pore string port, role, protocal, type, and other things the marathon definitions need things depending on bridge type docker bridge vs docker host and and mesos containerizer and it also need ha_proxy label definitions. there are functions for this, but there is lots of repeated code in the package installs... this is what needs some cleanup/thought. portstr= cluster:tcp:27005:${app_role}:${app_id}:hbaserest info port getport chkadd hbaserest info port $services_conf $portstr example from the hbaserest package i need two ports, if $chkadd != ; then getpstr mytype myprotocol app_info_port myrole myapp_id mycomments $chkadd app_info_portstr= $chkadd else @go.log fatal failed to get port for $app_name instance $app_id with $pstr fi portstr= cluster:tcp:27000:${app_role}:${app_id}:hbaserest http port getport chkadd hbaserest http port $services_conf $portstr if $chkadd != ; then getpstr mytype myprotocol app_port myrole myapp_id mycomments $chkadd app_portstr= $chkadd else @go.log fatal failed to get port for $app_name instance $app_id with $pstr fi bridgeports app_info_port_json , 8005 , $app_info_portstr bridgeports app_port_json , 8000 , $app_portstr haproxylabel app_ha_proxy ${app_portstr}~${app_info_portstr}