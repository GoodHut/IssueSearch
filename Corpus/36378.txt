 URL : "https://github.com/pex-gl/pex-renderer/issues/30" TITLE : handle window resize BODY : with the latest code pex-renderer and pex-context the following is now possible: javascript window.addeventlistener 'resize', => { const w = window.innerwidth const h = window.innerheight ctx.gl.canvas.width = w // ctx will pickup that change and update default viewport ctx.gl.canvas.height = h cameraent.getcomponent 'camera' .set { viewport: 0, 0, w, h } } you need to update only camera as all width/height code has been removed from the renderer itself. this ctx.gl.canvas.width is a bit ugly so alternatively we could do javascript window.addeventlistener 'resize', => { ctx.resize window.innerwidth, window.innerheight cameraent.getcomponent 'camera' .set { viewport: 0, 0, window.innerwidth, window.innerheight } } there is a question about retina resolution that requires the following code. javascript window.addeventlistener 'resize2', => { const w = window.innerwidth const h = window.innerheight ctx.gl.canvas.width = w 2 ctx.gl.canvas.height = h 2 ctx.gl.canvas.style.width = w + 'px' ctx.gl.canvas.style.height = h + 'px' cameraent.getcomponent 'camera' .set { viewport: 0, 0, w 2, h 2 } } changing it to the ctx.resize version is ambiguous... javascript ctx.resize w 2, h 2 // who sets canvas.style.width = w ? ctx.resize w, h, 2 //? ctx.resize w, h, { pixelratio: 2 } //? ctx.resize h, h, { scale: 2 } //? // and additionally var ctx = createcontext { width: w, height: h, pixelratio: 2 } //ctx.defaultstate.viewport 2 is now w 2...