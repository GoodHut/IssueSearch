 URL : "https://github.com/CGAL/cgal/issues/2196" TITLE : io for polygon soups BODY : issue details i'm opening this issue just to start a discussion on the input/output functions for polygons soups, especially: - the current off reader - a ply reader to develop so far, we already have a function that can interpret off input as a polygon soup, namely read_off . but this function is in the polyhedron_io package although it never actually refers to a polyhedron , and it is not documented. note that it is used in the example for polygon soup orientation http://doc.cgal.org/latest/polygon_mesh_processing/index.html polygonsoupexample , which makes me think it _should_ be documented. for ply, we already have a ply reader with a new version in pull request https://github.com/cgal/cgal/pull/2138 along with las but for points only. there is not that much of work to do if we want to handle face graphs and polygon soups in addition basically, write something to handle the ply lists of indices . questions 1. do you think it would make sense to move read_off into polygon mesh processing? there could be an io section in there and polygon soups are used there, for example for orientation 2. in that case, do we also want to add read_ply ? i'm not really fond of these names, it seems to me that they should be more precise, for example read_off_polygon_soup and read_ply_polygon_soup similarly to what we have with read_off_points and read_ply_points . 3. for point_set_3 , i made an operator>> that automatically calls the right reader between xyz , off , ply and soon las by analysing the first line of the stream that contains a tag, except for xyz . do we want the same thing for surface_mesh , for example? it could select between off and ply . and as it works similarly to point_set_3 , we could similarly recover additional properties in ply in automatically generated property maps.