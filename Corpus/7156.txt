 URL : "https://github.com/lpereira/lwan/issues/197" TITLE : double free bug BODY : when simply start lwan using the command line: ./lwan -c ./aa ./aa doesn't exists , and press ctrl+c to exit lwan, it reports double free. gdb bt indicates that is cause by the count backwards line 3 free c.listener ; int the main function. i read code, and found that actually cause the problem is in function lwan_shutdown , the following the code cause the problem: c if l->config.listener != default_config.listener free l->config.listener ; default_config.listener is const string in the stack, l->config.listener is new allocate in heap, this if judgement always return true. the l->config.listener should compare with the one in main function, as follow: c c = lwan_get_default_config ; c.listener = strdup :8080 ; i simply comment the following code to eliminate this bug, after the exit of program all resource relate the this program is release except the kernel relate objects. . c out: //free c.listener ; //free c.config_file_path ; return ret;