 URL : "https://github.com/ARMmbed/mbed-os/issues/4341" TITLE : hal_lock in st devices BODY : description - type: bug - priority: major hal_lock mechanism in st hal seems not ready for rtos context. --------------------------------------------------------------- bug target stmf32f0 and f4 toolchain: all mbed-os sha: 4eea8fa8633751fc91095e24eeb154ac3df3afd9 actual behavior the hal_lock mechanism https://github.com/armmbed/mbed-os/blob/master/targets/target_stm/target_stm32f4/device/stm32f4xx_hal_def.h l105 is not set to be used in the rtos context. observed issue when using the crc hardware for checking data coming in from an i2c interrupt and from a scheduled thread we observed not proper behavior on the handling of hal_lock. we are working on a workaround, to schedule the crc check outside of the interrupt context, but are still unsure whether this solution then will completely overcome the limitations of the current implementation of the hal_lock mechanism. ----------------------------------------------------------------- question how to? how to use the st hal in the context of mbed-os considering that it is an rtos? and as such it could access the hal from both interrupts and thread context. related to this i found https://community.st.com/thread/13989, where also it is reported that the hal_lock mechanism is not completely reliable in the context of rtos systems. @bcostm ------------------------- fyi: @markus-becker-tridonic-com @ivan-adzic-tridonic-com @marcelosalazar @karsev