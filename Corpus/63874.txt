 URL : "https://github.com/murisi/L2/issues/6" TITLE : extend the string macro BODY : the string macro https://github.com/murisi/l2 strings is used as follows word1 word2 ... wordn where wordi is a string of characters. the problem with this setup is that it does not support the emission of control characters like newline or backspace. this will make bootstrapping an l2 compiler tedious in the part where it does string manipulation. hence i am thinking about either making the string macro recognize a sequence like \b and emit a corresponding ascii code 8. so int\bside becomes inside . though this is what is done in a lot of languages, this does not feel too elegant. an idea that i'm favoring is that when the string macro comes across as list s-expression not a character s-expression , it should evaluate the expression and insert the resulting character into that position of the string. so expressions like int d 8 side and int backspace side where backspace is a nullary function evaluating to 8 evaluate to inside . any thoughts and/or implementation of them welcome.