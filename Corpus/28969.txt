 URL : "https://github.com/ned14/outcome/issues/73" TITLE : improve try macros? BODY : the following code will not compile: c++ include outcome.hpp namespace out = outcome_v2_namespace; template <typename t, typename u> out::result<int> fun { return 1; } out::result<int> gun { outcome_try x, fun<int, int> ; // compiler error return x + 1; } int main { auto x = gun ; } this is because the preprocessor sees three parameters passed to a 2-argument macro. i can fix this by changing the offending line to: c++ outcome_try x, fun<int, int> ; // <- added parentheses but you could also fix this in the macro definition. rather than taking 2 arguments: c++ define outcome_try v, m / ... / just make it variadic: c++ define outcome_try v, ... / ... / and it should be possible to adjust the body accordingly.