 URL : "https://github.com/phw/peek/issues/147" TITLE : a tip and a question BODY : hi, i looked at peek because of https://github.com/awesomewm/awesome/issues/1827. two things caught my eye: the following code draws recording view: https://github.com/phw/peek/blob/6dbf715acfe361851613eaf079e202bd39333e46/src/ui/application-window.vala l198-l214 this is equivalent to the following: vala ctx.set_operator operator.clear ; ctx.paint ; update_input_shape ; return false; if you take the time to understand https://cairographics.org/operators/ clear, you will see that the clear operator does not use the current source, so it makes no difference if the source is completely transparent or is black. this also makes the screen_supports_alpha variable redundant! the second change is that i dropped the call to ctx.fill . you do not have a current path no call to e.g. ctx.rectangle and thus you are filling the empty path. filling the empty path has no effect. also, what effect should it have? paint just cleared everything already. ------ the second thing concerns the use of shapes. you already use the input shape. why don't you use the clip/bounding shape? https://developer.gnome.org/gtk3/stable/gtkwidget.html gtk-widget-input-shape-combine-region what i mean is basically the following patch: diff --- application-window.vala.orig	2017-06-13 09:14:11.374492099 +0200 +++ application-window.vala	2017-06-13 09:14:32.210933971 +0200 @@ -382,6 +382,7 @@ namespace peek.ui { } this.input_shape_combine_region window_region ; + this.shape_combine_region window_region ; } private widget? get_fallback_app_menu { shaped windows also work without a compositing manager and an argb visual. i have never used peek and i am not sure how it works, but the above when no countdown is running... could help. cheers, uli