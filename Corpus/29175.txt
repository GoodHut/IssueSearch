 URL : "https://github.com/Team-Doominati/Doominati/issues/59" TITLE : items and inventory BODY : as discussed/dictated elsewhere, my current vision is to have an inventory class that derives from object . an entity would have a pointer to an inventory that is created by scripts if/when an inventory is needed. an inventory would be a positional array of item , with its size decided at creation time. in order to allow more efficient allocation. there will probably be some kind of create-and-transfer function to ease resizing. the meaning of the positions is determined by scripts. for example, equipment slots would just be dedicated inventory positions. item would be an itemtype , itemdata , and count. itemtype and itemdata are derived from object . itemtype describes the intrinsic properties of the item. itemdata is used for dynamic properties of the item. and count is just a number for scripts to use. particularly for items that don't need a full itemdata instance. since both itemtype and itemdata are created and modified by scripts, the exact logic of when to use which for what is up to the user. for example, modified weapons could store mods in an itemdata or create a new itemtype each time. setting up this issue as both a reminder to myself to do all of that and to collect ideas for what sorts of builtin members to have for itemtype and itemdata . given how usable extension members have already proven, and the highly script-centric nature of item semantics, i am unsure what is actually needed as a baseline.