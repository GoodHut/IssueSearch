 URL : "https://github.com/sanderman01/unity-gridgame/issues/1" TITLE : how to do tile meta data? BODY : we have a few options: 1. store 16 bit unsigned integers c ushort and use the 4 least significant bits for meta data and the remaining 12 bits for tile type. 2. store 32 bit unsigned integers c uint and use the 8 least significant bits for meta and the remaining 24 bits for tile type. option 1 has as advantage that it takes the least amount of memory. option 2 has as an advantage that it will be much more future-proof. in the future, if modding takes off, we might need the ability to have more than 4096 types of tiles. unfortunately it would also take double the amount of memory compared to option 1. there is also another option: 3. store tile meta-data in a separate byte buffer. i don't really like option 3 because this means that for rendering a single tile, you'll need to access at least two different buffers per chunk, which might impact performance of the game. these buffers may not be located near each other in memory, which could affect cache efficiency let me know your thoughts on this topic. references: explaination of how minecraft handles block metadata https://bedrockminer.jimdo.com/modding-tutorials/basic-modding-1-7/metadata-blocks-and-items/ > blocks with metadata: the metadata of a block is a number between 0 and 15 which is stored along with the block when the world is saved. with this metadata you can either give a block several different types like the different colours of wool or you can store for example the rotation of the block like with stairs or pistons . you should give a block subtypes if you want to create some blocks which are basically the same but with some small differences like the colour of the wool .