 URL : "https://github.com/ILanning/CommonCode/issues/14" TITLE : create uimanager class BODY : difficulty determining what objects should be paying attention to user input has been a longstanding issue. every time, the solution ends up being a ton of custom code, usually in a screen class, which is hard to test and change. instead, these responsibilities should be put into a consistent ui manager class. the ui manager will: keep track of which ui element currently has focus. only check for user input to the relevant inputs, allow for things like using tab to cycle through elements. not be a singleton, but rather more of a one-per-screen class, like the windowmanager. things should probably be tracked using a tree structure, where nodes track both their children and their parent. each frame, ask the currently focused element if it would like to do something with any of the input events that happened. it should return a list of events, where some may have been consumed. that list is then given to the object's parent, which does the same, and so on. eventually you get to the root, which probably has a list of things that ought to be checked for every frame no matter what. some open questions/potential flaws: what if we have an object that logically belongs to a certain menu, but should respond to some events globally? is the uimanager actually responsible for keeping track of all ui elements, or is that something else's responsibility? how do we ensure that elements that we no longer want are discarded appropriately? do individual elements know that they are in focus? probably, since you may want a button to visibly change on focus