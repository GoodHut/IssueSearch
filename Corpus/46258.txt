 URL : "https://github.com/spring-guides/tut-spring-security-and-angular-js/issues/138" TITLE : logout flow in oauth2 BODY : referring to the logout flow in oauth2 https://github.com/spring-guides/tut-spring-security-and-angular-js/tree/single-sign-out/oauth2 project, once the the user has authenticated using user/password for the first time, the credentials are not asked next time after logout. how can i ensure that username/password are asked every time after a logout. this is what i am trying to implement:- 1. oauth2 server using jwt token using authorization_code grant type with auto approval. this has html/angularjs form to collect username/password. 2. ui/webfront - uses @enablesso. all its endpoints are authenticated i.e it does not have any unauthorized landing page/ui/link that user clicks to go to /uaa server. so hitting http://localhost:8080 instantly redirects you to http://localhost:9999/uaa and presents custom form to collect username/password. 3. resource serve - uses @enableresourceserver. plain & simple rest api. with the above approach i am not able to workout the logout flow. http post /logout to the ui application clears the session/auth in ui application but the users gets logged in again automatically as i have opted for auto approval for all scopes without being asked for username password again. looking at logs and networks calls, it looks like that all the oauth dance happens all over again successfully without user being asked for username/password again and seems like the auth server remembers last auth token issued for a client using org.springframework.security.oauth2.provider.code.inmemoryauthorizationcodeservices?? . how can i tell auth server to ask for username/password every time request for code/token. or what is the best way to implement logout in my given scenario. to recreate somewhat near to my requirements, remove permitall part from the uiapplication configuration thanks.