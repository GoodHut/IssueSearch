 URL : "https://github.com/Nemocas/Nemo.jl/issues/167" TITLE : fixing ^ a::perm, n::int BODY : currently, a little unexpectedly: for n >= 2 it works albeit not efficiently, we could compute order by cycle decomposition for n = 1 it fails with methoderror: no method matching copy ::nemo.perm for n = 0 it fails with methoderror: no method matching one ::nemo.perm for n < 0 it fails with familiar though unexpected error: domainerror: cannot raise an integer x to a negative power -n . solutions: 1. define power_by_squaring p::perm, n::int to which ^ defers. 2. define copy similar to deepcopy_internal and one ; user handles negative powers by inv p ^n this also brings the issue of one vs. eye for groups; has anyone an idea how to handle e.g. rings -> groups forgetful functors, i.e. multiplicative one vs. additive zero ?