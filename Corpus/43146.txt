 URL : "https://github.com/algotech/coding-standards/issues/5" TITLE : code review checklist BODY : https://blog.fogcreek.com/effective-code-reviews-9-tips-from-a-converted-skeptic/ http://blog.fogcreek.com/increase-defect-detection-with-our-code-review-checklist-example/ checklist architectural - is there any redundant or duplicate code? - is the code as modular as possible? - are all the queries in repositories? - can any of the code be replaced with library functions? - is the any hardcoded string or value that is not saved in variable preferably constant in a class - is most of the code in helpers/services preferably used via dependency injection? - if you use a typeless programming language, type hinting should be used or dock blocks to specify the expected data type - are there any missing updates to the documentation/readme files? security - are all data inputs checked for the correct type, length, format, and range and encoded? - are invalid parameter values handled? testing - is the code testable? i.e. don’t add too many or hide dependencies, unable to initialize objects, test frameworks can use methods etc. - do unit tests actually test that the code is performing the intended functionality? - are dependencies mocked? standards - name your variables to say what they are for, not what data type they are - give your methods a clear name for what they are going to do. coding - there is no created by xyz …. line in the code. we use git for that.