 URL : "https://github.com/alekratz/enum-methods/issues/11" TITLE : enum name getters BODY : one problem we have with a lot of the getters is that they require derive debug , which is all well and good until you start working with weird types that aren't debug e.g. function pointers . since debug is only used to print out the name of the variant in the event of a panic, and not the data, i think it makes the most sense to generate methods which return a &'static str of its name. then, enum{as,into,to}getters would just use that generated name method to display in the panic! . for example, rust derive enumnames enum myenum { foo i32 , bar i64 , baz string , } // generates impl myenum { fn enum_names &self -> &'static str { match &self { &myenum::foo _ -> foo , &myenum::bar _ -> bar , &myenum::baz _ -> baz , } } } gotchas: this would require exactly one instance of enum_name to be generated. it may be difficult to keep track of when we're mixing and matching enum getters because they are not aware of each other. the above means we probably can't automatically derive from it, and it would become some extra boilerplate for users of the library to include, which i'm not a big fan of.