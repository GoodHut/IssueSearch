 URL : "https://github.com/Project-OSRM/osrm-backend/issues/4152" TITLE : more lua speedup? BODY : inspired by 4147, what about the profile providing a list of tags, and only calling the node function if at least one of the tags are present? the node functions typically look at a limited number of tags. e.g. the car profile: lua function node_function node, result -- parse access and barrier tags local access = find_access_tag node, profile.access_tags_hierarchy if access then if profile.access_tag_blacklist access and not profile.restricted_access_tag_list access then result.barrier = true end else local barrier = node:get_value_by_key barrier if barrier then -- make an exception for rising bollard barriers local bollard = node:get_value_by_key bollard local rising_bollard = bollard and rising == bollard if not profile.barrier_whitelist barrier and not rising_bollard then result.barrier = true end end end -- check if node is a traffic light local tag = node:get_value_by_key highway if traffic_signals == tag then result.traffic_lights = true end end which only looks at the tags: access, vehicle, motor-vehicle,vehicle, barrier, bollard, highway if none of these tags are present, there's no need to call the node function.