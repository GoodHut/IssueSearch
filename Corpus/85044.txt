 URL : "https://github.com/tangrams/tangram-es/issues/1435" TITLE : enable 512px tile sources BODY : background we currently assume that a tile from tiled data sources is intended to be viewed at a scale of 256 logical pixels per side. as the resolution of mobile devices increases, we incur a corresponding increase in the number of url requests needed to cover a screen-sized area. a data source can reduce this number of requests by offering tiles meant for viewing at 512 logical pixels per side. these 512px tiles would cover the area of 4 256px tiles and would therefore reduce the number of url requests needed for a typical view by a factor of 4. this would also result in fetching somewhat more off-screen data than with 256px tiles, but this trade-off is often beneficial in practice. implementation the logical size of a tile is an attribute of the data source that provided that tile, and this size cannot be reliably inferred from the tile data itself. therefore the tile size of a data source is probably best configured in the scene file within a sources entry. the syntax for this could be simply: yaml sources: _mytilesource: tile_size: 512 defaults to 256 if absent. or, recognizing that sizes will almost certainly be powers of 2, we could specify an exponent relative to 256 instead: yaml sources: _mytilesource: tile_scale: 2 defaults to 1 if absent, 2 denotes 512px, 3 denotes 1024px, etc. or maybe 0 denotes 256px, 1 denotes 512px. within the engine, we'll need additional logic for determining the display size of a tile based on the size specified in its data source configuration. the semantics of a tile coordinate will remain the same - that is, a tile coordinate {x, y, z} will denote the same geographic area for tiles of any size. this means that the pixel size specified for a tile is effectively a measure of the _level of detail_ present in the tile data. therefore, for a view covering the tile coordinate {x, y, z} using a data source of 512px tiles, we would display the tile {x/2, y/2, z-1}.