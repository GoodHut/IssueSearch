 URL : "https://github.com/traday/irs/issues/4" TITLE : wip: upload personnel BODY : wip: i don't really want to use carrier wave or paper clip. the api will expect a base64 encoded file. i am not sure yet what the endpoint will look like. description the personnel for a station should be uploadable from a csv text file. there are only two columns, with headers, that we care about though there may or may not be more columns than 2! and they will always be the first two columns. we will use ruby's base64 module to decode the string endpoint tbd - format info | header | content | comments | | --------| -------- | ----------- | | name | last first| no middle names, always just two values, last and first. | | membership category | random string | no need to separate or parse | sample data | name | membership category | | ---- | -------------| | lodge veronica | fire police | | cooper betty | ff/emt | | jones jughead | c - ff/emt | | mantle reggie | probationary ff | schema we will create a person model object with the following attributes: - first_name: string - last_name: string - category: string validation this is pretty simple. - first row is the header. - all remaining rows have both name and category value. entirely blank rows ok. ignore - name has a space separating last and first name. errors on validation failure, we will return :unprocessable_entity with a text message for the error. return up to 3 errors. success on successful validation, finish processing and return :ok200 processing if the person does not exist exact match of both first and last name add them with the category if the person does exist but the category is different, simply update the category. if both the person and the category exist, ignore.