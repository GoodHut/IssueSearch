 URL : "https://github.com/JuliaPOMDP/POMDPs.jl/issues/172" TITLE : o and t functions BODY : i feel like there should be o and t functions defined, for a couple reasons. first, it is more intuitive. second, it might lead to performance gains. for the first, consider the following examples that yield o a, s', o and t s, a, s' : od = observation pomdp, a, sp po = pdf od, o td = transition pomdp, s, a pp = pdf td, sp this is verbose. i think one of the selling points of pomdps.jl is to be able to read and prototype solvers quickly. the following would be better: po = o pomdp, a, sp pp = t pomdp, s, a, sp none of the underlying code needs to change. couldn't we just implement the following? function o pomdp, a, sp observation pomdp, a, sp po = pdf od, o end there might be computational benefits too. if observation returns a vector, we might be allocating memory every time we query an observation probability. if they wanted to, the user could re-define o for their problem to avoid this.