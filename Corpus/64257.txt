 URL : "https://github.com/mono/mono/issues/6151" TITLE : fork - mono.unix.native BODY : i have noticed that in mono/mcs/class/mono.posix/mono.unix.native/syscall.cs https://github.com/mono/mono/blob/master/mcs/class/mono.posix/mono.unix.native/syscall.cs fork is if'd out with the message _do not directly call fork 2 ; it bypasses essential shutdown code. use system.diagnostics.process instead_ . what happens specifically? fork starts a process, it does not shut anything down? fork should just work, does it not effectively copy on write copy the entire vm which then each shuts down independently? fork does work in python on unix multiprocessing module . fork is powerful, it supports using processes as an alternative to threads. one can not test for a one in a million race condition. system.diagnostics.process only replaces fork then exec . i wish to use fork to support replicated processes, starting with a complete copy of the application's state greatly simplifies this.