 URL : "https://github.com/wpaccessibility/settings-api-enhanced/issues/6" TITLE : css naming conventions BODY : as discussed on slack, see https://wordpress.slack.com/archives/c02rqbwtw/p1491840082372116 we should try to establish good css naming conventions. also worth considering the css classes used for the fields can be re-used in other contexts, for example in the future fields api and in any other part of the admin. some points emerged during the discussion: - the general issues is trying to establish easy and maintainable patterns, taking into considerations the css roadmap https://make.wordpress.org/core/2014/12/19/core-css-roadmap/. - keep selectors specificity as low as possible, avoid overqualified selectors - helen hou-sandí suggested selectors should also provide a context: - in an ideal world, you would have some baseline stuff for elements themselves, and then you scope upward to apply specific stuff based on context as needed . - the goal should be for people devs to not have to do anything involving class names or css the vast majority of the time. - helen hou-sandí will try to start a doc to dump thoughts on the best option we have for css naming - css classes to target stuff in js: they should be separate from classes used for styling - css classes for state naming for js e.g. .is-active or .is-dismissible