 URL : "https://github.com/doctrine/dbal/issues/2860" TITLE : creating an async api BODY : guzzle http://docs.guzzlephp.org/en/stable/ has a really nice async api http://docs.guzzlephp.org/en/stable/quickstart.html async-requests . i put async in quotes because it's not really async it's more just _concurency_. curl has support to execute more than one request at a time. guzzle will group the requests and execute them together, then it will group the next level down and execute them together and so on until all of the requests and callbacks are completed. something they don't add to the docs is that you must call wait or the request s are never executed because it's basically just a huge array of requests . i noticed that pdo::execute http://php.net/manual/en/pdo.exec.php allows more than one query to be executed without a result set , and pdostatement::nextrowset http://php.net/manual/en/pdostatement.nextrowset.php will allow access to multiple row sets on queries that have multiple result sets. it kind of looks like pdo will allow concurrent queries just like curl will allow concurrent requests. i think it would be helpful if there was some sort of async api that would return a _promises/a+_ promise. you'd still have to call wait just like guzzle, but it would make it really convenient to group and ungroup queries together so queries can be executed concurrently without making a huge mess.