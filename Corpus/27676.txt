 URL : "https://github.com/haltu/muuri/issues/12" TITLE : drag sort predicate BODY : currently the drag sort predicate is hard coded and can only be configured using the dragsortaction and dragsorttolerance options. however, there might be cases where the default drag predicate is not sufficient, for example if the user provides a custom layout algorithm. with this in mind i though it might be a good idea to provide a way to allow the user to define a custom drag sort predicate. the idea is to provide a new option called dragsortpredicate , which accepts either an object or a function. when an object is provided muuri uses the default drag sort predicate, which can be configured by adding threshold and action properties to the configuration object. by default the object would be something like {threshold: 50, action: 'move'} . when a function is provided muuri calls the function during each drag event with the dragged muuri.item instance as it's first and only argument and expects the function to return a falsy value if no sorting is wanted and an object if sorting is wanted. the returned object should contain target item's current and new index and how information on how to move it move or swap . basically the data should be something like this: {action: 'move', from: 0, to: 1} .