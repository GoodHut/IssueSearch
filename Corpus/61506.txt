 URL : "https://github.com/astro/node-expat/issues/173" TITLE : aws lambda registration BODY : as there is no install process when using amazon's serverless functionality and it runs data from what has been zipped up, all packages need to be installed before it's pushed up. that's typically not an issue unless you have to compile some c++ for a specific server. luckily aws is nice enough to let everyone know what lambda runs on. http://docs.aws.amazon.com/lambda/latest/dg/current-supported-versions.html so, spin up an aws ec2 instance based on the current ami that is used for lambda, install node, python, gcc and install node-expat? sure, everything compiles fine. take that package, require it and test nothing more than a basic require in lambda and we fail. { errormessage : module did not self-register. , errortype : error , stacktrace : object.module._extensions..node module.js:434:18 , module.load module.js:343:32 , function.module._load module.js:300:12 , module.require module.js:353:17 , require internal/module.js:12:17 , bindings /var/task/node_modules/node-expat/node_modules/bindings/bindings.js:76:44 , object.<anonymous> /var/task/node_modules/node-expat/lib/node-expat.js:4:32 , module._compile module.js:409:26 , object.module._extensions..js module.js:416:10 } it seems that the internet's basic fix is to rm -rf node_modules and reinstall it. well, that doesn't help. i'm lost as to what's failing but something isn't working and i have no idea where to go from here. any ideas to try out? it's quite easy to test, spin up an ec2 instance, install node-expat and push your code to lambda.