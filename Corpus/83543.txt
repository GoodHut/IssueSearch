 URL : "https://github.com/go-python/gopy/issues/130" TITLE : cffi: regression in hi.go BODY : while working on the unification of tests between py2 and cffi , i noticed this: diff --- /tmp/gopy-100408799/want.txt	2017-08-05 15:13:22.227327254 +0200 +++ /tmp/gopy-100408799/got.txt	2017-08-05 15:13:22.227327254 +0200 @@ -98,9 +98,9 @@ hi.couple{p1=hi.person{name= p1 , age=42}, p2=hi.person{name= p2 , age=52}} hi.couple{p1=hi.person{name= p1 , age=42}, p2=hi.person{name= p2 , age=52}} hi.couple{p1=hi.person{name= p2 , age=52}, p2=hi.person{name= p1 , age=42}} -caught: invalid type for 'p1' attribute | err-type: <type 'exceptions.typeerror'> -caught: invalid type for 'p1' attribute | err-type: <type 'exceptions.typeerror'> -caught: invalid type for 'p2' attribute | err-type: <type 'exceptions.typeerror'> +caught: 'int' object has no attribute 'cgopy' | err-type: <type 'exceptions.attributeerror'> +caught: 'int' object has no attribute 'cgopy' | err-type: <type 'exceptions.attributeerror'> +caught: 'int' object has no attribute 'cgopy' | err-type: <type 'exceptions.attributeerror'> --- testing gc... --- len objs : 100000 --- len vs : 100000 ie: the cffi backend does not or -along the way- fails to properly type check the provided parameters. also it raises an internal error. the failing test: py try: hi.couple 1 print error no exception raised! except exception as err: print caught: , err, | err-type: ,type err pass try: hi.couple 1,2 print error no exception raised! except exception as err: print caught: , err, | err-type: ,type err pass try: hi.couple p2=1 print error no exception raised! except exception as err: print caught: , err, | err-type: ,type err pass