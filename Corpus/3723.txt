 URL : "https://github.com/lancaster-university/microbit-dal/issues/271" TITLE : todos in code BODY : fyi, here is a capture of the current list of todo markers in the microbit-dal codebase: microbitdevice.h todo: determine if any of this belongs in an mbed target definition. todo: review microbit-dal to place all such functions here. microbitfiber.h todo: consider a split mode scheduler, that monitors used stack size, and maintains a dedicated, persistent microbitheapallocator.h todo: consider caching recently freed blocks to improve allocation time. microbitradio.h todo: the protocols implemented here do not currently perform any significant form of energy management, todo: meshing should also be considered - again a glossy approach may be effective here, and highly complementary to todo: this implementation only operates whilst the ble stack is disabled. the nrf51822 provides a timeslot api to allow microbitblemanager.cpp // todo: it would be much better to implement some sort of lru/nfu policy here, microbitdfuservice.cpp // todo: raise a system event here. microbitheapallocator.cpp todo: consider caching recently freed blocks to improve allocation time. dynamicpwm.cpp todo: merge into mbed, at a later date. microbitdisplay.cpp todo: write a more efficient, complementary variation of this method for the case where //todo: put this in when we merge tight-validation microbitradio.cpp todo: the protocols implemented here do not currently perform any significant form of energy management, todo: meshing should also be considered - again a glossy approach may be effective here, and highly complementary to todo: this implementation may only operated whilst the ble stack is disabled. the nrf51822 provides a timeslot api to allow microbitimage.cpp todo: consider an immutable flavour, which might save us ram for animation spritesheets...