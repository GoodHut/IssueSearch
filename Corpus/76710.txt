 URL : "https://github.com/FACN3/domdomdom/issues/23" TITLE : lots of global variables BODY : there are a bunch of global variables in your application that could be contained within functions. this would stop you from accidentally breaking the functionality of one function with another. it's really important to separate your concerns! https://github.com/facn3/domdomdom/blob/master/js/logic.js l1-l5 every one of those variables could be moved within other functions in your application. for example searchword is a variable that's only used within an addeventlistener at the top of logic.js. it could therefore just be declared within that function and removed it from the global scope. the exact same thing applies for url1 and url2. dataw and datag are the same, they are only ever used within searchwordfunc so could just be declared there: js function searchwordfunc guardianurl, wikiurl { var datag; var dataw; fetch guardianurl, function data { datag = filterguardian data ; if count == 2 { datatodomg datag ; datatodomw dataw ; } } ; fetch wikiurl, function data { dataw = filterwiki data ; if count == 2 { datatodomg datag ; datatodomw dataw ; } } ; } i would also move count to the searchwordfunc strange capitalisation on func rather than mixing it in with fetch . that way you could easily add further api calls that act on other sections of your app without messing up the count of the two calls you _do_ want to wait for each other. it would also mean that every time searchwordfunc runs it resets the count to 0. currently your count just keeps going up, so if you make multiple api calls they won't work as expected anymore. this is a great example of what i mean by separating your concerns. ! count https://user-images.githubusercontent.com/22300773/32881589-63e0ddd8-caba-11e7-9814-f073667f4c2d.gif