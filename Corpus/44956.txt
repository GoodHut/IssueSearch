 URL : "https://github.com/climu/openstudyroom/issues/22" TITLE : get player results im BODY : the current way the results of a player are stored is via a string that stores a serialized dict, that is eval'ed to get the dict back. as each game has 3 foreign keys to players black, white and winner we can generate the very same results dict from the database directly. this means we no-longer have to keep the serialized dicts in sync with the actual played games. it also closes a security hole where we are eval'ing player names. those could theoretically contain python code . given that we are going to be deleting matches as per issue 18 this is going to save a lot of time. a similar thing could be done to leageplayer.nb_wins and leagueplayer.nb_losses, at which point i think we wouldn't need to modify a leagueplayer at all when deleting a game. the solution would look something like below, this is fully of the cuff, i haven't even checked if it has syntax errors. from collections import defaultdict from collections import defaultdict def get_results self : blackgames = self.black.get_queryset whitegames = self.black.get_queryset resultsdict = defaultdict list for game in blackgames: opponent = game.white won = game.winner == self record = { 'id': game.pk, 'r' : 1 if won else 0 } resultsdict opponent.kgs_username .append record for game in whitegames: opponent = game.black won = game.winner == self record = { 'id': game.pk, 'r' : 1 if won else 0 } resultsdict opponent.kgs_username .append record should performance ever be an issue, this function could be cached.