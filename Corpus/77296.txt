 URL : "https://github.com/snoweye/pbdRPC/issues/3" TITLE : multiple machine configs BODY : i was working on something like this a year ago, but the pbdrpc design is so radically different, it wouldn't be easy to integrate. basically what i'd like to have is an easy way to handle multiple machine configurations. what i want to be able to do is r rpc cmd= uname , machine=newton rpc cmd= uname , machine=beacon etc. i actually think it would be worth changing the current interface for something like this, since in the long run it would be much simpler. in my original plan, machine configs were s4 objects, but that's not really necessary and i'm not sure i would do it that way again anyway . but i think all of the .pbd_env$rpc_li$ objects could be moved to a machine object maybe s3/attribute just for error checking . maybe something like: r machine <- function user, hostname, args= , pport=22, priv.key= ~/.ssh/id_rsa , priv.key.ppk=.pbd_env$rpc.li$priv.key.ppk { m <- list args=args, pport=pport, user=user, hostname=hostname, priv.key=priv.key, priv.key.ppk=priv.key.ppk class m <- remote_machine return m } print.remote_machine <- function x, ... { cat paste0 machine config for , x$user, @ , x$hostname, cat paste0 args = \ , x$args, \ cat paste0 pport = , x$pport, cat paste0 priv.key = , x$priv.key, cat paste0 priv.key.ppk = , x$priv.key.ppk, } then you would be able to just do: r myvm <- machine wrathematics , 192.168.0.10 rpc uname , myvm there's nothing high minded here, but i really think this way of organization is worth considering.