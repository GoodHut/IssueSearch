 URL : "https://github.com/matterhorn-chat/matterhorn/issues/281" TITLE : missing message management BODY : currently matterhorn is optimistically fetching a certain number of messages 100 each time a channel is selected. the number fetched is frequently much larger than the displayable amount, which ensures that the display is full, but it is inefficient, especially when channels are being scrolled over. more significantly, this same fetch is performed on a websocket reconnect event. there is currently no logic to handle the case where the disconnect may have been for a period of greater than the preset number of messages, which will result in the user missing messages. for example, if bob closes his laptop when he leaves work on friday and the latest message in the current channel is 32, and then he resumes his laptop monday morning and the latest message in the current channel is 232, matterhorn will fetch messages 133- 232, but will not fetch 33- 132, and it will not have any trigger to subsequently fetch those messages, nor an indication to bob that those messages are missing. a naive solution to this would be to continue fetching messages until matterhorn starts seeing duplicates, at which point it knows it has fetched the entire history. however, this could be problematic in the case where bob was gone for a week instead and there were several thousand messages in many channels. there should be a better way for matterhorn to identify where it is possibly missing messages without the overhead of actually fetching all of those messages.