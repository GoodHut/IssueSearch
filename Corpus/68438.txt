 URL : "https://github.com/kpreid/shinysdr/issues/75" TITLE : rtty demod doesn't work BODY : given a very clean signal like one i generate with fldigi it _almost_ works, but still with some errors. :disappointed: i suspect this is because gr-rtty accumulates rounding error in its timing as it samples each symbol. https://github.com/bistromath/gr-rtty/blob/master/lib/rtty_decode_ff_impl.cc l109 more investigation to be done for sure. wanted to attach some work in progress for others to follow along. included here is a grc chart i've been using to play around. the example that comes with gr-rtty uses a quadrature demod, but from what i've read, that approach performs poorly in the presence of selective fading and isn't really used these days. so i was playing with what i think kids these days are calling am detection , really just two filters tuned to each of the mark and space frequencies. apparently this is how fldigi does it, and it references this neat paper on threshold detection. seems like the threshold detection is where the non-obvious design decisions are made. http://www.w1hkj.com/fldigihelp-3.21/html/rtty_page.html http://www.w7ay.net/site/technical/atc/ also included are some recordings. they are the usual 45.45 baud rtty, 170 hz spacing, centered on 2khz audio. there are a couple calling cq, one with ryryry... alternating marks and spaces , and one with empty diddles. rtty.zip https://github.com/kpreid/shinysdr/files/1033215/rtty.zip will update this issue later with progress over the weekend, with any luck.