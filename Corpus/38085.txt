 URL : "https://github.com/renaesop/blog/issues/21" TITLE : node c++ addon杂谈 BODY : 网上谈node c++扩展的文章种类比较单一，基本上都是在说怎么去写扩展，而对模块本身的解读相当少，笔者恰巧拜读了相关代码，在此做个记录。 node如何加载原生模块 朴灵老师的《深入浅出node.js》一书其实有谈过这个问题，但是随着node项目的演进，已经发生了一些微妙的变化。 原生模块被存在链表中，原生模块的定义为: cc struct node_module { int nm_version; unsigned int nm_flags; void nm_dso_handle; const char nm_filename; node::addon_register_func nm_register_func; node::addon_context_register_func nm_context_register_func; const char nm_modname; void nm_priv; struct node_module nm_link; }; 原生模块被分为了三种， 内建 builtint 、 扩展 addon 、 已链接的扩展 linked ，分别含义为: - 内建：node.js的原生c++模块， - 扩展: 用require来进行引入的模块 - 已链接的扩展：非node原生模块，但是链接到了node可执行文件上