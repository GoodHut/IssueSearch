 URL : "https://github.com/bitwiseworks/mozilla-os2/issues/250" TITLE : decide on mmap usage in js BODY : historically, mozilla code uses raw dosalloc shared mem where big chunks of memory are needed. this includes various js memory allocators. while it might look feasible to use the fresh mmap implementation that is provided by libcx just like on unix platforms to simplify code, there are a couple of thoughts against it: 1. in most of the use cases, only memory itself is needed, it's not backed up by any file, i.e. mmap_anonymous is used it's just that this is how big chunks of memory are allocated on unix historically . on os/2 we have a kernel api to do so, just like on windows, so using it directly allows to avoid mmap overhead. 2. the mmap implementation provided by libcx is far from being perfect, it has some edge cases mostly because it's impossible to fully implement the requested behavior without the support from the kernel, which we lack, this includes support for c-o-w memory pages in the first place . in most places in mozilla dosallocmem is already used where mmap map_anon is used. however, there are some places where mmap is now used even on os/2. this should be changed to dosallocmem . this is js code in js/src/vm/arraybufferobject.cpp and js/src/vm/sharedarrayobject.cpp . there is also one place where mmap is used to map a file. this can't be changed to dosallocmem and we have to use libcx mmap for that because this is what it was initially done for. this code is js shell js/src/shell/js.cpp . as far as i understand, this code isn't used in firefox itself, but the shell itself is heavily used in various js test frameworks and we need that. see 247 . currently, there are some problems with libcx msync which cause js to crash, see https://github.com/bitwiseworks/mozilla-os2/issues/247 issuecomment-346048314.