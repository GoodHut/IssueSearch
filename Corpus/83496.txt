 URL : "https://github.com/the-tcpdump-group/libpcap/issues/626" TITLE : capture len vs packet len BODY : i am running into a rare segfault when running my libpcap program against afl . it seems like i am overwriting some memory i previously used. the conditions seem to be where the capture length is large, in this case 9310, and the packet length are more normal sized, 54. in the real world is this possible? should i just be guarding against large differences between capture and packet length? my code does something like: u_char copy_pkt = u_char malloc pkthdr->caplen ; memcpy copy_pkt, pkt, pkthdr->caplen ; and then later attempts to access some memory containing some configuration data, which triggers the segfault: if table_id >= ctx->raw_config->num_tables { gdb print ctx->raw_config->num_tables cannot access memory at address 0x7ffff74d020b thanks for any help you can provide! system details: root@jessie:/vagrant tcpdump --version tcpdump version 4.9.2 libpcap version 1.6.2 openssl 1.0.1t 3 may 2016 root@jessie:/vagrant uname -a linux jessie 3.16.0-4-amd64 1 smp debian 3.16.43-2+deb8u2 2017-06-26 x86_64 gnu/linux root@jessie:/vagrant cat /etc/issue debian gnu/linux 8 \l