 URL : "https://github.com/RedPRL/sml-telescopes/issues/12" TITLE : efficiency of telescopes BODY : currently, the bottleneck of redprl is the the telescopes. it needs a deque, which is implemented as a list now. there are many plausible approaches: 1. deques as pairs of lists: constant amortized time. 2. deques as four lists: constant time in the worst case. see okasaki's thesis. 3. deques as finger trees: constant time even with persistency. the issue of 1 is that, depending on how we use telescopes, the amortized analysis might not apply. 3 is beautiful and clean but needs polymorphic recursion which afaik will be ugly in sml.