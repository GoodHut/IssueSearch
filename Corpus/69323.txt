 URL : "https://github.com/MeirionHughes/aurelia-template-lint/issues/153" TITLE : support typeof operator BODY : item.ts // see https://github.com/microsoft/typescript/issues/3192 function mkenum<t extends { index: string : u}, u extends string> x: t : t { return x; } type enumtype<t> = t keyof t ; export const itemtype = mkenum { a: a , b: b , } ; export type itemtype = enumtype<typeof itemtype>; export interface item { name: string; type: itemtype; } export class itemviewmodel { item: item; get itemtype : typeof itemtype { return itemtype; } } item.html <template> ${item.name} <template if.bind= item.type === itemtype.a > a </template> <template if.bind= item.type === itemtype.b > b </template> <template if.bind= item.type === itemtype.c > c </template> </template> typeof itemtype is {a: a , b: b } -> itemtype.c should throw a warning.