 URL : "https://github.com/LonamiWebs/Telethon/issues/122" TITLE : msg_id attribute clash BODY : my bot crashed today with: file .../telethon/telegram_client.py , line 226, in invoke file .../telethon/telegram_bare_client.py , line 189, in invoke file .../telethon/network/mtproto_sender.py , line 105, in receive file .../telethon/network/mtproto_sender.py , line 215, in _process_msg file .../telethon/network/mtproto_sender.py , line 299, in _handle_bad_server_salt file .../telethon/network/mtproto_sender.py , line 57, in send file .../telethon/network/mtproto_sender.py , line 57, in send file .../telethon/tl/functions/messages/get_bot_callback_answer.py , line 50, in on_send file .../telethon/extensions/binary_writer.py , line 30, in write_int overflowerror: int too big to convert this happened in response to: self.invoke getbotcallbackanswerrequest peer=get_input_peer entity , msg_id=message.id, data=data, where message was a message . based on my investigation i think this was caused by the attribute name clash between mtprotorequest.msg_id and getbotcallbackanswerrequest.msg_id . i believe what happened was that after my getbotcallbackanswerrequest was sent for the first time, mtprotosender._send_packet overwrote request.msg_id with a freshly generated message id. then when the request was sent the second time in the bad salt handler , its msg_id was already corrupted. luckily, it was corrupted with a long integer, which crashed the converter and thus it didn't come thru pointing to a wrong message. from what i see msg_id is also used in some other request classes such as getpaymentformrequest so it should rather be renamed in mtprotorequest .