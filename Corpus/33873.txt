 URL : "https://github.com/ldionne/libawful/issues/1" TITLE : awful callable types BODY : have you considered adding callable types that overload the operator on combinations of lr-value-ness vs const-ness ? e.g. .cpp struct void_ {}; struct rvalueconstcallable { constexpr void_ operator ... const&& { return {}; } }; this would be useful to check whether generic algorithms forward callable objects correctly up to the point they are invoked.