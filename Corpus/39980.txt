 URL : "https://github.com/hashicorp/vault/issues/2872" TITLE : support token chroot BODY : policies make it very difficult to support a hierarchy of secrets. ideally we'd like a token to be able to issue a token that has read writes to a subset of the secrets of the parent, rather than a subset of the policies. at present our secret authorization service has to have the write to manage policies, which essentially give it root access we have some window dressing to pretend otherwise, but the service could create a policy to circumvent this if it were tricked into doing so . making the policies themselves hierarchical seems difiicult, due to the power of the policy definition language. but perhaps a token could have an attribute that would limit the set of paths that could be accessed, and then checks added to token creation that verified that these paths were only every sub-paths of the existing ones? would such an approach be acceptable? i can look at putting together a more formal description, and potentially an implemention if you think this has merit. essentially i want to be able to issue token with access to a subset of the secret i have access to without having to generate a policy on the fly and/or a token role , or have a pre-existing one and have to repeatedly reissue tokens to the authz server as new paths become available .