 URL : "https://github.com/caolan/async/issues/1465" TITLE : memoize on success only BODY : this would be a breaking change. in today's world, if a memoized function errors on initial call, it will error on all future calls. i would have expected the memoization to only occur on success. this seems like a reasonable assumption given that a typical use-case for an async.memoize would be an external call. example case: const getqueueurl = async.memoize function queuename, cb { async.waterfall function cb { sqs.getqueueurl queuename, cb ; }, function { queueurl }, cb { cb null, queueurl ; }, , cb ; } ; if the sqs queue has not been fully initialized by the time getqueueurl is invoked initially, all future invocations of getqueueurl will fail, even after the queue has been fully initialized. i would be happy to either create a pull request to only memoize on success or update the documentation to clarify that the function will be memoized regardless of success or error.