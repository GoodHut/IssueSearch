 URL : "https://github.com/quicwg/base-drafts/issues/733" TITLE : acknowledging _close BODY : the current text suggests that the sender of connection_close keep sending the final packet in response to subsequent incoming packets with a backoff, until you wait long enough that you figure the other side probably figured it out and stopped sending. @nibanks points out that if you have a quic object that represents the connection, this means that the object and its data can't actually go away until the timeout is done. is there value in having a short-circuit by which the sender of _close can be sure it was received and go away early? the obvious solution is to suggest responding to a _close with a matching _close, but that just moves the timeout to the other side. given that servers are likely to have a persistent connection management layer, that might be acceptable, but isn't so perfect for peer-to-peer applications.