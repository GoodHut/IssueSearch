 URL : "https://github.com/testdouble/testdouble.js/issues/243" TITLE : faking internal calls BODY : hi, i'd like to know how to mock internal calls in this specific scenario: module1.js function function1 { //some logic code return module2.function2 arg1 ; } i want to fake function2, but the code under test, which is function1, runs the real implementation. right now, i'm stuck with this solution: const module1 = require 'path/to/module1.js' ; it 'should return fake function2', => { //arrange let function2return = { test:'test', test2:'test2' }; //module2.js contains function2 let mod2= testdouble.replace 'path/to/module2.js' ; testdouble.when mod2.function2 .thenreturn function2return ; //act //module1.js contains function1 let result = module1.function1 ; //assert assert.strictequal 'test2',result.test2 ; } ; how do i call real implementation of function1 but using the fake implementation of function2 ? thanks