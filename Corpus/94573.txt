 URL : "https://github.com/rust-lang/rust/issues/42190" TITLE : cfg doesn't work on no_std BODY : i'm working on a no_std crate that i'd like to test and also compile in a std environment. working with includes is a little painful right now because cfg no_std doesn't seem to work. as an example, i'd expect the following code to work both with and without no_std commenting out the first line. instead, it doesn't work as written below but will work if you comment out no_std . rust ! no_std cfg no_std use core::mem; cfg not no_std use std::mem; fn main { let x: u32 = unsafe { mem::uninitialized }; } you'll see the following error: shell error e0432 : unresolved import std::mem --> <anon>:6:5 | 6 | use std::mem; | ^^^^^^^^ maybe a missing extern crate std; ? cc @japaric this is something i mentions in your users forum thread about embedded dev.