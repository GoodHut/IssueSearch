 URL : "https://github.com/ucdrascal/axopy/issues/9" TITLE : idea for experiment design BODY : need - different subjects do tasks with slightly different conditions - different subjects may do different tasks altogether different order maybe - ability to have a single subject advance to a new set of tasks return visit idea - tasks take every configurable parameter in __init__ - experiment author doesn't instantiate tasks directly but specifies the class and the set of parameters instead - participant selection also includes setting a condition that comes from the experiment design specification - use the concept of an experiment design that specifies a set of experiment conditions, and for each condition, a list of task_name, task_class, task_params tuples - subject pools group a, group b and return visits should both be possible under this scheme python class sometask task : def __init__ self, param1=default, param2=default... : ... class othertask task : def __init__ self, param1=default1, param2=default2... : ... one mechanism for the user to set some parameters like colors globally task_defaults = {'bg_color': ' 444444} other_task_params = {'param1': nondefault, task_defaults} experiment_design = { 'condition_a': 'task1', sometask, {'param1': val_a, task_defaults} , 'task2', sometask, {'param2': val, task_defaults} , 'task3', othertask, other_task_params , 'condition_b': 'task1', sometask, {'param1': val_b, task_defaults} , 'task3', othertask, other_task_params } notes - could probably be fully json with strings for class names - in most cases, this is pretty verbose -- perhaps allow for a simpler alternative for experiment designs with only one condition - need to think more about how data storage will handle/utilize this information -- specifically data dependencies between tasks