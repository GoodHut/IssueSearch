 URL : "https://github.com/bluss/rust-ndarray/issues/339" TITLE : ndarray trait BODY : we need to traitify the array types, so that we shift from using arraybase for generic programming to something more flexible. imagine a sketch: rust pub fn std_axis<t> array: t -> array<t::elem, t::dim::smaller> where t: ndarray, t::elem: num, { // implementation here. } foreseen problems: how do we conditionalize methods? - can mutate the axes or view - can mutate elements - etc