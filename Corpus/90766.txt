 URL : "https://github.com/iovisor/bcc/issues/1177" TITLE : statustuple vs exceptions BODY : https://github.com/iovisor/bcc/blob/e2a037779c2b8c6ca83648699f0af670668a92b5/src/cc/bcc_exception.h i know this was a hot topic of debate when it was first introduced, but i truly do not understand why there's a customized error/value wrapper thrown around the api. this is a c++ library, and it should use c++ features. if we're opposed to exceptions for performance reasons which doesn't make any sense in this context we can adopt a non-half-baked version of statustuple, e.g. folly::try https://github.com/facebook/folly/blob/master/folly/try.h. i don't know why else we'd be opposed to exceptions. statustuple is a crippled exception supporting only opaque integer codes and an overflow-prone char message buffer. am i missing something? if you have to wrap a small and basic abstraction in a macro to make it usable in the common case see try2 , it's not a useful abstraction.