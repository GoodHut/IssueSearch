 URL : "https://github.com/libuv/libuv/issues/1439" TITLE : crash in heap_remove BODY : <!-- if you want to report a bug, you are in the right place! if you need help or have a question, go here: https://github.com/libuv/help/issues/new please include code that demonstrates the bug and keep it short and simple. --> libuv 1.9.1 : <!-- libuv version --> centos 7.3 : <!-- uname -a unix , or windows version and machine type --> stack trace 0 0x0000000000e45244 in heap_remove less_than=0xe45110 <timer_less_than>, node=0x4a27f08, heap=0x3496218 at libuv/1.9.1/src/heap-inl.h:196 1 uv_timer_stop handle=handle@entry=0x4a27ea0 at libuv/1.9.1 /src/unix/timer.c:97 2 0x0000000000e454dd in uv_timer_again handle=0x4a27ea0 at libuv/1.9.1/src/unix/timer.c:111 3 0x0000000000e4559b in uv__run_timers loop=loop@entry=0x3496010 at libuv/1.9.1/src/unix/timer.c:165 4 0x0000000000e38fd0 in uv_run loop=0x3496010, mode=uv_run_default at libuv/1.9.1/src/unix/core.c:345 it seems the child pointer is null have around 500 timers . for now i added a work around to not crash here: heap-inl.h:193 // hack hack: not sure why we end up with null here but crashes the server if child == null || node == null { return; }