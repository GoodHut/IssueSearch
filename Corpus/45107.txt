 URL : "https://github.com/ewwhite/zfs-ha/issues/13" TITLE : ha for encrypted zfs? BODY : hello @ewwhite, do you know or should i start poking around and report what i see? what the ramifications of native zfs encryption https://github.com/zfsonlinux/zfs/pull/5769 would be on this kind of system? obviously, encryption-at-rest is an awesome thing to have in general and it's finally here on zol . reading through the zfs https://raw.githubusercontent.com/tcaputi/zfs/5aef9bedc801830264428c64cd2242d1b786fd49/man/man8/zfs.8 and zpool https://raw.githubusercontent.com/tcaputi/zfs/4dc6b7f660909e8e9bb54c628b4a89cab4836eb9/man/man8/zpool.8 manpages, having keylocation=prompt wouldn't work, but setting it to file://file. hex|raw|passphrase and doing zpool import -l seems realistic so long as the keylocation isn't inside the pool, obviously . we'd probably want to zfs unload-key asap inside the pool that died too, but encrypted mounts can't happen if zfs keystatus property is unavailable . maybe there should be some logic around the encryptionroot property; something like: import the pool so long as at least one filesystem in the pool doesn't have this property set, for instance. then it would at least mount _something_ regardless of keystatus, and encrypted datasets could be manually mounted later? what are your thoughts? i feel like this will be quite the undertaking..