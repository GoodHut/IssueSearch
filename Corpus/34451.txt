 URL : "https://github.com/pipermerriam/web3.py/issues/288" TITLE : changes to web3.sha3 BODY : what was wrong? currently, the implementation of web3.sha3 has some unexpected behavior and non ideal behavior. 1. it uses the web3_sha3 rpc endpoint which allows for different providers to return different values. 2. by default it expects the value to be hashed to be passed in as a hex encoded string. 3. if you specify any encoding besides hex, it treats it as if it was bytes. how can it be fixed? 1. use eth_utils.keccak to compute the hash. this is more reliably going to produce the result that users expect as well as reducing rpc request overhead. 2. change the default encoding to bytes . this would be a breaking change so figuring out how to deprecate the current behavior while giving users the appropriate time to upgrade would be ideal. this could be done in a two step process. we should have an explicit list of encodings that are supported and have logic for dealing with those appropriately. i suggest bytes , utf8 , and hex .