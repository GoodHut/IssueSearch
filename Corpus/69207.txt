 URL : "https://github.com/silt-lang/silt/issues/43" TITLE : support absurd patterns BODY : sema is aware of absurd patterns, which allow one to omit the body of a function when pattern clauses cause contradictions. proj : forall {n : n} {x : type} → vec x n → fin n → x proj proj cons x xs zero = x proj cons x xs suc i = proj xs i the syntax for this needs to be added to the grammar and to the parser. scope check need not concern itself with whether performing an inversion on the parameter will introduce a contradiction, it just needs to lower down to an empty clause.body .