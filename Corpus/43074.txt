 URL : "https://github.com/KantaraInitiative/wg-uma/issues/263" TITLE : claim token profiling BODY : also see 119. mike suggested: why not just link to: http://openid.net/specs/openid-connect-core-1_0.html idtoken also, the id_token reference in general is very confusing to me, because user_claims are optional in the id_token--some implementations may only return user claims in the userinfo jwt. in fact, what's the point of using the code flow if you return the claims in the id_token? you might as well use implicit flow, because you're obtaining use claims without client authentication at the token endpoint... my response: one of the open issues is to consider defining a couple of proper claim token profiles, one for oidc likely as you suggest above and probably one for saml assertions. hybrid was meant to allow extension claims, and that's something we should be sure to allow, one way or another. thoughts? his response: to me, hybrid flow means code + token|id_token and it may include the c_hash for code id_token and code token id_token . i don't know what you mean about hybrid allowing extension claims. most people have no idea what hybrid flow is about. jones|bradley edited out most of the background info in the openid connect specs to minimize editorial discussions. but as a result, it's not terribly clear--maybe i'm missing something. i still think it would be better to use the id_token link.