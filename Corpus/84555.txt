 URL : "https://github.com/golang/go/issues/19710" TITLE : defer+delete argument bug BODY : please answer these questions before submitting your issue. thanks! what version of go are you using go version ? go 1.8. also happens on play.golang.org. what operating system and processor architecture are you using go env ? goarch= amd64 gobin= goexe= gohostarch= amd64 gohostos= darwin goos= darwin what did you do? evaluate this code: package main import fmt func main { fmt.println should be 0: , len foobar } func foobar map int bool { m := map int bool{} for i := 0; i < 3; i++ { m i = true defer delete m, i } return m } what did you expect to see? should be 0: 0 what did you see instead? should be 0: 2 the defer statement is supposed to freeze its arguments the instant it is evaluated, but it does not when used with delete . compare to this program, which works correctly: package main import fmt func main { fmt.println should be 0: , len foobar } func foobar map int bool { m := map int bool{} for i := 0; i < 3; i++ { m i = true defer mydelete m, i } return m } func mydelete m map int bool, k int { delete m, k }