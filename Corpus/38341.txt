 URL : "https://github.com/hakaru-dev/hakaru/issues/91" TITLE : partition unit tests BODY : it is a relatively new and complicated part of the hakaru simplification process, and almost all test cases contain piecewise and all piecewise will spend some most time as partitions. it stands to reason that partition could use some unit tests. in 85, we decided this would be a good way of ensuring certain nice properties which we would like on the haskell side, as implementing partition on the haskell side is likely more trouble than it's worth. - a corpus of partitions representative of the typical partitions that are seen while simplifying hakaru programs is needed. collecting such a corpus from the test cases should be straightforward. we should collect both those partitions which are unsimplified and simplified. this should probably include some sums of partitions and products of partitions with scalars. - the properties which we want to hold need to be identified. each property should apply to every partition in the corpus; potentially, a property may hold on a given unsimplified partition only after it has been simplified. the properties already known: - pwtopartition @ partitiontopw is the identity - partitiontopw @ pwtopartition is the identity this is somewhat less necessary - partition:-simpl is idempotent - x->partition:-simpl x,do_solve is idempotent - x->pwtopartition x,do_solve @ partitiontopw is idempotent - partitiontopw @ x->pwtopartition x,do_solve is idempotent it's unclear if we want these properties to hold up to list semantics i.e. propositional equality or up to samepartition which gives set semantics to partitions .