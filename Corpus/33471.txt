 URL : "https://github.com/nuwave/lighthouse/issues/15" TITLE : add query as a query BODY : so this is not really an issue, but i think it's worth discussing and i want it documented so that other people might find a use for it. the background to this discussion is this issue https://github.com/facebook/relay/issues/112 . the current version of relay 0.10 doesn't support root fields/queries to be arrays. in the linked issue above they suggest a workaround until relay 2 is released. an updated version of the workaround has been suggested in this issue: https://github.com/lucasbento/graphql-pokemon/issues/1 i don't think we should build support for this, since relay 2 is coming, but the easiest way to add this to a project would be to extend graphql - since it's registered through laravel's service container, and override the buildschema -method: nuwave\lighthouse\graphql php public function buildschema { ... $fields = $querytype->config 'fields' ; $fields 'query' = 'args' => , 'type' => $querytype, 'resolve' => function { return true; // we need to have a closure that returns something } ; $querytype->config 'fields' = $fields; ... return new schema 'query' => $querytype, 'mutation' => $mutationtype, 'types' => $this->typeswithinterfaces->all , ; one could get away with doing something similar in their extension if they first call the parent on the overridden method buildschema and then get the mutations, queries and types from the generated schema, and then generate a new schema. this is not recommended, since this package will most likely change.